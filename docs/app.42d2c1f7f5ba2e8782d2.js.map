{"version":3,"file":"app.42d2c1f7f5ba2e8782d2.js","mappings":"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","sources":["webpack://roguelikedev-2022/./src/styles/style.css","webpack://roguelikedev-2022/./node_modules/css-loader/dist/runtime/api.js","webpack://roguelikedev-2022/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://roguelikedev-2022/./src/styles/style.css?ff94","webpack://roguelikedev-2022/./src/js/actions/_Action.js","webpack://roguelikedev-2022/./src/js/actions/NoAction.js","webpack://roguelikedev-2022/./src/js/actions/UnableToPerformAction.js","webpack://roguelikedev-2022/./src/js/message/SubMessage.js","webpack://roguelikedev-2022/./src/js/message/Message.js","webpack://roguelikedev-2022/./src/js/message/MessageManager.js","webpack://roguelikedev-2022/./src/js/Engine.js","webpack://roguelikedev-2022/./src/js/SceneState.js","webpack://roguelikedev-2022/./src/js/controls/Key.js","webpack://roguelikedev-2022/./src/js/controls/Controls.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/_ActionWithDirection.js","webpack://roguelikedev-2022/./src/js/util/HexUtil.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/MeleeAction.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/MovementAction.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/BumpAction.js","webpack://roguelikedev-2022/./src/js/actions/WaitAction.js","webpack://roguelikedev-2022/./src/js/event/DefaultPlayerEventHandler.js","webpack://roguelikedev-2022/./src/js/event/_EventHandler.js","webpack://roguelikedev-2022/./src/js/components/_Component.js","webpack://roguelikedev-2022/./src/js/components/ai/_AI.js","webpack://roguelikedev-2022/./src/js/components/ai/AIDead.js","webpack://roguelikedev-2022/./src/js/components/Fov.js","webpack://roguelikedev-2022/./src/js/pathfinding/HexNode.js","webpack://roguelikedev-2022/./src/js/pathfinding/BinaryHeap.js","webpack://roguelikedev-2022/./src/js/pathfinding/AStar.js","webpack://roguelikedev-2022/./src/js/pathfinding/Graph.js","webpack://roguelikedev-2022/./src/js/map/fov/CustomFov.js","webpack://roguelikedev-2022/./src/js/map/fov/_BaseFov.js","webpack://roguelikedev-2022/./src/js/actions/WanderAction.js","webpack://roguelikedev-2022/./src/js/components/ai/AIMeleeChase.js","webpack://roguelikedev-2022/./src/js/components/BlocksFov.js","webpack://roguelikedev-2022/./src/js/components/BlocksMovement.js","webpack://roguelikedev-2022/./src/js/components/Faction.js","webpack://roguelikedev-2022/./src/js/components/Fighter.js","webpack://roguelikedev-2022/./src/js/components/Hex.js","webpack://roguelikedev-2022/./src/js/components/ComponentLoader.js","webpack://roguelikedev-2022/./src/js/util/Extend.js","webpack://roguelikedev-2022/./src/js/entity/_Entity.js","webpack://roguelikedev-2022/./src/js/entity/Actor.js","webpack://roguelikedev-2022/./src/js/entity/Tile.js","webpack://roguelikedev-2022/./src/js/entity/EntityLoader.js","webpack://roguelikedev-2022/./src/js/map/ChanceLoader.js","webpack://roguelikedev-2022/./src/js/map/CellularAutomataMap.js","webpack://roguelikedev-2022/./src/js/map/_HexGameMap.js","webpack://roguelikedev-2022/./src/js/util/ArrayUtil.js","webpack://roguelikedev-2022/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB\",\"sourcesContent\":[\"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import engine from \"../Engine\";\n\nexport default class _Action {\n    constructor(entity) {\n        this.entity = entity;\n    }\n\n    /**\n     * @returns {_Action}\n     */\n    perform() {\n        console.error(\"Not Implemented\");\n    }\n\n    isPlayer() {\n        return this.entity === engine.player;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class NoAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform() {\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class UnableToPerformAction extends _Action {\n    constructor(entity, reason) {\n        super(entity);\n\n        this.reason = reason;\n    }\n\n    perform() {\n        return this;\n    }\n}","export default class SubMessage {\n    constructor(text, color, options) {\n        this.text = text;\n        this.color = color || \"#333\";\n\n        this.bold = false;\n        this.italics = false;\n        if (options) {\n            this.bold = options.bold || false;\n            this.italics = options.italics || false;\n        }\n    }\n\n    isEqual(subMessage) {\n        return this.text === subMessage.text && this.color === subMessage.color && this.bold === subMessage.bold && this.italics === subMessage.italics;\n    }\n}","export default class Message {\n    constructor(subMessages = []) {\n        this.subMessages = subMessages;\n        this.count = 1;\n    }\n\n    isEqual(subMessages) {\n        if (this.subMessages.length !== subMessages.length) {\n            return false;\n        }\n\n        for (let i = 0; i < this.subMessages.length; i++) {\n            const sub1 = this.subMessages[i];\n            const sub2 = subMessages[i];\n\n            if (!sub1.isEqual(sub2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n}","import SubMessage from \"./SubMessage\";\nimport Message from \"./Message\";\n\nclass MessageManager {\n    constructor() {\n        this.messages = [];\n        this.builder = [];\n    }\n\n    text(text, color, options) {\n        this.builder.push(new SubMessage(text, color, options));\n        return this; // Allow chaining\n    }\n\n    build(stack = true) {\n        this.addMessage(this.builder.slice(0), stack);\n        this.builder = [];\n    }\n\n    clear() {\n        this.messages = [];\n    }\n\n    addMessage(subMessages, stack = true) {\n        if (stack && this.messages.length > 0) {\n            const lastMessage = this.messages[this.messages.length - 1];\n            if (lastMessage.isEqual(subMessages)) {\n                lastMessage.count += 1;\n                this.updateLastMessageCount(lastMessage);\n            } else {\n                this.messages.push(new Message(subMessages));\n                this.addNewMessage();\n            }\n        } else {\n            this.messages.push(new Message(subMessages));\n            this.addNewMessage();\n        }\n    }\n\n    updateLastMessageCount(lastMessage) {\n        console.log(lastMessage);\n        // const lastMessageDom = document.querySelectorAll(\".message:last-child\")[0];\n        // const amountDom = lastMessageDom.querySelectorAll(\".message__amount\")[0];\n        //\n        // if (amountDom) {\n        //     amountDom.innerText = \"x\" + lastMessage.count;\n        // } else {\n        //     lastMessageDom.appendChild(lastMessage.getCountHtml());\n        // }\n    }\n\n    addNewMessage() {\n        const lastMessage = this.messages[this.messages.length - 1];\n        console.log(lastMessage);\n        //this.messagesInnerDom.appendChild(lastMessage.getHtml());\n    }\n}\n\nconst messageManager = new MessageManager();\nexport default messageManager;","import NoAction from \"./actions/NoAction\";\nimport UnableToPerformAction from \"./actions/UnableToPerformAction\";\nimport messageManager from \"./message/MessageManager\";\n\nclass Engine {\n    constructor() {\n        this.eventHandler = null;\n        this.player = null;\n        this.gameMap = null;\n        this.needsRenderUpdate = false;\n    }\n\n    handleEvents() {\n        this.processAction(this.eventHandler.handleInput());\n    }\n\n    processAction(action) {\n        if (action && this.eventHandler.isPlayerTurn) {\n            const performedAction = action.perform();\n            if (performedAction instanceof NoAction) {\n                return false;\n            }\n\n            if (performedAction instanceof UnableToPerformAction) {\n                if (performedAction.reason) {\n                    messageManager.text(performedAction.reason).build();\n                }\n                return false;\n            } else {\n                engine.needsRenderUpdate = true;\n                engine.player.fov.compute(engine.player, 5);\n                engine.player.fov.updateMap();\n\n                this.handleEnemyTurns();\n\n                return true;\n            }\n        }\n    }\n\n    handleEnemyTurns() {\n        this.eventHandler.isPlayerTurn = false;\n\n        for (const actor of this.gameMap.actors) {\n            if (actor !== this.player) {\n                const ai = actor.getComponent(\"ai\");\n                if (ai) {\n                    ai.perform();\n                }\n            }\n        }\n\n        this.eventHandler.isPlayerTurn = true;\n    }\n}\n\nconst engine = new Engine();\nexport default engine;","import engine from \"./Engine\";\n\nclass SceneState {\n    constructor() {\n        this.setupGameHtml();\n\n        this.resizeCanvas();\n        window.addEventListener( \"resize\", this);\n    }\n\n    setupGameHtml() {\n        const gameDom = document.createElement(\"div\");\n        gameDom.classList.add(\"game\");\n\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.classList.add(\"view\");\n\n        gameDom.appendChild(this.canvas);\n\n        document.body.appendChild(gameDom);\n\n        this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"resize\":\n                this.resizeCanvas();\n\n                break;\n        }\n    }\n\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n\n        engine.needsRenderUpdate = true;\n    }\n\n    clearAll() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\nconst sceneState = new SceneState();\nexport default sceneState;\n","const Key = {\n    LEFT: \"ArrowLeft\",\n    RIGHT: \"ArrowRight\",\n    UP: \"ArrowUp\",\n    DOWN: \"ArrowDown\",\n    BACKSPACE: \"Backspace\",\n    TAB: \"Tab\",\n    ENTER: \"Enter\",\n    SHIFT_LEFT: \"Left Shift\",\n    SHIFT_RIGHT: \"Right Shift\",\n    CONTROL_LEFT: \"Left Control\",\n    CONTROL_RIGHT: \"Right Control\",\n    ALT_LEFT: \"Left Alt\",\n    ALT_RIGHT: \"Right Alt\",\n    PAUSE_BREAK: \"Pause\",\n    CAPS_LOCK: \"CapsLock\",\n    ESCAPE: \"Escape\",\n    SPACE: \" \",\n    PAGE_UP: \"PageUp\",\n    PAGE_DOWN: \"PageDown\",\n    END: \"End\",\n    HOME: \"Home\",\n    INSERT: \"Insert\",\n    DELETE: \"Delete\",\n    OS_LEFT: \"Left OS\",\n    OS_RIGHT: \"Right OS\",\n    CONTEXT_MENU: \"ContextMenu\",\n    SCROLL_LOCK: \"ScrollLock\",\n    NUM_LOCK: \"NumLock\",\n    NUMPAD_DIVIDE: \"Numpad /\",\n    NUMPAD_MULTIPLY: \"Numpad *\",\n    NUMPAD_SUBTRACT: \"Numpad -\",\n    NUMPAD_ADD: \"Numpad +\",\n    NUMPAD_ENTER: \"Numpad Enter\",\n\n    NUMPAD_PERIOD: \"Numpad .\",\n    NUMPAD_0: \"Numpad 0\",\n    NUMPAD_1: \"Numpad 1\",\n    NUMPAD_2: \"Numpad 2\",\n    NUMPAD_3: \"Numpad 3\",\n    NUMPAD_4: \"Numpad 4\",\n    NUMPAD_5: \"Numpad 5\",\n    NUMPAD_6: \"Numpad 6\",\n    NUMPAD_7: \"Numpad 7\",\n    NUMPAD_8: \"Numpad 8\",\n    NUMPAD_9: \"Numpad 9\",\n\n    NUMPAD_DELETE: \"Numpad Delete\",\n    NUMPAD_INSERT: \"Numpad Insert\",\n    NUMPAD_END: \"Numpad End\",\n    NUMPAD_ARROW_DOWN: \"Numpad ArrowDown\",\n    NUMPAD_PAGE_DOWN: \"Numpad PageDown\",\n    NUMPAD_ARROW_LEFT: \"Numpad ArrowLeft\",\n    NUMPAD_CLEAR: \"Numpad Clear\",\n    NUMPAD_ARROW_RIGHT: \"Numpad ArrowRight\",\n    NUMPAD_HOME: \"Numpad Home\",\n    NUMPAD_ARROW_UP: \"Numpad ArrowUp\",\n    NUMPAD_PAGE_UP: \"Numpad PageUp\",\n};\n\nexport default Key;","import Key from \"./Key\";\n\nclass Controls {\n    constructor() {\n        const self = this;\n\n        self.defaultDelay = 25;\n        self.lastShiftUp = null;\n        self.treatShiftNumpadEqual = true;\n        self.keysDown = [];\n        self.keysDelayed = [];\n        self.defaults = new Map();\n\n        self.controls = new Map();\n        self.defaults.set(\"up\", [Key.NUMPAD_8, Key.UP]);\n        self.defaults.set(\"down\", [Key.NUMPAD_2, Key.DOWN]);\n\n        //self.defaults.set(\"left\", [Key.NUMPAD_4, Key.LEFT]);\n        //self.defaults.set(\"right\", [Key.NUMPAD_6, Key.RIGHT]);\n        self.defaults.set(\"nw\", [Key.NUMPAD_7]);\n        self.defaults.set(\"ne\", [Key.NUMPAD_9]);\n        self.defaults.set(\"sw\", [Key.NUMPAD_1]);\n        self.defaults.set(\"se\", [Key.NUMPAD_3]);\n        self.defaults.set(\"wait\", [Key.NUMPAD_5]);\n\n        self.load();\n\n        addEventListener(\"keydown\", function (e) {\n            // TODO: Evaluate if this should be generalized. I don't want to prevent all keys necessarily.\n            if (e.key === \"/\") {\n                e.preventDefault();\n            }\n\n            if (self.treatShiftNumpadEqual) {\n                const numLockOn = e.getModifierState(\"NumLock\");\n                // Re-add Shift key from Numpad press\n                if (numLockOn && !e.shiftKey && e.code.startsWith(\"Numpad\") && e.keyCode < 90) {\n                    if (self.lastShiftUp) {\n                        self.keysDown[self.lastShiftUp] = true;\n                        //console.log(\"Bonus Key Down: \", self.lastShiftUp);\n                    }\n                }\n            }\n\n            const key = self.getKey(e.key, e.code);\n            //console.log(\"Key Down: \", key);\n            self.keysDown[key] = true;\n        }, false);\n\n\n        addEventListener(\"keyup\", function (e) {\n            const key = self.getKey(e.key, e.code);\n            if (key === Key.SHIFT_LEFT || key === Key.SHIFT_RIGHT) {\n                self.lastShiftUp = key;\n            }\n\n            //console.log(\"Key Up: \", key);\n            delete self.keysDown[key];\n            delete self.keysDelayed[key];\n        }, false);\n    }\n\n    getKey(key, code) {\n        if (!code.startsWith(\"Arrow\")) {\n            if (code.endsWith(\"Left\")) {\n                key = \"Left \" + key;\n            } else if (code.endsWith(\"Right\")) {\n                key = \"Right \" + key;\n            } else if (code.startsWith(\"Numpad\")) {\n                key = \"Numpad \" + key;\n            }\n        }\n\n        if (this.treatShiftNumpadEqual) {\n            switch(key) {\n                case Key.NUMPAD_DELETE: key = Key.NUMPAD_PERIOD; break;\n                case Key.NUMPAD_INSERT: key = Key.NUMPAD_0; break;\n                case Key.NUMPAD_END: key = Key.NUMPAD_1; break;\n                case Key.NUMPAD_ARROW_DOWN: key = Key.NUMPAD_2; break;\n                case Key.NUMPAD_PAGE_DOWN: key = Key.NUMPAD_3; break;\n                case Key.NUMPAD_ARROW_LEFT: key = Key.NUMPAD_4; break;\n                case Key.NUMPAD_CLEAR: key = Key.NUMPAD_5; break;\n                case Key.NUMPAD_ARROW_RIGHT: key = Key.NUMPAD_6; break;\n                case Key.NUMPAD_HOME: key = Key.NUMPAD_7; break;\n                case Key.NUMPAD_ARROW_UP: key = Key.NUMPAD_8; break;\n                case Key.NUMPAD_PAGE_UP: key = Key.NUMPAD_9; break;\n            }\n        }\n\n        return key;\n    }\n\n    load() {\n        const controls = localStorage.getItem(\"controls\");\n        if (controls) {\n            this.controls = new Map(JSON.parse(controls));\n        } else {\n            this.resetToDefault();\n        }\n    }\n\n    save() {\n        localStorage.setItem(\"controls\", JSON.stringify(Array.from(this.controls.entries())));\n    }\n\n    setControls(controlsMap) {\n        this.controls = new Map();\n        for (const [key, value] of controlsMap.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            this.controls.set(key, keys);\n        }\n        this.save();\n    }\n\n    resetToDefault() {\n        this.setControls(this.defaults);\n    }\n\n    clone() {\n        const clone = new Map();\n        for (const [key, value] of this.controls.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            clone.set(key, keys);\n        }\n        return clone;\n    }\n\n    isPressed(key) {\n        const self = this;\n        let pressed = false;\n\n        let keys = self.controls.get(key);\n        if (!keys) {\n            const defaultKeys = self.defaults.get(key);\n            if (defaultKeys) {\n                self.controls.set(key, defaultKeys);\n                self.save();\n                keys = defaultKeys;\n            } else {\n                console.error(\"Missing keybindings for: \", key, keys);\n            }\n        }\n        keys.forEach(function(keyToTest) {\n            if (keyToTest in self.keysDown) {\n                pressed = true;\n            }\n        });\n\n        return pressed;\n    }\n\n    isDelayed(key) {\n        const self = this;\n        let delayed = false;\n\n        this.controls.get(key).forEach(function(keyToTest) {\n            if (keyToTest in self.keysDelayed) {\n                delayed = true;\n            }\n        });\n\n        return delayed;\n    }\n\n    deleteKey(key, delay) {\n        const self = this;\n        self.controls.get(key).forEach(function(keyToTest) {\n            delete self.keysDown[keyToTest];\n            if (delay) {\n                self.keysDelayed[keyToTest] = true;\n            }\n        });\n\n        if (delay) {\n            setTimeout(function() {\n                self.controls.get(key).forEach(function(keyToTest) {\n                    delete self.keysDelayed[keyToTest];\n                });\n            }, delay);\n        }\n    }\n\n    /**\n     *  Returns true if press succeeds\n     *          false if press does not succeed\n     */\n    testPressed(key, delay) {\n        delay = delay || this.defaultDelay;\n\n        const self = this;\n        let succeeded = false;\n\n        if (self.isPressed(key) && !self.isDelayed(key)) {\n            self.deleteKey(key, delay);\n            succeeded = true;\n        }\n\n        return succeeded;\n    }\n}\n\nconst controls = new Controls();\nexport default controls;","import _Action from \"../_Action\";\n\nexport default class _ActionWithDirection extends _Action {\n    constructor(entity, dq = 0, dr = 0) {\n        super(entity);\n\n        this.dq = dq;\n        this.dr = dr;\n    }\n\n    /**\n     * @returns {_ActionWithDirection}\n     */\n    perform() {\n        console.error(\"Not Implemented\");\n    }\n}","export default class HexUtil {\n    static PI = Math.PI;\n    static HEX_A = this.PI / 3;\n    static HEX_RADIUS_H = 20;\n    static HEX_RADIUS_V = 20;//15;\n    static OFFSET_V = 2 * this.HEX_RADIUS_V;\n    static OFFSET_H = this.HEX_RADIUS_H;\n\n    constructor() {}\n\n    static drawHex(ctx, x, y) {\n        ctx.beginPath();\n        for (let i = 0; i < 6; i ++) {\n            ctx.lineTo(x + HexUtil.HEX_RADIUS_H * Math.cos(HexUtil.HEX_A * i), y + HexUtil.HEX_RADIUS_V * Math.sin(HexUtil.HEX_A * i));\n        }\n        ctx.closePath();\n    }\n\n    static hexToArray(q, r) {\n        return {\n            x: Math.floor(r + (q / 2.0)),\n            y: q\n        };\n    }\n\n    static arrayToHex(row, col) {\n        return {\n            q: col,\n            r: row - Math.floor(col / 2.0)\n        };\n    }\n\n    static axialRound(fraqQ, fraqR) {\n        let q = Math.round(fraqQ);\n        let r = Math.round(fraqR);\n        const fraqS = -fraqQ - fraqR;\n        const s = Math.round(fraqS);\n\n        const qDiff = Math.abs(q - fraqQ);\n        const rDiff = Math.abs(r - fraqR);\n        const sDiff = Math.abs(s - fraqS);\n\n        if (qDiff > rDiff && qDiff > sDiff) {\n            q = -r - s;\n        } else if (rDiff > sDiff) {\n            r = -q - s;\n        }\n\n        return {\n            q: q,\n            r: r\n        };\n    }\n\n    static pixelToHex(point) {\n        point.x -= this.HEX_RADIUS_H;\n        point.y -= this.HEX_RADIUS_V;\n\n        const q = ((2/3 * point.x)) / this.HEX_RADIUS_H;\n        const r = ((-1/3 * point.x + Math.sqrt(3) / 3 * point.y)) / this.HEX_RADIUS_V;\n\n        return this.axialRound(q, r);\n    }\n\n}\n","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport engine from \"../../Engine\";\nimport HexUtil from \"../../util/HexUtil\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport messageManager from \"../../message/MessageManager\";\n\nexport default class MeleeAction extends _ActionWithDirection {\n    constructor(entity, dq, dr) {\n        super(entity, dq, dr);\n    }\n\n    perform() {\n        const hex = this.entity.getComponent(\"hex\");\n        if (hex) {\n            const destXY = HexUtil.hexToArray(hex.q + this.dq, hex.r + this.dr);\n            const blockingActor = engine.gameMap.getBlockingActorAtArrayLocation(destXY.x, destXY.y);\n            if (blockingActor) {\n                let name;\n                let plural;\n                if (this.isPlayer()) {\n                    name = \"You\";\n                    plural = \"\";\n                } else {\n                    name = this.entity.name;\n                    plural = \"s\";\n                }\n\n                let blockingName;\n                let attackColor;\n                if (blockingActor === engine.player) {\n                    blockingName = \"You\";\n                    attackColor = \"#C00\";\n                } else {\n                    blockingName = blockingActor.name;\n                    attackColor = \"#999\";\n                }\n\n                const entityFighter = this.entity.getComponent(\"fighter\");\n                const actorFighter = blockingActor.getComponent(\"fighter\");\n                const damage = entityFighter.power - actorFighter.defense;\n\n                let description = name + \" attack\" + plural + \" \" + blockingName;\n                if (damage > 0) {\n                    description += \" for \" + damage + \" hit points.\";\n\n                    actorFighter.takeDamage(damage);\n                } else {\n                    description += \", but does no damage.\";\n                }\n\n                messageManager.text(description, attackColor).build();\n            } else {\n                return new UnableToPerformAction(this.entity, \"There's nothing to attack there!\");\n            }\n        }\n\n        return this;\n    }\n}","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport engine from \"../../Engine\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport HexUtil from \"../../util/HexUtil\";\n\nexport default class MovementAction extends _ActionWithDirection {\n    constructor(entity, dq, dr) {\n        super(entity, dq, dr);\n    }\n\n    perform() {\n        const hex = this.entity.getComponent(\"hex\");\n        if (hex) {\n            const destXY = HexUtil.hexToArray(hex.q + this.dq, hex.r + this.dr);\n\n            if (!engine.gameMap.isInBounds(destXY.x, destXY.y)) {\n                return new UnableToPerformAction(this.entity, \"Location is outside of the map!\");\n            }\n\n            const destTile = engine.gameMap.tiles[destXY.x][destXY.y];\n            if (destTile.isWall()) {\n                return new UnableToPerformAction(this.entity, \"There's a \" + destTile.name + \" in the way!\");\n            }\n\n            const blockingActor = engine.gameMap.getBlockingActorAtArrayLocation(destXY.x, destXY.y);\n            if (blockingActor) {\n                return new UnableToPerformAction(this.entity, \"There's something in the way!\");\n            }\n\n            hex.moveTo(destXY.x, destXY.y);\n        }\n\n        return this;\n    }\n}","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport engine from \"../../Engine\";\nimport HexUtil from \"../../util/HexUtil\";\nimport MeleeAction from \"./MeleeAction\";\nimport MovementAction from \"./MovementAction\";\n\nexport default class BumpAction extends _ActionWithDirection {\n    constructor(entity, dq, dr) {\n        super(entity, dq, dr);\n    }\n\n    perform() {\n        const hex = this.entity.getComponent(\"hex\");\n        if (hex) {\n            const destXY = HexUtil.hexToArray(hex.q + this.dq, hex.r + this.dr);\n            const blockingActor = engine.gameMap.getBlockingActorAtArrayLocation(destXY.x, destXY.y);\n            if (blockingActor) {\n                return new MeleeAction(this.entity, this.dq, this.dr).perform();\n            } else {\n                return new MovementAction(this.entity, this.dq, this.dr).perform();\n            }\n        }\n\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class WaitAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform() {\n        return this;\n    }\n}","import _EventHandler from \"./_EventHandler\";\nimport controls from \"../controls/Controls\";\nimport BumpAction from \"../actions/actionWithDirection/BumpAction\";\nimport engine from \"../Engine\";\nimport WaitAction from \"../actions/WaitAction\";\nimport HexUtil from \"../util/HexUtil\";\n\nexport default class DefaultPlayerEventHandler extends _EventHandler {\n    constructor() {\n        super();\n    }\n\n    teardown() {\n        super.teardown();\n    }\n\n    handleInput() {\n        let action = null;\n\n        if (this.isPlayerTurn && engine.player.isAlive()) {\n            if (controls.testPressed(\"up\")) {\n                action = new BumpAction(engine.player, 0, -1);\n            } else if (controls.testPressed(\"down\")) {\n                action = new BumpAction(engine.player, 0, 1);\n            } else if (controls.testPressed(\"nw\")) {\n                action = new BumpAction(engine.player, -1, 0);\n            } else if (controls.testPressed(\"ne\")) {\n                action = new BumpAction(engine.player, 1, -1);\n            } else if (controls.testPressed(\"sw\")) {\n                action = new BumpAction(engine.player, -1, 1);\n            } else if (controls.testPressed(\"se\")) {\n                action = new BumpAction(engine.player, 1, 0);\n            } else if (controls.testPressed(\"wait\")) {\n                action = new WaitAction(engine.player);\n            }\n        }\n\n        return action;\n    }\n\n    onMouseMove(e) {\n        this.mouse.x = e.clientX;\n        this.mouse.y = e.clientY;\n\n        const hex = HexUtil.pixelToHex(this.mouse);\n        const tile = engine.gameMap.getTileFromHexCoords(hex.q, hex.r);\n        if (tile) {\n            if (this.targetedTile !== tile) {\n                for (const pathTile of this.pathTiles) {\n                    pathTile.highlighted = false;\n                }\n                if (this.targetedTile) {\n                    this.targetedTile.highlighted = false;\n                }\n\n                tile.highlighted = true;\n                this.targetedTile = tile;\n\n                const costGraph = engine.player.fov.getCostGraph();\n                const playerHex = engine.player.getComponent(\"hex\");\n                const tileHex = tile.getComponent(\"hex\");\n                const path = engine.player.fov.getPath(costGraph, playerHex, tileHex);\n                for (const pathNode of path) {\n                    const newRow = pathNode.row + engine.player.fov.left;\n                    const newCol = pathNode.col + engine.player.fov.top;\n\n                    const pathNodeTile = engine.gameMap.getTileFromArrayCoords(newRow, newCol);\n                    pathNodeTile.highlighted = true;\n                    this.pathTiles.push(pathNodeTile);\n                }\n            }\n        }\n\n        engine.needsRenderUpdate = true;\n    }\n}","export default class _EventHandler {\n    constructor() {\n        this.mouse = {\n            x: -1,\n            y: -1\n        };\n        this.mouseDown = false;\n\n        window.addEventListener(\"mousemove\", this);\n        window.addEventListener(\"mousedown\", this);\n        window.addEventListener(\"mouseup\", this);\n        window.addEventListener(\"click\", this);\n        window.addEventListener(\"contextmenu\", this);\n        window.addEventListener(\"change\", this);\n        window.addEventListener(\"keydown\", this);\n\n        this.isPlayerTurn = true;\n        this.targetedTile = null;\n        this.pathTiles = [];\n    }\n\n    teardown() {\n        window.removeEventListener(\"mousemove\", this);\n        window.removeEventListener(\"mousedown\", this);\n        window.removeEventListener(\"mouseup\", this);\n        window.removeEventListener(\"click\", this);\n        window.removeEventListener(\"contextmenu\", this);\n        window.removeEventListener(\"change\", this);\n        window.removeEventListener(\"keydown\", this);\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"mousemove\":\n                this.onMouseMove(e);\n                break;\n            case \"mousedown\":\n                this.onMouseDown(e);\n                break;\n            case \"mouseup\":\n                this.onMouseUp(e);\n                break;\n            case \"click\":\n                this.onLeftClick(e);\n                break;\n            case \"contextmenu\":\n                this.onRightClick(e);\n                break;\n            case \"change\":\n                this.onChange(e);\n                break;\n            case \"keydown\":\n                this.onKeydown(e);\n                break;\n        }\n    }\n\n    handleInput() {}\n\n    onMouseMove(/*e*/) {}\n\n    onMouseDown(/*e*/) {\n        this.mouseDown = true;\n    }\n\n    onMouseUp(/*e*/) {\n        this.mouseDown = false;\n    }\n\n    onLeftClick(/*e*/) {}\n\n    onRightClick(/*e*/) {}\n\n    onChange(/*e*/) {}\n\n    onKeydown(/*e*/) {}\n\n}","import engine from \"../Engine\";\n\nexport default class _Component {\n    constructor(args = {}, baseType, type) {\n        this.args = args;\n        this.baseType = baseType || \"component\";\n        this.type = type || this.baseType;\n        this.parentEntity = args.parentEntity;\n\n        this.cachedSave = null;\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n        this.parentEntity?.clearSaveCache();\n    }\n\n    save() {\n        return null;\n    }\n\n    hasComponent() {\n        return this.args.components && this.args.components[this.type] !== undefined;\n    }\n\n    isPlayer() {\n        return this.parentEntity === engine.player;\n    }\n\n    saveBoolean(arg, defaultValue) {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {};\n        if (arg !== defaultValue) {\n            saveJson[this.type] = arg;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    loadBooleanOrObject(name) {\n        const type = typeof this.args.components[this.type];\n        if (type === \"boolean\") {\n            return this.args.components[this.type];\n        } else if (type === \"object\") {\n            return this.args.components[this.type][name];\n        }\n    }\n\n    loadArg(name, defaultValue) {\n        return this.args.components[this.type][name] || defaultValue;\n    }\n\n    loadArgArray(name) {\n        const array = [];\n        const items = this.args.components[this.type][name].split(\",\");\n        for (const item of items) {\n            array.push(item.trim());\n        }\n\n        return array;\n    }\n}","import _Component from \"../_Component\";\n\nexport default class _AI extends _Component {\n    constructor(args = {}, type) {\n        super(args, \"ai\", type);\n    }\n\n    save() {\n        return null;\n    }\n\n    perform() {\n        console.error(\"Not Implemented\");\n    }\n}","import _AI from \"./_AI\";\n\nexport default class AIDead extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiDead\");\n\n        this.previousAI = \"\";\n\n        if (this.hasComponent()) {\n            this.previousAI = this.loadArg(\"previousAI\", \"\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            aiDead: {}\n        };\n\n        saveJson.aiDead.previousAI = this.previousAI;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform() {}\n}","import _Component from \"./_Component\";\n\nexport default class Fov extends _Component {\n    constructor(args) {\n        super(args, \"fov\");\n\n        this.explored = false;\n        this.visible = false;\n\n        if (this.hasComponent()) {\n            this.explored = this.loadArg(\"explored\", false);\n            this.visible = this.loadArg(\"visible\", false);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            fov: {}\n        };\n\n        if (this.explored !== false) {\n            saveJson.fov.explored = this.explored;\n        }\n\n        if (this.visible !== false) {\n            saveJson.fov.visible = this.visible;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    setExplored(explored) {\n        this.explored = explored;\n        this.clearSaveCache();\n    }\n\n    setVisible(visible) {\n        this.visible = visible;\n    }\n}","export default class HexNode {\n    constructor(row, col, weight) {\n        this.row = row;\n        this.col = col;\n        this.q = this.col;\n        this.r = this.row - Math.floor(this.col / 2);\n        this.s = -this.q - this.r;\n        this.weight = weight;\n    }\n\n    getCost() {\n        return this.weight;\n    }\n\n    isWall() {\n        return this.weight === 0;\n    }\n}","export default class BinaryHeap {\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        const result = this.content[0];\n        // Get the element at the end of the array.\n        const end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    }\n\n    remove(node) {\n        const i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            } else {\n                this.bubbleUp(i);\n            }\n        }\n    }\n\n    size() {\n        return this.content.length;\n    }\n\n    rescoreElement(node) {\n        this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n) {\n        // Fetch the element that has to be sunk.\n        const element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = ((n + 1) >> 1) - 1;\n            const parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    }\n\n    bubbleUp(n) {\n        // Look up the target element and its score.\n        const length = this.content.length;\n        const element = this.content[n];\n        const elemScore = this.scoreFunction(element);\n\n        let isDone = false;\n        while (!isDone) {\n            // Compute the indices of the child elements.\n            const child2N = (n + 1) << 1;\n            const child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            let swap = null;\n            let child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                const child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                const child2 = this.content[child2N];\n                const child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            } else { // Otherwise, we are done.\n                isDone = true;\n                break;\n            }\n        }\n    }\n}","import BinaryHeap from \"./BinaryHeap\";\n\n// Modified from http://github.com/bgrins/javascript-astar\nexport default class AStar {\n    constructor() {}\n\n    static pathTo(node) {\n        let curr = node;\n        const path = [];\n        while (curr.parent) {\n            path.unshift(curr);\n            curr = curr.parent;\n        }\n        return path;\n    }\n\n    static getHeap() {\n        return new BinaryHeap(function(node) {\n            return node.f;\n        });\n    }\n\n    /**\n     * Perform an A* Search on a graph given a start and end node.\n     * @param {Graph} graph\n     * @param {HexNode} start\n     * @param {HexNode} end\n     * @param {Object} [options]\n     * @param {bool} [options.closest] Specifies whether to return the\n     path to the closest node if the target is unreachable.\n     */\n    static search(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        const closest = options.closest || false;\n\n        const openHeap = this.getHeap();\n        let closestNode = start; // set the start node to be the closest if required\n\n        start.h = this.heuristicManhattanHex(start, end);\n        graph.markDirty(start);\n\n        openHeap.push(start);\n\n        while (openHeap.size() > 0) {\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            const currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if (currentNode === end) {\n                return this.pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            const neighbors = graph.neighbors(currentNode);\n\n            for (let i = 0, il = neighbors.length; i < il; ++i) {\n                const neighbor = neighbors[i];\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                const gScore = currentNode.g + neighbor.getCost(currentNode);\n                const beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n\n                    neighbor.h = neighbor.h || this.heuristicManhattanHex(neighbor, end);\n\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    } else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return this.pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    }\n\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    static heuristicManhattanHex(pos0, pos1) {\n        const d1 = Math.abs(pos1.q - pos0.q);\n        const d2 = Math.abs(pos1.r - pos0.r);\n        const d3 = Math.abs(pos1.s - pos0.s);\n        return (d1 + d2 + d3) / 2;\n    }\n\n    static cleanNode(node) {\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n}","import HexNode from \"./HexNode\";\nimport AStar from \"./AStar\";\nimport HexUtil from \"../util/HexUtil\";\n\nexport default class Graph {\n    constructor(gridIn) {\n        this.nodes = [];\n        this.grid = [];\n        for (let x = 0; x < gridIn.length; x++) {\n            this.grid[x] = [];\n\n            for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n                const node = new HexNode(x, y, row[y]);\n                this.grid[x][y] = node;\n                this.nodes.push(node);\n            }\n        }\n        this.init();\n    }\n\n    init() {\n        this.dirtyNodes = [];\n        for (let i = 0; i < this.nodes.length; i++) {\n            AStar.cleanNode(this.nodes[i]);\n        }\n    }\n\n    cleanDirty() {\n        for (let i = 0; i < this.dirtyNodes.length; i++) {\n            AStar.cleanNode(this.dirtyNodes[i]);\n        }\n        this.dirtyNodes = [];\n    }\n\n    markDirty(node) {\n        this.dirtyNodes.push(node);\n    }\n\n    neighbors(node) {\n        const ret = [];\n        const q = node.q;\n        const r = node.r;\n\n        this.addNeighbor(ret, q, r - 1);\n        this.addNeighbor(ret, q + 1, r - 1);\n        this.addNeighbor(ret, q + 1, r);\n        this.addNeighbor(ret, q, r + 1);\n        this.addNeighbor(ret, q - 1, r + 1);\n        this.addNeighbor(ret, q - 1, r);\n\n        return ret;\n    }\n\n    addNeighbor(array, q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n\n        if (this.grid[xy.x] && this.grid[xy.x][xy.y]) {\n            array.push(this.grid[xy.x][xy.y]);\n        }\n    }\n\n    /*\n    toString() {\n        const graphString = [];\n        const nodes = this.grid;\n        for (let x = 0; x < nodes.length; x++) {\n            const rowDebug = [];\n            const row = nodes[x];\n            for (let y = 0; y < row.length; y++) {\n                rowDebug.push(row[y].weight);\n            }\n            graphString.push(rowDebug.join(\" \"));\n        }\n        return graphString.join(\"\\n\");\n    }\n     */\n}","import _BaseFov from \"./_BaseFov\";\nimport engine from \"../../Engine\";\n\nexport default class CustomFov extends _BaseFov {\n    constructor() {\n        super();\n    }\n\n    compute(entity, radius) {\n        super.compute(entity, radius);\n\n        this.exploreTileByHex(this.q, this.r);\n\n        for (let i = 1; i <= 6; i++) {\n            this.exploreDirection(this.q, this.r, i, radius);\n        }\n    }\n\n    exploreDirection(q, r, dir, radius) {\n        let dir2 = dir + 1;\n        if (dir2 > 6) {\n            dir2 = 1;\n        }\n\n        let move1 = false;\n        let move2 = false;\n        let hex1;\n        let hex2;\n\n        const direction1 = engine.gameMap.getTileNeighbor(q, r, dir);\n        if (direction1) {\n            hex1 = direction1.getComponent(\"hex\");\n            this.exploreTileByArray(hex1.row, hex1.col);\n\n            if (!direction1.isWall()) {\n                move1 = true;\n            }\n        }\n\n        const direction2 = engine.gameMap.getTileNeighbor(q, r, dir2);\n        if (direction2) {\n            hex2 = direction2.getComponent(\"hex\");\n            this.exploreTileByArray(hex2.row, hex2.col);\n\n            if (!direction2.isWall()) {\n                move2 = true;\n            }\n        }\n\n        radius--;\n\n        if (radius > 1) {\n            if (move1 || move2) {\n                let diagonal;\n                if (hex1) {\n                    diagonal = engine.gameMap.getTileNeighbor(hex1.q, hex1.r, dir2);\n                } else if (hex2) {\n                    diagonal = engine.gameMap.getTileNeighbor(hex2.q, hex2.r, dir);\n                }\n\n                if (diagonal) {\n                    const hexDiagonal = diagonal.getComponent(\"hex\");\n                    this.exploreTileByArray(hexDiagonal.row, hexDiagonal.col);\n                }\n            }\n\n            if (move1) {\n                this.exploreDirection(hex1.q, hex1.r, dir, radius);\n            }\n\n            if (move2) {\n                this.exploreDirection(hex2.q, hex2.r, dir, radius);\n            }\n        }\n    }\n}","import engine from \"../../Engine\";\nimport Fov from \"../../components/Fov\";\nimport HexUtil from \"../../util/HexUtil\";\nimport Graph from \"../../pathfinding/Graph\";\nimport AStar from \"../../pathfinding/AStar\";\n\nexport default class _BaseFov {\n    constructor() {\n        this.previousVisibleTiles = [];\n        this.visibleTiles = [];\n        this.visibleActors = [];\n    }\n\n    compute(entity, radius) {\n        this.previousVisibleTiles = this.visibleTiles;\n        this.visibleTiles = [];\n        this.visibleActors = [];\n\n        this.hex = entity.getComponent(\"hex\");\n        this.q = this.hex.q;\n        this.r = this.hex.r;\n\n        this.tile = engine.gameMap.getTileFromHexCoords(this.q, this.r);\n        const x = this.hex.row;\n        const y = this.hex.col;\n\n        let top = y - radius;\n        if (top % 2 === 1) {\n            top -= 1;\n        }\n        this.left = Math.max(0, x - radius);\n        this.right = Math.min(engine.gameMap.rows, x + radius);\n        this.top = Math.max(0, top);\n        this.bottom = Math.min(engine.gameMap.cols, y + radius);\n    }\n\n    addVisibleTile(tile) {\n        if (this.visibleTiles.indexOf(tile) === -1) {\n            this.visibleTiles.push(tile);\n        }\n    }\n\n    addVisibleActor(actor) {\n        if (this.visibleActors.indexOf(actor) === -1) {\n            this.visibleActors.push(actor);\n        }\n    }\n\n    exploreTileByHex(q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n        this.exploreTileByArray(xy.x, xy.y);\n    }\n\n    exploreTileByArray(row, col) {\n        this.addVisibleTile(engine.gameMap.tiles[row][col]);\n\n        for (const actor of engine.gameMap.actors) {\n            const actorHex = actor.getComponent(\"hex\");\n            if (actorHex) {\n                if (row === actorHex.row && col === actorHex.col) {\n                    this.addVisibleActor(actor);\n                }\n            }\n        }\n    }\n\n    updateMap() {\n        for (const tile of this.previousVisibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setVisible(false);\n            }\n        }\n\n        for (const tile of this.visibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setExplored(true);\n                fov.setVisible(true);\n            } else {\n                tile.setComponent(new Fov({components: {fov: {explored: true, visible: true}}}));\n            }\n        }\n    }\n\n    getCostGraph() {\n        const fovWidth = this.right - this.left;\n        const fovHeight = this.bottom - this.top;\n        const cost = Array(fovWidth).fill().map(() => Array(fovHeight).fill(0));\n\n        for (const tile of this.visibleTiles) {\n            if (tile.isWall()) {\n                continue;\n            }\n\n            const tileHex = tile.getComponent(\"hex\");\n            cost[tileHex.row - this.left][tileHex.col - this.top] += 10;\n        }\n\n        for (const actor of this.visibleActors) {\n            if (actor.isAlive()) {\n                const actorHex = actor.getComponent(\"hex\");\n                cost[actorHex.row - this.left][actorHex.col - this.top] += 100;\n            }\n        }\n\n        return new Graph(cost);\n    }\n\n    getPath(costGraph, startHex, endHex) {\n        const start = costGraph.grid[startHex.row - this.left][startHex.col - this.top];\n        const end = costGraph.grid[endHex.row - this.left][endHex.col - this.top];\n\n        return AStar.search(costGraph, start, end);\n    }\n}","import _Action from \"./_Action\";\nimport WaitAction from \"./WaitAction\";\nimport MovementAction from \"./actionWithDirection/MovementAction\";\n\nexport default class WanderAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform() {\n        const direction = Math.floor(Math.random() * 7);\n\n        if (direction === 0) {\n            return new WaitAction(this.entity).perform();\n        } else {\n            let q = 0;\n            let r = 0;\n            switch(direction) {\n                case 1: // N\n                    q = -1;\n                    break;\n                case 2: // NE\n                    q = -1;\n                    r = 1;\n                    break;\n                case 3: // SE\n                    r = 1;\n                    break;\n                case 4: // S\n                    q = 1;\n                    break;\n                case 5: // SW\n                    q = 1;\n                    r = -1;\n                    break;\n                case 6: // NW\n                default:\n                    r = -1;\n                    break;\n            }\n\n            return new MovementAction(this.entity, q, r);\n        }\n    }\n}","import _AI from \"./_AI\";\nimport CustomFov from \"../../map/fov/CustomFov\";\nimport MeleeAction from \"../../actions/actionWithDirection/MeleeAction\";\nimport WanderAction from \"../../actions/WanderAction\";\nimport BumpAction from \"../../actions/actionWithDirection/BumpAction\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport engine from \"../../Engine\";\n\nexport default class AIMeleeChase extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiMeleeChase\");\n\n        this.fov = new CustomFov();\n        this.chaseLocation = null;\n\n        this.radius = 5;\n        this.movementActions = 1;\n        this.currentMovement = 0;\n\n        if (this.hasComponent()) {\n            this.radius = this.loadArg(\"radius\", 5);\n            this.movementActions = this.loadArg(\"movementActions\", 1);\n            this.currentMovement = this.loadArg(\"currentMovement\", 0);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            aiMeleeChase: {}\n        };\n\n        if (this.radius !== 5) {\n            saveJson.aiMeleeChase.radius = this.radius;\n        }\n\n        if (this.movementActions !== 1) {\n            saveJson.aiMeleeChase.movementActions = this.movementActions;\n        }\n\n        if (this.currentMovement !== 0) {\n            saveJson.aiMeleeChase.currentMovement = this.currentMovement;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform() {\n        const entity = this.parentEntity;\n        const entityHex = entity.getComponent(\"hex\");\n        if (entityHex) {\n            this.fov.compute(entity, this.radius);\n\n            let closestEnemies = [];\n            let closestDistance = null;\n            const entityFaction = entity.getComponent(\"faction\");\n            if (entityFaction) {\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorFaction = actor.getComponent(\"faction\");\n                        if (entityFaction.isEnemyOf(actorFaction)) {\n                            const actorHex = actor.getComponent(\"hex\");\n                            if (actorHex) {\n                                const distance = entityHex.distanceTo(actorHex);\n                                if (closestDistance === null || distance < closestDistance) {\n                                    closestEnemies = [];\n                                    closestEnemies.push(actor);\n                                    closestDistance = distance;\n                                } else if (distance === closestDistance) {\n                                    closestEnemies.push(actor);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            let closestEnemy;\n            if (closestEnemies.length === 1) {\n                closestEnemy = closestEnemies[0];\n            } else if (closestEnemies.length > 1) {\n                const index = Math.floor(Math.random() * closestEnemies.length);\n                closestEnemy = closestEnemies[index];\n            }\n\n            if (closestEnemy) {\n                const closestEnemyHex = closestEnemy.getComponent(\"hex\");\n                this.chaseLocation = {\n                    row: closestEnemyHex.row,\n                    col: closestEnemyHex.col,\n                    q: closestEnemyHex.q,\n                    r: closestEnemyHex.r\n                };\n\n                if (closestDistance <= 1) {\n                    return new MeleeAction(this.parentEntity, closestEnemyHex.q - entityHex.q, closestEnemyHex.r - entityHex.r).perform();\n                }\n            } else {\n                if (this.chaseLocation !== null) {\n                    // Reached chase location\n                    if (this.chaseLocation.q === entityHex.q && this.chaseLocation.r === entityHex.r) {\n                        this.chaseLocation = null;\n                    }\n                }\n\n                if (this.chaseLocation === null) {\n                    return new WanderAction(this.parentEntity).perform();\n                }\n            }\n\n            this.currentMovement += this.movementActions;\n\n            if (this.currentMovement >= 1) {\n                // Move towards enemy\n                const costGraph = this.fov.getCostGraph();\n                const path = this.fov.getPath(costGraph, entityHex, this.chaseLocation);\n\n                let lastAction;\n                while (this.currentMovement >= 1) {\n                    if (path && path.length > 0) {\n                        const next = path.shift();\n\n                        if (next) {\n                            const newRow = next.row + this.fov.left;// - entityHex.row;\n                            const newCol = next.col + this.fov.top;// - entityHex.col;\n                            const nextTile = engine.gameMap.getTileFromArrayCoords(newRow, newCol);\n                            const nextTileHex = nextTile.getComponent(\"hex\");\n                            const dq = nextTileHex.q - entityHex.q;\n                            const dr = nextTileHex.r - entityHex.r;\n                            lastAction = new BumpAction(entity, dq, dr).perform();\n                        }\n                    } else {\n                        lastAction = new WaitAction(entity).perform();\n                    }\n\n                    this.currentMovement -= 1;\n                }\n\n                return lastAction;\n            }\n        }\n    }\n}","import _Component from \"./_Component\";\n\nexport default class BlocksFov extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksFov\");\n\n        this.blocksFov = false;\n\n        if (this.hasComponent()) {\n            this.blocksFov = this.loadBooleanOrObject(\"blocksFov\");\n        }\n    }\n\n    save() {\n        return this.saveBoolean(this.blocksFov, false);\n    }\n\n}","import _Component from \"./_Component\";\n\nexport default class BlocksMovement extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksMovement\");\n\n        // Whether the entity prevents movement\n        this.blocksMovement = false;\n\n        if (this.hasComponent()) {\n            this.blocksMovement = this.loadBooleanOrObject(\"blocksMovement\");\n        }\n    }\n\n    save() {\n        return this.saveBoolean(this.blocksMovement, false);\n    }\n\n    onEntityDeath() {\n        this.blocksMovement = false;\n\n        this.clearSaveCache();\n    }\n}","import _Component from \"./_Component\";\n\nexport default class Faction extends _Component {\n    constructor(args = {}) {\n        super(args, \"faction\");\n\n        this.factions = [];\n        this.enemies = [];\n\n        if (this.hasComponent()) {\n            this.factions = this.loadArgArray(\"factions\");\n            this.enemies = this.loadArgArray(\"enemies\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            faction: {}\n        };\n\n        saveJson.faction.factions = this.factions.toString();\n        saveJson.faction.enemies = this.enemies.toString();\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    /**\n     *\n     * @param {Faction} otherFaction\n     */\n    isEnemyOf(otherFaction) {\n        if (!otherFaction) {\n            return false;\n        }\n\n        for (const faction of this.factions) {\n            if (otherFaction.enemies.indexOf(faction) > -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}","import _Component from \"./_Component\";\nimport AIDead from \"./ai/AIDead\";\nimport messageManager from \"../message/MessageManager\";\n\nexport default class Fighter extends _Component {\n    constructor(args) {\n        super(args, \"fighter\");\n\n        this.hp = 0;\n        this.maxHp = 0;\n        this.defense = 0;\n        this.power = 0;\n\n        if (this.hasComponent()) {\n            this.hp = this.loadArg(\"hp\", 0);\n            this.maxHp = this.loadArg(\"maxHp\", 0);\n            this.defense = this.loadArg(\"defense\", 0);\n            this.power = this.loadArg(\"power\", 0);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            fighter: {}\n        };\n\n        saveJson.fighter.hp = this.hp;\n        saveJson.fighter.maxHp = this.maxHp;\n        saveJson.fighter.defense = this.defense;\n        saveJson.fighter.power = this.power;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    setHp(newHp) {\n        this.hp = Math.max(0, Math.min(newHp, this.maxHp));\n    }\n\n    takeDamage(damage) {\n        this.hp -= damage;\n\n        if (this.hp <= 0) {\n            this.die();\n        }\n\n        this.clearSaveCache();\n    }\n\n    die() {\n        const entity = this.parentEntity;\n        if (this.isPlayer()) {\n            messageManager.text(\"You died!\", \"#f00\").build();\n        } else {\n            messageManager.text(entity.name + \" dies!\", \"#ffa030\").build();\n        }\n\n        entity.callEvent(\"onEntityDeath\");\n\n        const ai = entity.getComponent(\"ai\");\n        if (ai) {\n            const aiArgs = {\n                components: {\n                    aiDead: {\n                        previousAI: ai.type\n                    }\n                }\n            };\n\n            entity.removeComponent(\"ai\");\n            entity.setComponent(new AIDead(aiArgs));\n        }\n\n        this.clearSaveCache();\n    }\n}","import _Component from \"./_Component\";\nimport HexUtil from \"../util/HexUtil\";\n\nexport default class Hex extends _Component {\n    constructor(args = {}) {\n        super(args, \"hex\");\n\n        this.row = 0;\n        this.col = 0;\n        this.q = 0;\n        this.r = 0;\n        this.s = 0;\n\n        if (this.hasComponent()) {\n            this.row = this.loadArg(\"row\", 0);\n            this.col = this.loadArg(\"col\", 0);\n        }\n\n        this.updateHexCoords();\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            hex: {}\n        };\n\n        if (this.row !== 0) {\n            saveJson.hex.row = this.row;\n        }\n\n        if (this.col !== 0) {\n            saveJson.hex.col = this.col;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    moveTo(row, col) {\n        this.row = row;\n        this.col = col;\n\n        this.updateHexCoords();\n    }\n\n    updateHexCoords() {\n        this.q = this.col;\n        this.r = this.row - Math.floor(this.col / 2);\n        this.s = -this.q - this.r;\n    }\n\n    isEdge(map) {\n        return this.row === 0 || this.col === 0 || this.row === map.rows - 1 || this.col === map.cols - 1;\n    }\n\n    getDisplayX() {\n        return this.q;\n    }\n\n    getDisplayY() {\n        return this.r + (this.q / 2.0);\n    }\n\n    getTileFromArray(map, q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n        if (map[xy.x] && map[xy.x][xy.y]) {\n            return map[xy.x][xy.y];\n        }\n\n        return null;\n    }\n\n    getNumAdjacentWalls(map) {\n        const n = this.getTileFromArray(map, this.q, this.r - 1);\n        const ne = this.getTileFromArray(map, this.q + 1, this.r - 1);\n        const se = this.getTileFromArray(map, this.q + 1, this.r);\n        const s = this.getTileFromArray(map, this.q, this.r + 1);\n        const sw = this.getTileFromArray(map, this.q - 1, this.r + 1);\n        const nw = this.getTileFromArray(map, this.q - 1, this.r);\n\n        return this.isTileWall(n) + this.isTileWall(ne) + this.isTileWall(se) + this.isTileWall(s) + this.isTileWall(sw) + this.isTileWall(nw);\n    }\n\n    isTileWall(tile) {\n        if (tile === null || tile.isWall()) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    isInRange(otherHex, radius) {\n        const distQ = Math.abs(this.q - otherHex.q);\n        if (distQ < radius) {\n            const distR = Math.abs(this.r - otherHex.r);\n            if (distR < radius) {\n                const distS = Math.abs(this.s - otherHex.s);\n                if (distS < radius) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    distanceTo(otherHex) {\n        const distQ = Math.abs(this.q - otherHex.q);\n        const distR = Math.abs(this.r - otherHex.r);\n        const distS = Math.abs(this.s - otherHex.s);\n\n        return Math.max(distQ, Math.max(distR, distS));\n    }\n}","import AIDead from \"./ai/AIDead\";\nimport AIMeleeChase from \"./ai/AIMeleeChase\";\nimport BlocksFov from \"./BlocksFov\";\nimport BlocksMovement from \"./BlocksMovement\";\nimport Faction from \"./Faction\";\nimport Fighter from \"./Fighter\";\nimport Fov from \"./Fov\";\nimport Hex from \"./Hex\";\n\nclass ComponentLoader {\n    constructor() {\n        this.types = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new AIDead());\n        this.load(new AIMeleeChase());\n\n        this.load(new BlocksFov());\n        this.load(new BlocksMovement());\n        this.load(new Faction());\n        this.load(new Fighter());\n        this.load(new Fov());\n        this.load(new Hex());\n    }\n\n    load(component) {\n        this.types.set(component.type, component);\n    }\n\n    create(entity, type, args) {\n        const component = this.types.get(type);\n        const constructor = component.constructor;\n        return new constructor(args);\n    }\n}\n\nconst componentLoader = new ComponentLoader();\nexport default componentLoader;","/**\n * Adapted from http://youmightnotneedjquery.com/\n */\nexport default class Extend {\n    constructor() {}\n\n    static extend(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            if (!arguments[i]) {\n                continue;\n            }\n\n            for (const key in arguments[i]) {\n                if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n                    out[key] = arguments[i][key];\n                }\n            }\n        }\n\n        return out;\n    }\n\n    static deep(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            const obj = arguments[i];\n\n            if (!obj) {\n                continue;\n            }\n\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    if (typeof obj[key] === \"object\") {\n                        if (obj[key] instanceof Array) {\n                            out[key] = obj[key].slice(0);\n                        } else {\n                            out[key] = Extend.deep(out[key], obj[key]);\n                        }\n                    } else {\n                        if (typeof out === \"boolean\" && out[key] === undefined) {\n                            out = obj[key];\n                        } else {\n                            out[key] = obj[key];\n                        }\n                    }\n                }\n            }\n        }\n\n        return out;\n    }\n}","import componentLoader from \"../components/ComponentLoader\";\nimport Extend from \"../util/Extend\";\n\nexport default class _Entity {\n    constructor(args) {\n        this.type = args.type || \"entity\";\n        this.id = args.id;\n        this.name = args.name || \"\";\n        this.description = args.description || \"\";\n        this.sprite = args.sprite || \"\";\n        this.letter = args.letter || \"?\";\n        this.color = args.color || \"#fff\";\n\n        this.componentArray = [];\n        this.components = {};\n        if (args.components) {\n            this.loadComponents(args, args.components);\n            this.callEvent(\"onComponentsLoaded\");\n        }\n\n        this.cachedSave = null;\n    }\n\n    /**\n     * @returns {_Entity}\n     */\n    clone() {\n        console.error(\"Not implemented\");\n    }\n\n    callEvent(event, args) {\n        for (const component of this.componentArray) {\n            component[event]?.(args);\n        }\n\n        this[event]?.(args);\n    }\n\n    draw(/*x, y*/) { }\n\n    loadComponents(args, components) {\n        const self = this;\n        Object.keys(components).forEach(function(key) {\n            const type = componentLoader.types.get(key);\n            if (type) {\n                const baseType = type.baseType;\n                const existingComponent = self.getComponent(baseType);\n                if (!existingComponent) {\n                    self.setComponent(componentLoader.create(this, key, args), false);\n                }\n            }\n        });\n    }\n\n    setComponent(component) {\n        component.parentEntity = this;\n        this.components[component.baseType] = component;\n        this.componentArray.push(component);\n\n    }\n\n    getComponent(baseType) {\n        return this.components[baseType];\n    }\n\n    removeComponent(baseType) {\n        if (!this.components[baseType]) {\n            return;\n        }\n\n        this.components[baseType] = undefined;\n        for (const component of this.componentArray) {\n            if (component.baseType === baseType) {\n                const index = this.componentArray.indexOf(component);\n                this.componentArray.splice(index, 1);\n                break;\n            }\n        }\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n    }\n\n    save() {\n        if (this.cachedSave !== null) {\n            return this.cachedSave;\n        }\n\n        const json = {\n            id: this.id,\n            type: this.type,\n            name: this.name,\n            description: this.description,\n            sprite: this.sprite,\n            letter: this.letter,\n            color: this.color\n        };\n\n        json.components = {};\n        for (const component of this.componentArray) {\n            const save = component.save();\n            if (save !== null && save !== {}) {\n                Extend.deep(json.components, save);\n            }\n        }\n\n        this.cachedSave = json;\n        return json;\n    }\n}","import _Entity from \"./_Entity\";\nimport sceneState from \"../SceneState\";\nimport HexUtil from \"../util/HexUtil\";\nimport CustomFov from \"../map/fov/CustomFov\";\n\nexport default class Actor extends _Entity {\n    constructor(args = {}) {\n        args.type = \"actor\";\n        super(args);\n\n        this.fov = new CustomFov();\n    }\n\n    clone() {\n        return new Actor(this.save());\n    }\n\n    isAlive() {\n        const fighter = this.getComponent(\"fighter\");\n        return fighter && fighter.hp > 0;\n    }\n\n    draw() {\n        // TODO: Replace arbitrary 1.15\n        const hex = this.getComponent(\"hex\");\n        const drawX = HexUtil.HEX_RADIUS_H + (HexUtil.HEX_RADIUS_H * (1 + Math.cos(HexUtil.HEX_A))) * hex.getDisplayX();\n        const drawY = 1.15 * HexUtil.HEX_RADIUS_V + (2 * HexUtil.HEX_RADIUS_V * Math.sin(HexUtil.HEX_A)) * hex.getDisplayY();\n\n        super.draw(drawX, drawY);\n        //HexUtil.drawHex(sceneState.ctx, drawX, drawY);\n        // if (this.color) {\n        //     sceneState.ctx.fillStyle = this.color;\n        //     sceneState.ctx.fill();\n        // }\n\n\n        sceneState.ctx.fillStyle = this.color || \"white\";\n        sceneState.ctx.textAlign = \"center\";\n        sceneState.ctx.textBaseline = \"middle\";\n        sceneState.ctx.font = \"bold 26px serif\";\n        sceneState.ctx.fillText(this.letter, drawX, drawY);\n    }\n\n\n    setName(newName) {\n        this.name = newName;\n        this.clearSaveCache();\n    }\n\n    onEntityDeath() {\n        // TODO: Handle these better\n        this.letter = \"%\";\n        this.color = \"red\";\n\n        this.setName(\"Remains of \" + this.name);\n    }\n}","import _Entity from \"./_Entity\";\nimport HexUtil from \"../util/HexUtil\";\nimport sceneState from \"../SceneState\";\n\nexport default class Tile extends _Entity {\n    constructor(args = {}) {\n        args.type = \"tile\";\n        super(args);\n\n        this.borderColor = args.borderColor || \"#000\";\n    }\n\n    clone() {\n        return new Tile(this.save());\n    }\n\n    save() {\n        const saveJson = super.save();\n\n        saveJson.borderColor = this.borderColor;\n\n        return saveJson;\n    }\n\n    isWall() {\n        return this.getComponent(\"blocksMovement\")?.blocksMovement;\n    }\n\n    draw(x, y) {\n        const fov = this.getComponent(\"fov\");\n        if (fov) {\n            if (fov.explored) {\n                HexUtil.drawHex(sceneState.ctx, x, y);\n\n                if (this.color) {\n                    sceneState.ctx.fillStyle = this.color;\n                    sceneState.ctx.fill();\n                }\n\n                sceneState.ctx.strokeStyle = this.borderColor;\n                sceneState.ctx.stroke();\n\n                if (!fov.visible) {\n                    HexUtil.drawHex(sceneState.ctx, x, y);\n                    sceneState.ctx.fillStyle = \"rgba(0, 0, 0, .25)\";\n                    sceneState.ctx.fill();\n                    sceneState.ctx.color = \"rgba(0, 0, 0, .25)\";\n                    sceneState.ctx.stroke();\n                }\n            }\n        }\n\n        // Debug show all tiles\n        // HexUtil.drawHex(sceneState.ctx, x, y);\n        // sceneState.ctx.fillStyle = this.color;\n        // sceneState.ctx.fill();\n\n        if (this.highlighted) {\n            HexUtil.drawHex(sceneState.ctx, x, y);\n            sceneState.ctx.fillStyle = \"rgba(0,0,255,0.3)\";\n            sceneState.ctx.fill();\n        }\n\n        // Debug show coordinates\n        // sceneState.ctx.textAlign = \"center\";\n        // sceneState.ctx.textBaseline = \"middle\";\n        //\n        // sceneState.ctx.font = \"12px serif\";\n        // sceneState.ctx.fillStyle = \"black\";\n        //\n        // const hex = this.getComponent(\"hex\");\n        // sceneState.ctx.fillText(hex.q + \", \" + hex.r, x, y);\n\n        // sceneState.ctx.fillText(hex.q + \", \" + hex.r, x, y-5);\n        // sceneState.ctx.fillText(hex.row + \", \" + hex.col, x, y+5);\n    }\n}\n","import Actor from \"./Actor\";\nimport Tile from \"./Tile\";\nimport Extend from \"../util/Extend\";\nimport actorsBaseList from \"../../json/actors/_base.json\";\nimport enemiesList from \"../../json/actors/enemies.json\";\nimport playerList from \"../../json/actors/player.json\";\nimport tilesBaseList from \"../../json/tiles/_base.json\";\nimport floorsList from \"../../json/tiles/floors.json\";\nimport wallsList from \"../../json/tiles/walls.json\";\n\nclass EntityLoader {\n    constructor() {\n        this.types = new Map();\n        this.templates = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new Actor());\n        this.load(new Tile());\n\n        this.loadTemplates();\n    }\n\n    load(entity) {\n        this.types.set(entity.type, entity);\n    }\n\n    create(json, args = {}) {\n        let parsedJson;\n        if (typeof json === \"object\") {\n            parsedJson = json;\n        } else {\n            parsedJson = JSON.parse(json);\n        }\n\n        if (parsedJson.extends !== undefined) {\n            if (this.templates.has(parsedJson.extends)) {\n                const template = JSON.parse(this.templates.get(parsedJson.extends));\n\n                delete parsedJson[\"extends\"];\n                return this.create(Extend.deep(template, parsedJson), args);\n            } else {\n                console.error(\"Json template for id '\" + parsedJson.extends + \"' is missing. Cannot extend from it.\");\n            }\n        }\n\n        const entity = this.types.get(parsedJson.type);\n        return new entity.constructor(Extend.deep(parsedJson, args));\n    }\n\n    createFromTemplate(id, args = {}) {\n        if (this.templates.has(id)) {\n            return this.create(this.templates.get(id), args);\n        } else {\n            console.error(\"Json template for id '\" + id + \"' is missing.\");\n            return null;\n        }\n    }\n\n    loadTemplate(entities) {\n        for (const entity of entities) {\n            const id = entity.id;\n            if (this.templates.has(id)) {\n                console.error(\"Template for entity id '\" + id + \"' already exists.\");\n            } else {\n                this.templates.set(id, JSON.stringify(entity));\n            }\n        }\n    }\n\n    loadTemplates() {\n        this.loadTemplate(actorsBaseList);\n        this.loadTemplate(enemiesList);\n        this.loadTemplate(playerList);\n\n        this.loadTemplate(tilesBaseList);\n        this.loadTemplate(floorsList);\n        this.loadTemplate(wallsList);\n    }\n}\n\nconst entityLoader = new EntityLoader();\nexport default entityLoader;","import cave from \"../../json/generation/cave.json\";\n\nclass ChanceLoader {\n    constructor() {\n        this.entityGroups = new Map();\n\n        this.generators = new Map();\n\n        this.loadGenerator(cave);\n    }\n\n    loadGenerator(generatorJson) {\n        for (const generator of generatorJson) {\n            this.generators.set(generator.id, generator.levels);\n        }\n    }\n\n    getChancesForLevel(name, level) {\n        let chances;\n        const generator = this.generators.get(name);\n        for (const group of generator) {\n            if (group.level > level) {\n                break;\n            }\n\n            chances = group;\n        }\n\n        return chances;\n    }\n\n    getActorForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const actors = chances.actors;\n\n        let actorOrGroup = this.getRandomFromGroup(actors);\n        while (actorOrGroup.group !== undefined) {\n            const actorGroup = this.entityGroups.get(actorOrGroup.group);\n            actorOrGroup = this.getRandomFromGroup(actorGroup);\n        }\n\n        return actorOrGroup.id;\n    }\n\n    getRandomFromGroup(group) {\n        let totalWeight = 0;\n        for (const chance of group) {\n            totalWeight += chance.weight;\n        }\n\n        let returnChance;\n        let currentWeight = 0;\n        const rand = Math.random() * totalWeight;\n        for (const chance of group) {\n            currentWeight += chance.weight;\n\n            if (rand < currentWeight) {\n                returnChance = chance;\n                break;\n            }\n        }\n\n        return returnChance;\n    }\n}\n\nconst chanceLoader = new ChanceLoader();\nexport default chanceLoader;","import _HexGameMap from \"./_HexGameMap\";\nimport engine from \"../Engine\";\nimport entityLoader from \"../entity/EntityLoader\";\nimport chanceLoader from \"./ChanceLoader\";\n\nexport default class CellularAutomataMap extends _HexGameMap {\n    constructor(rows, cols) {\n        super(rows, cols);\n\n        this.percentAreWalls = .35; // 1 = 100%\n\n        this.wallEntity = entityLoader.createFromTemplate(\"cave_wall\", {components: {hex: {row: 0, col: 0}}});\n        this.floorEntity = entityLoader.createFromTemplate(\"cave_floor\", {components: {hex: {row: 0, col: 0}}});\n\n        this.create();\n    }\n\n    create() {\n        this.randomFillBuild();\n        this.makeCaverns(15, 0);\n    }\n\n    randomFillBuild() {\n        const rowsMiddle = Math.floor(Math.random() * this.rows);\n        const colsMiddle = Math.floor(Math.random() * this.cols);\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                let entity;\n                if (i === 0 || j === 0 || i === this.rows - 1 || j === this.cols - 1) {\n                    entity = this.wallEntity.clone();\n                } else if (i === rowsMiddle || j === colsMiddle) {\n                    entity = this.floorEntity.clone();\n                } else {\n                    const isWall = Math.random() < this.percentAreWalls;\n\n                    if (isWall) {\n                        entity = this.wallEntity.clone();\n                    } else {\n                        entity = this.floorEntity.clone();\n                    }\n                }\n\n                entity.getComponent(\"hex\").moveTo(i, j);\n                this.tiles[i][j] = entity;\n            }\n        }\n    }\n\n    addRandomNoise() {\n        for (let i = 1; i < this.rows - 1; i++) {\n            for (let j = 1; j < this.cols - 1; j++) {\n                if (Math.random() < .02) {\n                    const entity = this.wallEntity.clone();\n                    entity.getComponent(\"hex\").moveTo(i, j);\n                    this.tiles[i][j] = entity;\n                }\n            }\n        }\n    }\n\n    makeCaverns(repeat, delay) {\n        this.addRandomNoise();\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                const isWall = this.placeWallLogic(this.tiles[i][j]);\n\n                let entity;\n                if (isWall) {\n                    entity = this.wallEntity.clone();\n                } else {\n                    entity = this.floorEntity.clone();\n                }\n\n                entity.getComponent(\"hex\").moveTo(i, j);\n                this.tiles[i][j] = entity;\n            }\n        }\n\n        repeat --;\n\n        const self = this;\n        if (repeat > 0) {\n            if (delay > 0) {\n                setTimeout(() => {\n                    self.makeCaverns(repeat, delay);\n                }, delay);\n                engine.needsRenderUpdate = true;\n            } else {\n                self.makeCaverns(repeat);\n            }\n        } else {\n            engine.needsRenderUpdate = true;\n        }\n    }\n\n    placeWallLogic(tile) {\n        const hex = tile.getComponent(\"hex\");\n        const numWalls = hex.getNumAdjacentWalls(this.tiles);\n\n        // Edges should always be walls\n        if (hex.isEdge(this)) {\n            return true;\n        }\n\n        if (tile.isWall()) {\n            if (numWalls >= 2) {\n                return true;\n            }\n        } else {\n            if (numWalls >= 4) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    placeEntities(generation, level, percentage, distFromPlayer) {\n        const playerHex = engine.player.getComponent(\"hex\");\n\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                const tile = this.tiles[i][j];\n                if (!tile.isWall()) {\n                    const hex = tile.getComponent(\"hex\");\n                    if (!playerHex.isInRange(hex, distFromPlayer)) {\n                        if (Math.random() < percentage) {\n                            const actorId = chanceLoader.getActorForLevel(generation, level);\n                            const actor = entityLoader.createFromTemplate(actorId, {components: {hex: {row: hex.row, col: hex.col}}});\n\n                            this.actors.push(actor);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","import HexUtil from \"../util/HexUtil\";\nimport ArrayUtil from \"../util/ArrayUtil\";\nimport engine from \"../Engine\";\n\nexport default class _HexGameMap {\n    constructor(rows, cols) {\n        this.rows = rows;\n        this.cols = cols;\n\n        this.init();\n    }\n\n    init() {\n        this.tiles = ArrayUtil.create2dArray(this.rows);\n        this.actors = [];\n    }\n\n    isInBounds(x, y) {\n        return 0 <= x && x < this.rows && 0 <= y && y < this.cols;\n    }\n\n    create() {}\n\n    draw() {\n        for (let i = 0; i < this.rows; i++) {\n            let y = HexUtil.OFFSET_V + (2 * HexUtil.HEX_RADIUS_V * Math.sin(HexUtil.HEX_A)) * i;\n            for (let j = 0; j < this.cols; j++) {\n                const x = HexUtil.OFFSET_H + (HexUtil.HEX_RADIUS_H * (1 + Math.cos(HexUtil.HEX_A))) * j;\n                y -= (-1) ** j * HexUtil.HEX_RADIUS_V * Math.sin(HexUtil.HEX_A);\n\n                const tile = this.tiles[i][j];\n                tile.draw(x, y);\n            }\n        }\n\n        for (const actor of this.actors) {\n            const actorHex = actor.getComponent(\"hex\");\n            const tile = engine.gameMap.getTileFromArrayCoords(actorHex.row, actorHex.col);\n            const tileFov = tile.getComponent(\"fov\");\n            if (tileFov && tileFov.visible) {\n                actor.draw();\n            }\n        }\n    }\n\n    getTileFromArrayCoords(x, y) {\n        if (this.tiles[x]) {\n            return this.tiles[x][y];\n        }\n\n        return null;\n    }\n\n    getTileFromHexCoords(q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n        if (this.tiles[xy.x]) {\n            return this.tiles[xy.x][xy.y];\n        }\n\n        return null;\n    }\n\n    getTileNeighbor(q, r, direction) {\n        switch(direction) {\n            case 1: // N\n                return this.getTileFromHexCoords(q - 1, r);\n            case 2: // NE\n                return this.getTileFromHexCoords(q - 1, r + 1);\n            case 3: // SE\n                return this.getTileFromHexCoords(q, r + 1);\n            case 4: // S\n                return this.getTileFromHexCoords(q + 1, r);\n            case 5: // SW\n                return this.getTileFromHexCoords(q + 1, r - 1);\n            case 6: // NW\n            default:\n                return this.getTileFromHexCoords(q, r - 1);\n        }\n    }\n\n    getBlockingActorAtArrayLocation(x, y) {\n        let blockingActor = null;\n        for (const actor of this.actors) {\n            const hex = actor.getComponent(\"hex\");\n            if (hex && x === hex.row && y === hex.col) {\n                const component = actor.getComponent(\"blocksMovement\");\n                if (component && component.blocksMovement) {\n                    blockingActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return blockingActor;\n    }\n}","export default class ArrayUtil {\n    constructor() {\n\n    }\n\n    static create2dArray(numRows) {\n        const array = [];\n\n        for (let i = 0; i < numRows; i++) {\n            array[i] = [];\n        }\n        return array;\n    }\n}","import \"./styles/style.css\";\n\nimport engine from \"./js/Engine\";\nimport sceneState from \"./js/SceneState\";\nimport DefaultPlayerEventHandler from \"./js/event/DefaultPlayerEventHandler\";\nimport CellularAutomataMap from \"./js/map/CellularAutomataMap\";\nimport entityLoader from \"./js/entity/EntityLoader\";\n\n(function () {\n    function init() {\n        engine.gameMap = new CellularAutomataMap(35, 80);\n\n        engine.player = entityLoader.createFromTemplate(\"player\", {components: {hex: {row: 0, col: 0}}});\n        const playerHex = engine.player.getComponent(\"hex\");\n        let foundPlace = false;\n        while(!foundPlace) {\n            const playerRow = Math.floor(Math.random() * (engine.gameMap.rows - 4)) + 2;\n            const playerCol = Math.floor(Math.random() * (engine.gameMap.cols - 4)) + 2;\n\n            const tile = engine.gameMap.tiles[playerRow][playerCol];\n            if (!tile.isWall()) {\n                playerHex.moveTo(playerRow, playerCol);\n                foundPlace = true;\n            }\n        }\n        engine.gameMap.actors.push(engine.player);\n        engine.gameMap.placeEntities(\"cave\", 1, .03, 5);\n\n        engine.eventHandler = new DefaultPlayerEventHandler();\n\n        engine.needsRenderUpdate = true;\n        engine.player.fov.compute(engine.player, 5);\n        engine.player.fov.updateMap();\n\n        window.requestAnimationFrame(update);\n    }\n\n    function update() {\n        engine.handleEvents();\n\n        if (engine.needsRenderUpdate) {\n            render();\n\n            engine.needsRenderUpdate = false;\n        }\n\n        window.requestAnimationFrame(update);\n    }\n\n    function render() {\n        sceneState.clearAll();\n        engine.gameMap.draw();\n    }\n\n    init();\n}());"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","_Action","constructor","entity","perform","console","error","isPlayer","NoAction","super","UnableToPerformAction","reason","SubMessage","text","color","bold","italics","isEqual","subMessage","Message","subMessages","sub1","sub2","messageManager","messages","builder","build","stack","addMessage","slice","clear","lastMessage","updateLastMessageCount","addNewMessage","log","engine","eventHandler","player","gameMap","needsRenderUpdate","handleEvents","processAction","handleInput","action","isPlayerTurn","performedAction","fov","compute","updateMap","handleEnemyTurns","actor","actors","ai","getComponent","setupGameHtml","resizeCanvas","addEventListener","gameDom","classList","add","canvas","body","ctx","getContext","handleEvent","type","width","innerWidth","height","innerHeight","clearAll","clearRect","self","defaultDelay","lastShiftUp","treatShiftNumpadEqual","keysDown","keysDelayed","defaults","Map","controls","set","load","key","preventDefault","getModifierState","shiftKey","code","startsWith","keyCode","getKey","endsWith","localStorage","getItem","parse","resetToDefault","save","setItem","Array","from","entries","setControls","controlsMap","value","keys","val","clone","isPressed","pressed","get","defaultKeys","forEach","keyToTest","isDelayed","delayed","deleteKey","delay","setTimeout","testPressed","succeeded","_ActionWithDirection","dq","dr","HexUtil","static","Math","PI","HEX_RADIUS_V","HEX_RADIUS_H","x","y","beginPath","lineTo","cos","HEX_A","sin","closePath","q","r","floor","row","col","fraqQ","fraqR","round","fraqS","s","qDiff","abs","rDiff","sDiff","point","sqrt","axialRound","MeleeAction","hex","destXY","hexToArray","blockingActor","name","plural","blockingName","attackColor","entityFighter","actorFighter","damage","power","defense","description","takeDamage","MovementAction","destTile","isWall","moveTo","BumpAction","WaitAction","DefaultPlayerEventHandler","mouse","mouseDown","targetedTile","pathTiles","teardown","removeEventListener","onMouseMove","onMouseDown","onMouseUp","onLeftClick","onRightClick","onChange","onKeydown","clientX","clientY","pixelToHex","tile","pathTile","highlighted","costGraph","playerHex","tileHex","path","pathNode","newRow","newCol","pathNodeTile","_Component","args","baseType","parentEntity","cachedSave","clearSaveCache","hasComponent","components","saveBoolean","arg","defaultValue","saveJson","loadBooleanOrObject","loadArg","loadArgArray","array","items","split","trim","_AI","AIDead","previousAI","aiDead","Fov","explored","visible","setExplored","setVisible","HexNode","weight","getCost","BinaryHeap","scoreFunction","sinkDown","pop","end","bubbleUp","node","indexOf","size","rescoreElement","n","parentN","parent","elemScore","isDone","child2N","child1N","child1Score","swap","child1","child2","AStar","curr","unshift","f","graph","start","cleanDirty","closest","openHeap","getHeap","closestNode","h","heuristicManhattanHex","markDirty","currentNode","pathTo","closed","neighbors","il","neighbor","gScore","g","beenVisited","visited","pos0","pos1","Graph","gridIn","nodes","grid","init","dirtyNodes","cleanNode","ret","addNeighbor","xy","CustomFov","previousVisibleTiles","visibleTiles","visibleActors","radius","top","left","max","right","min","bottom","addVisibleTile","addVisibleActor","exploreTileByHex","exploreTileByArray","actorHex","setComponent","getCostGraph","fovWidth","fovHeight","cost","fill","isAlive","getPath","startHex","endHex","search","exploreDirection","dir","dir2","hex1","hex2","move1","move2","direction1","direction2","diagonal","hexDiagonal","WanderAction","direction","random","AIMeleeChase","chaseLocation","movementActions","currentMovement","aiMeleeChase","entityHex","closestEnemies","closestDistance","entityFaction","actorFaction","isEnemyOf","distance","distanceTo","closestEnemy","closestEnemyHex","lastAction","next","shift","nextTileHex","BlocksFov","blocksFov","BlocksMovement","blocksMovement","onEntityDeath","Faction","factions","enemies","faction","otherFaction","Fighter","hp","maxHp","fighter","setHp","newHp","die","callEvent","aiArgs","removeComponent","Hex","updateHexCoords","isEdge","rows","cols","getDisplayX","getDisplayY","getTileFromArray","getNumAdjacentWalls","ne","se","sw","nw","isTileWall","isInRange","otherHex","distQ","distR","distS","types","component","create","Extend","out","arguments","Object","prototype","hasOwnProperty","call","deep","_Entity","sprite","letter","componentArray","loadComponents","event","draw","json","Actor","drawX","drawY","setName","newName","Tile","borderColor","drawHex","templates","loadTemplates","parsedJson","extends","has","template","createFromTemplate","loadTemplate","entities","entityGroups","generators","loadGenerator","generatorJson","generator","levels","getChancesForLevel","level","chances","group","getActorForLevel","actorOrGroup","getRandomFromGroup","actorGroup","returnChance","totalWeight","chance","currentWeight","rand","CellularAutomataMap","tiles","numRows","create2dArray","isInBounds","OFFSET_V","j","OFFSET_H","tileFov","getTileFromArrayCoords","getTileFromHexCoords","getTileNeighbor","getBlockingActorAtArrayLocation","percentAreWalls","wallEntity","floorEntity","randomFillBuild","makeCaverns","rowsMiddle","colsMiddle","addRandomNoise","repeat","placeWallLogic","numWalls","placeEntities","generation","percentage","distFromPlayer","actorId","requestAnimationFrame","foundPlace","playerRow","playerCol"],"sourceRoot":""}