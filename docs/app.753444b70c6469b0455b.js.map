{"version":3,"file":"app.753444b70c6469b0455b.js","mappings":"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","sources":["webpack://roguelikedev-2022/./src/styles/style.css","webpack://roguelikedev-2022/./node_modules/css-loader/dist/runtime/api.js","webpack://roguelikedev-2022/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://roguelikedev-2022/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://roguelikedev-2022/./src/styles/style.css?ff94","webpack://roguelikedev-2022/./src/js/actions/_Action.js","webpack://roguelikedev-2022/./src/js/actions/NoAction.js","webpack://roguelikedev-2022/./src/js/actions/UnableToPerformAction.js","webpack://roguelikedev-2022/./src/js/Engine.js","webpack://roguelikedev-2022/./src/js/SceneState.js","webpack://roguelikedev-2022/./src/js/controls/Key.js","webpack://roguelikedev-2022/./src/js/controls/Controls.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/_ActionWithDirection.js","webpack://roguelikedev-2022/./src/js/util/HexUtil.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/MeleeAction.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/MovementAction.js","webpack://roguelikedev-2022/./src/js/actions/actionWithDirection/BumpAction.js","webpack://roguelikedev-2022/./src/js/actions/WaitAction.js","webpack://roguelikedev-2022/./src/js/event/DefaultPlayerEventHandler.js","webpack://roguelikedev-2022/./src/js/event/_EventHandler.js","webpack://roguelikedev-2022/./src/js/components/_Component.js","webpack://roguelikedev-2022/./src/js/components/ai/_AI.js","webpack://roguelikedev-2022/./src/js/components/ai/AIDead.js","webpack://roguelikedev-2022/./src/js/components/Fov.js","webpack://roguelikedev-2022/./src/js/map/fov/CustomFov.js","webpack://roguelikedev-2022/./src/js/map/fov/_BaseFov.js","webpack://roguelikedev-2022/./src/js/actions/WanderAction.js","webpack://roguelikedev-2022/./src/js/pathfinding/BinaryHeap.js","webpack://roguelikedev-2022/./src/js/pathfinding/AStar.js","webpack://roguelikedev-2022/./src/js/pathfinding/HexNode.js","webpack://roguelikedev-2022/./src/js/pathfinding/Graph.js","webpack://roguelikedev-2022/./src/js/components/ai/AIMeleeChase.js","webpack://roguelikedev-2022/./src/js/components/BlocksFov.js","webpack://roguelikedev-2022/./src/js/components/BlocksMovement.js","webpack://roguelikedev-2022/./src/js/components/Faction.js","webpack://roguelikedev-2022/./src/js/components/Fighter.js","webpack://roguelikedev-2022/./src/js/components/Hex.js","webpack://roguelikedev-2022/./src/js/components/ComponentLoader.js","webpack://roguelikedev-2022/./src/js/util/Extend.js","webpack://roguelikedev-2022/./src/js/entity/_Entity.js","webpack://roguelikedev-2022/./src/js/entity/Actor.js","webpack://roguelikedev-2022/./src/js/entity/Tile.js","webpack://roguelikedev-2022/./src/js/entity/EntityLoader.js","webpack://roguelikedev-2022/./src/js/map/ChanceLoader.js","webpack://roguelikedev-2022/./src/js/map/CellularAutomataMap.js","webpack://roguelikedev-2022/./src/js/map/_HexGameMap.js","webpack://roguelikedev-2022/./src/js/util/ArrayUtil.js","webpack://roguelikedev-2022/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/style.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB\",\"sourcesContent\":[\"* {\\n    box-sizing: border-box;\\n}\\n\\nbody {\\n    margin: 0 auto;\\n    overflow: hidden;\\n    width: 100vw;\\n    height: 100vh;\\n    font-size: 1.2vh;\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import engine from \"../Engine\";\n\nexport default class _Action {\n    constructor(entity) {\n        this.entity = entity;\n    }\n\n    /**\n     * @returns {_Action}\n     */\n    perform() {\n        console.error(\"Not Implemented\");\n    }\n\n    isPlayer() {\n        return this.entity === engine.player;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class NoAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform() {\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class UnableToPerformAction extends _Action {\n    constructor(entity, reason) {\n        super(entity);\n\n        this.reason = reason;\n    }\n\n    perform() {\n        return this;\n    }\n}","import NoAction from \"./actions/NoAction\";\nimport UnableToPerformAction from \"./actions/UnableToPerformAction\";\n\nclass Engine {\n    constructor() {\n        this.eventHandler = null;\n        this.player = null;\n        this.gameMap = null;\n        this.needsRenderUpdate = false;\n    }\n\n    handleEvents() {\n        this.processAction(this.eventHandler.handleInput());\n    }\n\n    processAction(action) {\n        if (action && this.eventHandler.isPlayerTurn) {\n            const performedAction = action.perform();\n            if (performedAction instanceof NoAction) {\n                return false;\n            }\n\n            if (performedAction instanceof UnableToPerformAction) {\n                if (performedAction.reason) {\n                    console.log(performedAction.reason);\n                    //messageConsole.text(performedAction.reason).build();\n                }\n                return false;\n            } else {\n                engine.needsRenderUpdate = true;\n                engine.player.fov.compute(engine.player, 5);\n                engine.player.fov.updateMap();\n\n                this.handleEnemyTurns();\n\n                return true;\n            }\n        }\n    }\n\n    handleEnemyTurns() {\n        this.eventHandler.isPlayerTurn = false;\n\n        for (const actor of this.gameMap.actors) {\n            if (actor !== this.player) {\n                const ai = actor.getComponent(\"ai\");\n                if (ai) {\n                    ai.perform();\n                }\n            }\n        }\n\n        this.eventHandler.isPlayerTurn = true;\n    }\n}\n\nconst engine = new Engine();\nexport default engine;","import engine from \"./Engine\";\n\nclass SceneState {\n    constructor() {\n        this.setupGameHtml();\n\n        this.resizeCanvas();\n        window.addEventListener( \"resize\", this);\n    }\n\n    setupGameHtml() {\n        const gameDom = document.createElement(\"div\");\n        gameDom.classList.add(\"game\");\n\n        this.canvas = document.createElement(\"canvas\");\n        this.canvas.classList.add(\"view\");\n\n        gameDom.appendChild(this.canvas);\n\n        document.body.appendChild(gameDom);\n\n        this.ctx = this.canvas.getContext(\"2d\");\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"resize\":\n                this.resizeCanvas();\n\n                break;\n        }\n    }\n\n    resizeCanvas() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n\n        engine.needsRenderUpdate = true;\n    }\n\n    clearAll() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\nconst sceneState = new SceneState();\nexport default sceneState;\n","const Key = {\n    LEFT: \"ArrowLeft\",\n    RIGHT: \"ArrowRight\",\n    UP: \"ArrowUp\",\n    DOWN: \"ArrowDown\",\n    BACKSPACE: \"Backspace\",\n    TAB: \"Tab\",\n    ENTER: \"Enter\",\n    SHIFT_LEFT: \"Left Shift\",\n    SHIFT_RIGHT: \"Right Shift\",\n    CONTROL_LEFT: \"Left Control\",\n    CONTROL_RIGHT: \"Right Control\",\n    ALT_LEFT: \"Left Alt\",\n    ALT_RIGHT: \"Right Alt\",\n    PAUSE_BREAK: \"Pause\",\n    CAPS_LOCK: \"CapsLock\",\n    ESCAPE: \"Escape\",\n    SPACE: \" \",\n    PAGE_UP: \"PageUp\",\n    PAGE_DOWN: \"PageDown\",\n    END: \"End\",\n    HOME: \"Home\",\n    INSERT: \"Insert\",\n    DELETE: \"Delete\",\n    OS_LEFT: \"Left OS\",\n    OS_RIGHT: \"Right OS\",\n    CONTEXT_MENU: \"ContextMenu\",\n    SCROLL_LOCK: \"ScrollLock\",\n    NUM_LOCK: \"NumLock\",\n    NUMPAD_DIVIDE: \"Numpad /\",\n    NUMPAD_MULTIPLY: \"Numpad *\",\n    NUMPAD_SUBTRACT: \"Numpad -\",\n    NUMPAD_ADD: \"Numpad +\",\n    NUMPAD_ENTER: \"Numpad Enter\",\n\n    NUMPAD_PERIOD: \"Numpad .\",\n    NUMPAD_0: \"Numpad 0\",\n    NUMPAD_1: \"Numpad 1\",\n    NUMPAD_2: \"Numpad 2\",\n    NUMPAD_3: \"Numpad 3\",\n    NUMPAD_4: \"Numpad 4\",\n    NUMPAD_5: \"Numpad 5\",\n    NUMPAD_6: \"Numpad 6\",\n    NUMPAD_7: \"Numpad 7\",\n    NUMPAD_8: \"Numpad 8\",\n    NUMPAD_9: \"Numpad 9\",\n\n    NUMPAD_DELETE: \"Numpad Delete\",\n    NUMPAD_INSERT: \"Numpad Insert\",\n    NUMPAD_END: \"Numpad End\",\n    NUMPAD_ARROW_DOWN: \"Numpad ArrowDown\",\n    NUMPAD_PAGE_DOWN: \"Numpad PageDown\",\n    NUMPAD_ARROW_LEFT: \"Numpad ArrowLeft\",\n    NUMPAD_CLEAR: \"Numpad Clear\",\n    NUMPAD_ARROW_RIGHT: \"Numpad ArrowRight\",\n    NUMPAD_HOME: \"Numpad Home\",\n    NUMPAD_ARROW_UP: \"Numpad ArrowUp\",\n    NUMPAD_PAGE_UP: \"Numpad PageUp\",\n};\n\nexport default Key;","import Key from \"./Key\";\n\nclass Controls {\n    constructor() {\n        const self = this;\n\n        self.defaultDelay = 25;\n        self.lastShiftUp = null;\n        self.treatShiftNumpadEqual = true;\n        self.keysDown = [];\n        self.keysDelayed = [];\n        self.defaults = new Map();\n\n        self.controls = new Map();\n        self.defaults.set(\"up\", [Key.NUMPAD_8, Key.UP]);\n        self.defaults.set(\"down\", [Key.NUMPAD_2, Key.DOWN]);\n\n        //self.defaults.set(\"left\", [Key.NUMPAD_4, Key.LEFT]);\n        //self.defaults.set(\"right\", [Key.NUMPAD_6, Key.RIGHT]);\n        self.defaults.set(\"nw\", [Key.NUMPAD_7]);\n        self.defaults.set(\"ne\", [Key.NUMPAD_9]);\n        self.defaults.set(\"sw\", [Key.NUMPAD_1]);\n        self.defaults.set(\"se\", [Key.NUMPAD_3]);\n        self.defaults.set(\"wait\", [Key.NUMPAD_5]);\n\n        self.load();\n\n        addEventListener(\"keydown\", function (e) {\n            // TODO: Evaluate if this should be generalized. I don't want to prevent all keys necessarily.\n            if (e.key === \"/\") {\n                e.preventDefault();\n            }\n\n            if (self.treatShiftNumpadEqual) {\n                const numLockOn = e.getModifierState(\"NumLock\");\n                // Re-add Shift key from Numpad press\n                if (numLockOn && !e.shiftKey && e.code.startsWith(\"Numpad\") && e.keyCode < 90) {\n                    if (self.lastShiftUp) {\n                        self.keysDown[self.lastShiftUp] = true;\n                        //console.log(\"Bonus Key Down: \", self.lastShiftUp);\n                    }\n                }\n            }\n\n            const key = self.getKey(e.key, e.code);\n            //console.log(\"Key Down: \", key);\n            self.keysDown[key] = true;\n        }, false);\n\n\n        addEventListener(\"keyup\", function (e) {\n            const key = self.getKey(e.key, e.code);\n            if (key === Key.SHIFT_LEFT || key === Key.SHIFT_RIGHT) {\n                self.lastShiftUp = key;\n            }\n\n            //console.log(\"Key Up: \", key);\n            delete self.keysDown[key];\n            delete self.keysDelayed[key];\n        }, false);\n    }\n\n    getKey(key, code) {\n        if (!code.startsWith(\"Arrow\")) {\n            if (code.endsWith(\"Left\")) {\n                key = \"Left \" + key;\n            } else if (code.endsWith(\"Right\")) {\n                key = \"Right \" + key;\n            } else if (code.startsWith(\"Numpad\")) {\n                key = \"Numpad \" + key;\n            }\n        }\n\n        if (this.treatShiftNumpadEqual) {\n            switch(key) {\n                case Key.NUMPAD_DELETE: key = Key.NUMPAD_PERIOD; break;\n                case Key.NUMPAD_INSERT: key = Key.NUMPAD_0; break;\n                case Key.NUMPAD_END: key = Key.NUMPAD_1; break;\n                case Key.NUMPAD_ARROW_DOWN: key = Key.NUMPAD_2; break;\n                case Key.NUMPAD_PAGE_DOWN: key = Key.NUMPAD_3; break;\n                case Key.NUMPAD_ARROW_LEFT: key = Key.NUMPAD_4; break;\n                case Key.NUMPAD_CLEAR: key = Key.NUMPAD_5; break;\n                case Key.NUMPAD_ARROW_RIGHT: key = Key.NUMPAD_6; break;\n                case Key.NUMPAD_HOME: key = Key.NUMPAD_7; break;\n                case Key.NUMPAD_ARROW_UP: key = Key.NUMPAD_8; break;\n                case Key.NUMPAD_PAGE_UP: key = Key.NUMPAD_9; break;\n            }\n        }\n\n        return key;\n    }\n\n    load() {\n        const controls = localStorage.getItem(\"controls\");\n        if (controls) {\n            this.controls = new Map(JSON.parse(controls));\n        } else {\n            this.resetToDefault();\n        }\n    }\n\n    save() {\n        localStorage.setItem(\"controls\", JSON.stringify(Array.from(this.controls.entries())));\n    }\n\n    setControls(controlsMap) {\n        this.controls = new Map();\n        for (const [key, value] of controlsMap.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            this.controls.set(key, keys);\n        }\n        this.save();\n    }\n\n    resetToDefault() {\n        this.setControls(this.defaults);\n    }\n\n    clone() {\n        const clone = new Map();\n        for (const [key, value] of this.controls.entries()) {\n            const keys = [];\n            for (const val of value) {\n                keys.push(val);\n            }\n            clone.set(key, keys);\n        }\n        return clone;\n    }\n\n    isPressed(key) {\n        const self = this;\n        let pressed = false;\n\n        let keys = self.controls.get(key);\n        if (!keys) {\n            const defaultKeys = self.defaults.get(key);\n            if (defaultKeys) {\n                self.controls.set(key, defaultKeys);\n                self.save();\n                keys = defaultKeys;\n            } else {\n                console.error(\"Missing keybindings for: \", key, keys);\n            }\n        }\n        keys.forEach(function(keyToTest) {\n            if (keyToTest in self.keysDown) {\n                pressed = true;\n            }\n        });\n\n        return pressed;\n    }\n\n    isDelayed(key) {\n        const self = this;\n        let delayed = false;\n\n        this.controls.get(key).forEach(function(keyToTest) {\n            if (keyToTest in self.keysDelayed) {\n                delayed = true;\n            }\n        });\n\n        return delayed;\n    }\n\n    deleteKey(key, delay) {\n        const self = this;\n        self.controls.get(key).forEach(function(keyToTest) {\n            delete self.keysDown[keyToTest];\n            if (delay) {\n                self.keysDelayed[keyToTest] = true;\n            }\n        });\n\n        if (delay) {\n            setTimeout(function() {\n                self.controls.get(key).forEach(function(keyToTest) {\n                    delete self.keysDelayed[keyToTest];\n                });\n            }, delay);\n        }\n    }\n\n    /**\n     *  Returns true if press succeeds\n     *          false if press does not succeed\n     */\n    testPressed(key, delay) {\n        delay = delay || this.defaultDelay;\n\n        const self = this;\n        let succeeded = false;\n\n        if (self.isPressed(key) && !self.isDelayed(key)) {\n            self.deleteKey(key, delay);\n            succeeded = true;\n        }\n\n        return succeeded;\n    }\n}\n\nconst controls = new Controls();\nexport default controls;","import _Action from \"../_Action\";\n\nexport default class _ActionWithDirection extends _Action {\n    constructor(entity, dq = 0, dr = 0) {\n        super(entity);\n\n        this.dq = dq;\n        this.dr = dr;\n    }\n\n    /**\n     * @returns {_ActionWithDirection}\n     */\n    perform() {\n        console.error(\"Not Implemented\");\n    }\n}","export default class HexUtil {\n    static PI = Math.PI;\n    static HEX_A = this.PI / 3;\n    static HEX_RADIUS = 20;\n\n    constructor() {}\n\n    static drawHex(ctx, x, y) {\n        ctx.beginPath();\n        for (let i = 0; i < 6; i ++) {\n            ctx.lineTo(x + HexUtil.HEX_RADIUS * Math.cos(HexUtil.HEX_A * i), y + HexUtil.HEX_RADIUS * Math.sin(HexUtil.HEX_A * i));\n        }\n        ctx.closePath();\n    }\n\n    static hexToArray(q, r) {\n        return {\n            x: Math.floor(q + (r / 2.0)),\n            y: r\n        };\n    }\n\n    static arrayToHex(row, col) {\n        return {\n            q: row - Math.floor(col / 2),\n            r: col\n        };\n    }\n}\n","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport engine from \"../../Engine\";\nimport HexUtil from \"../../util/HexUtil\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\n\nexport default class MeleeAction extends _ActionWithDirection {\n    constructor(entity, dq, dr) {\n        super(entity, dq, dr);\n    }\n\n    perform() {\n        const hex = this.entity.getComponent(\"hex\");\n        if (hex) {\n            const destXY = HexUtil.hexToArray(hex.q + this.dq, hex.r + this.dr);\n            const blockingActor = engine.gameMap.getBlockingActorAtArrayLocation(destXY.x, destXY.y);\n            if (blockingActor) {\n                let name;\n                let plural;\n                if (this.isPlayer()) {\n                    name = \"You\";\n                    plural = \"\";\n                } else {\n                    name = this.entity.name;\n                    plural = \"s\";\n                }\n\n                let blockingName;\n                if (blockingActor === engine.player) {\n                    blockingName = \"You\";\n                } else {\n                    blockingName = blockingActor.name;\n                }\n\n                const entityFighter = this.entity.getComponent(\"fighter\");\n                const actorFighter = blockingActor.getComponent(\"fighter\");\n                const damage = entityFighter.power - actorFighter.defense;\n\n                let description = name + \" attack\" + plural + \" \" + blockingName;\n                if (damage > 0) {\n                    description += \" for \" + damage + \" hit points.\";\n\n                    actorFighter.takeDamage(damage);\n                } else {\n                    description += \", but does no damage.\";\n                }\n\n                console.log(description);\n            } else {\n                return new UnableToPerformAction(this.entity, \"There's nothing to attack there!\");\n            }\n        }\n\n        return this;\n    }\n}","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport engine from \"../../Engine\";\nimport UnableToPerformAction from \"../UnableToPerformAction\";\nimport HexUtil from \"../../util/HexUtil\";\n\nexport default class MovementAction extends _ActionWithDirection {\n    constructor(entity, dq, dr) {\n        super(entity, dq, dr);\n    }\n\n    perform() {\n        const hex = this.entity.getComponent(\"hex\");\n        if (hex) {\n            const destXY = HexUtil.hexToArray(hex.q + this.dq, hex.r + this.dr);\n\n            if (!engine.gameMap.isInBounds(destXY.x, destXY.y)) {\n                return new UnableToPerformAction(this.entity, \"Location is outside of the map!\");\n            }\n\n            const destTile = engine.gameMap.tiles[destXY.x][destXY.y];\n            if (destTile.isWall()) {\n                return new UnableToPerformAction(this.entity, \"There's a \" + destTile.name + \" in the way!\");\n            }\n\n            const blockingActor = engine.gameMap.getBlockingActorAtArrayLocation(destXY.x, destXY.y);\n            if (blockingActor) {\n                return new UnableToPerformAction(this.entity, \"There's something in the way!\");\n            }\n\n            hex.moveTo(destXY.x, destXY.y);\n        }\n\n        return this;\n    }\n}","import _ActionWithDirection from \"./_ActionWithDirection\";\nimport engine from \"../../Engine\";\nimport HexUtil from \"../../util/HexUtil\";\nimport MeleeAction from \"./MeleeAction\";\nimport MovementAction from \"./MovementAction\";\n\nexport default class BumpAction extends _ActionWithDirection {\n    constructor(entity, dq, dr) {\n        super(entity, dq, dr);\n    }\n\n    perform() {\n        const hex = this.entity.getComponent(\"hex\");\n        if (hex) {\n            const destXY = HexUtil.hexToArray(hex.q + this.dq, hex.r + this.dr);\n            const blockingActor = engine.gameMap.getBlockingActorAtArrayLocation(destXY.x, destXY.y);\n            if (blockingActor) {\n                return new MeleeAction(this.entity, this.dq, this.dr).perform();\n            } else {\n                return new MovementAction(this.entity, this.dq, this.dr).perform();\n            }\n        }\n\n        return this;\n    }\n}","import _Action from \"./_Action\";\n\nexport default class WaitAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform() {\n        return this;\n    }\n}","import _EventHandler from \"./_EventHandler\";\nimport controls from \"../controls/Controls\";\nimport BumpAction from \"../actions/actionWithDirection/BumpAction\";\nimport engine from \"../Engine\";\nimport WaitAction from \"../actions/WaitAction\";\n\nexport default class DefaultPlayerEventHandler extends _EventHandler {\n    constructor() {\n        super();\n    }\n\n    teardown() {\n        super.teardown();\n    }\n\n    handleInput() {\n        let action = null;\n\n        if (this.isPlayerTurn && engine.player.isAlive()) {\n            if (controls.testPressed(\"up\")) {\n                action = new BumpAction(engine.player, -1, 0);\n            } else if (controls.testPressed(\"down\")) {\n                action = new BumpAction(engine.player, 1, 0);\n            } else if (controls.testPressed(\"nw\")) {\n                action = new BumpAction(engine.player, 0, -1);\n            } else if (controls.testPressed(\"ne\")) {\n                action = new BumpAction(engine.player, -1, 1);\n            } else if (controls.testPressed(\"sw\")) {\n                action = new BumpAction(engine.player, 1, -1);\n            } else if (controls.testPressed(\"se\")) {\n                action = new BumpAction(engine.player, 0, 1);\n            } else if (controls.testPressed(\"wait\")) {\n                action = new WaitAction(engine.player);\n            }\n        }\n\n        return action;\n    }\n}","export default class _EventHandler {\n    constructor() {\n        this.mouseDown = false;\n\n        window.addEventListener(\"mousemove\", this);\n        window.addEventListener(\"mousedown\", this);\n        window.addEventListener(\"mouseup\", this);\n        window.addEventListener(\"click\", this);\n        window.addEventListener(\"contextmenu\", this);\n        window.addEventListener(\"change\", this);\n        window.addEventListener(\"keydown\", this);\n\n        this.isPlayerTurn = true;\n    }\n\n    teardown() {\n        window.removeEventListener(\"mousemove\", this);\n        window.removeEventListener(\"mousedown\", this);\n        window.removeEventListener(\"mouseup\", this);\n        window.removeEventListener(\"click\", this);\n        window.removeEventListener(\"contextmenu\", this);\n        window.removeEventListener(\"change\", this);\n        window.removeEventListener(\"keydown\", this);\n    }\n\n    handleEvent(e) {\n        switch(e.type) {\n            case \"mousemove\":\n                this.onMouseMove(e);\n                break;\n            case \"mousedown\":\n                this.onMouseDown(e);\n                break;\n            case \"mouseup\":\n                this.onMouseUp(e);\n                break;\n            case \"click\":\n                this.onLeftClick(e);\n                break;\n            case \"contextmenu\":\n                this.onRightClick(e);\n                break;\n            case \"change\":\n                this.onChange(e);\n                break;\n            case \"keydown\":\n                this.onKeydown(e);\n                break;\n        }\n    }\n\n    handleInput() {}\n\n    onMouseMove(/*e*/) {}\n\n    onMouseDown(/*e*/) {\n        this.mouseDown = true;\n    }\n\n    onMouseUp(/*e*/) {\n        this.mouseDown = false;\n    }\n\n    onLeftClick(/*e*/) {}\n\n    onRightClick(/*e*/) {}\n\n    onChange(/*e*/) {}\n\n    onKeydown(/*e*/) {}\n\n}","import engine from \"../Engine\";\n\nexport default class _Component {\n    constructor(args = {}, baseType, type) {\n        this.args = args;\n        this.baseType = baseType || \"component\";\n        this.type = type || this.baseType;\n        this.parentEntity = args.parentEntity;\n\n        this.cachedSave = null;\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n        this.parentEntity?.clearSaveCache();\n    }\n\n    save() {\n        return null;\n    }\n\n    hasComponent() {\n        return this.args.components && this.args.components[this.type] !== undefined;\n    }\n\n    isPlayer() {\n        return this.parentEntity === engine.player;\n    }\n\n    saveBoolean(arg, defaultValue) {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {};\n        if (arg !== defaultValue) {\n            saveJson[this.type] = arg;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    loadBooleanOrObject(name) {\n        const type = typeof this.args.components[this.type];\n        if (type === \"boolean\") {\n            return this.args.components[this.type];\n        } else if (type === \"object\") {\n            return this.args.components[this.type][name];\n        }\n    }\n\n    loadArg(name, defaultValue) {\n        return this.args.components[this.type][name] || defaultValue;\n    }\n\n    loadArgArray(name) {\n        const array = [];\n        const items = this.args.components[this.type][name].split(\",\");\n        for (const item of items) {\n            array.push(item.trim());\n        }\n\n        return array;\n    }\n}","import _Component from \"../_Component\";\n\nexport default class _AI extends _Component {\n    constructor(args = {}, type) {\n        super(args, \"ai\", type);\n    }\n\n    save() {\n        return null;\n    }\n\n    perform() {\n        console.error(\"Not Implemented\");\n    }\n}","import _AI from \"./_AI\";\n\nexport default class AIDead extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiDead\");\n\n        this.previousAI = \"\";\n\n        if (this.hasComponent()) {\n            this.previousAI = this.loadArg(\"previousAI\", \"\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            aiDead: {}\n        };\n\n        saveJson.aiDead.previousAI = this.previousAI;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform() {}\n}","import _Component from \"./_Component\";\n\nexport default class Fov extends _Component {\n    constructor(args) {\n        super(args, \"fov\");\n\n        this.explored = false;\n        this.visible = false;\n\n        if (this.hasComponent()) {\n            this.explored = this.loadArg(\"explored\", false);\n            this.visible = this.loadArg(\"visible\", false);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            fov: {}\n        };\n\n        if (this.explored !== false) {\n            saveJson.fov.explored = this.explored;\n        }\n\n        if (this.visible !== false) {\n            saveJson.fov.visible = this.visible;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    setExplored(explored) {\n        this.explored = explored;\n        this.clearSaveCache();\n    }\n\n    setVisible(visible) {\n        this.visible = visible;\n    }\n}","import _BaseFov from \"./_BaseFov\";\nimport engine from \"../../Engine\";\n\nexport default class CustomFov extends _BaseFov {\n    constructor() {\n        super();\n    }\n\n    compute(entity, radius) {\n        super.compute(entity, radius);\n\n        this.exploreTileByHex(this.q, this.r);\n\n        for (let i = 1; i <= 6; i++) {\n            this.exploreDirection(this.q, this.r, i, radius);\n        }\n    }\n\n    exploreDirection(q, r, dir, radius) {\n        let dir2 = dir + 1;\n        if (dir2 > 6) {\n            dir2 = 1;\n        }\n\n        let move1 = false;\n        let move2 = false;\n        let hex1;\n        let hex2;\n\n        const direction1 = engine.gameMap.getTileNeighbor(q, r, dir);\n        if (direction1) {\n            hex1 = direction1.getComponent(\"hex\");\n            this.exploreTileByArray(hex1.row, hex1.col);\n\n            if (!direction1.isWall()) {\n                move1 = true;\n            }\n        }\n\n        const direction2 = engine.gameMap.getTileNeighbor(q, r, dir2);\n        if (direction2) {\n            hex2 = direction2.getComponent(\"hex\");\n            this.exploreTileByArray(hex2.row, hex2.col);\n\n            if (!direction2.isWall()) {\n                move2 = true;\n            }\n        }\n\n        radius--;\n\n        if (radius > 1) {\n            if (move1 || move2) {\n                let diagonal;\n                if (hex1) {\n                    diagonal = engine.gameMap.getTileNeighbor(hex1.q, hex1.r, dir2);\n                } else if (hex2) {\n                    diagonal = engine.gameMap.getTileNeighbor(hex2.q, hex2.r, dir);\n                }\n\n                if (diagonal) {\n                    const hexDiagonal = diagonal.getComponent(\"hex\");\n                    this.exploreTileByArray(hexDiagonal.row, hexDiagonal.col);\n                }\n            }\n\n            if (move1) {\n                this.exploreDirection(hex1.q, hex1.r, dir, radius);\n            }\n\n            if (move2) {\n                this.exploreDirection(hex2.q, hex2.r, dir, radius);\n            }\n        }\n    }\n}","import engine from \"../../Engine\";\nimport Fov from \"../../components/Fov\";\nimport HexUtil from \"../../util/HexUtil\";\n\nexport default class _BaseFov {\n    constructor() {\n        this.previousVisibleTiles = [];\n        this.visibleTiles = [];\n        this.visibleActors = [];\n    }\n\n    compute(entity, radius) {\n        this.previousVisibleTiles = this.visibleTiles;\n        this.visibleTiles = [];\n        this.visibleActors = [];\n\n        this.hex = entity.getComponent(\"hex\");\n        this.q = this.hex.q;\n        this.r = this.hex.r;\n\n        this.tile = engine.gameMap.getTileFromHexCoords(this.q, this.r);\n        const x = this.hex.row;\n        const y = this.hex.col;\n\n        this.left = Math.max(0, x - radius);\n        this.right = Math.min(engine.gameMap.rows, x + radius);\n        this.top = Math.max(0, y - radius);\n        this.bottom = Math.min(engine.gameMap.cols, y + radius);\n    }\n\n    addVisibleActor(actor) {\n        if (this.visibleActors.indexOf(actor) === -1) {\n            this.visibleActors.push(actor);\n        }\n    }\n\n    exploreTileByHex(q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n        this.exploreTileByArray(xy.x, xy.y);\n    }\n\n    exploreTileByArray(row, col) {\n        this.visibleTiles.push(engine.gameMap.tiles[row][col]);\n\n        for (const actor of engine.gameMap.actors) {\n            const actorHex = actor.getComponent(\"hex\");\n            if (actorHex) {\n                if (row === actorHex.row && col === actorHex.col) {\n                    this.addVisibleActor(actor);\n                }\n            }\n        }\n    }\n\n    updateMap() {\n        for (const tile of this.previousVisibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setVisible(false);\n            }\n        }\n\n        for (const tile of this.visibleTiles) {\n            const fov = tile.getComponent(\"fov\");\n            if (fov) {\n                fov.setExplored(true);\n                fov.setVisible(true);\n            } else {\n                tile.setComponent(new Fov({components: {fov: {explored: true, visible: true}}}));\n            }\n        }\n    }\n}","import _Action from \"./_Action\";\nimport WaitAction from \"./WaitAction\";\nimport MovementAction from \"./actionWithDirection/MovementAction\";\n\nexport default class WanderAction extends _Action {\n    constructor(entity) {\n        super(entity);\n    }\n\n    perform() {\n        const direction = Math.floor(Math.random() * 7);\n\n        if (direction === 0) {\n            return new WaitAction(this.entity).perform();\n        } else {\n            let q = 0;\n            let r = 0;\n            switch(direction) {\n                case 1: // N\n                    q = -1;\n                    break;\n                case 2: // NE\n                    q = -1;\n                    r = 1;\n                    break;\n                case 3: // SE\n                    r = 1;\n                    break;\n                case 4: // S\n                    q = 1;\n                    break;\n                case 5: // SW\n                    q = 1;\n                    r = -1;\n                    break;\n                case 6: // NW\n                default:\n                    r = -1;\n                    break;\n            }\n\n            return new MovementAction(this.entity, q, r);\n        }\n    }\n}","export default class BinaryHeap {\n    constructor(scoreFunction) {\n        this.content = [];\n        this.scoreFunction = scoreFunction;\n    }\n\n    push(element) {\n        // Add the new element to the end of the array.\n        this.content.push(element);\n\n        // Allow it to sink down.\n        this.sinkDown(this.content.length - 1);\n    }\n\n    pop() {\n        // Store the first element so we can return it later.\n        const result = this.content[0];\n        // Get the element at the end of the array.\n        const end = this.content.pop();\n        // If there are any elements left, put the end element at the\n        // start, and let it bubble up.\n        if (this.content.length > 0) {\n            this.content[0] = end;\n            this.bubbleUp(0);\n        }\n        return result;\n    }\n\n    remove(node) {\n        const i = this.content.indexOf(node);\n\n        // When it is found, the process seen in 'pop' is repeated\n        // to fill up the hole.\n        const end = this.content.pop();\n\n        if (i !== this.content.length - 1) {\n            this.content[i] = end;\n\n            if (this.scoreFunction(end) < this.scoreFunction(node)) {\n                this.sinkDown(i);\n            } else {\n                this.bubbleUp(i);\n            }\n        }\n    }\n    size() {\n        return this.content.length;\n    }\n\n    rescoreElement(node) {\n        this.sinkDown(this.content.indexOf(node));\n    }\n\n    sinkDown(n) {\n        // Fetch the element that has to be sunk.\n        const element = this.content[n];\n\n        // When at 0, an element can not sink any further.\n        while (n > 0) {\n            // Compute the parent element's index, and fetch it.\n            const parentN = ((n + 1) >> 1) - 1;\n            const parent = this.content[parentN];\n            // Swap the elements if the parent is greater.\n            if (this.scoreFunction(element) < this.scoreFunction(parent)) {\n                this.content[parentN] = element;\n                this.content[n] = parent;\n                // Update 'n' to continue at the new position.\n                n = parentN;\n            }\n            // Found a parent that is less, no need to sink any further.\n            else {\n                break;\n            }\n        }\n    }\n\n    bubbleUp(n) {\n        // Look up the target element and its score.\n        const length = this.content.length;\n        const element = this.content[n];\n        const elemScore = this.scoreFunction(element);\n\n        let isDone = false;\n        while (!isDone) {\n            // Compute the indices of the child elements.\n            const child2N = (n + 1) << 1;\n            const child1N = child2N - 1;\n            // This is used to store the new position of the element, if any.\n            let swap = null;\n            let child1Score;\n            // If the first child exists (is inside the array)...\n            if (child1N < length) {\n                // Look it up and compute its score.\n                const child1 = this.content[child1N];\n                child1Score = this.scoreFunction(child1);\n\n                // If the score is less than our element's, we need to swap.\n                if (child1Score < elemScore) {\n                    swap = child1N;\n                }\n            }\n\n            // Do the same checks for the other child.\n            if (child2N < length) {\n                const child2 = this.content[child2N];\n                const child2Score = this.scoreFunction(child2);\n                if (child2Score < (swap === null ? elemScore : child1Score)) {\n                    swap = child2N;\n                }\n            }\n\n            // If the element needs to be moved, swap it, and continue.\n            if (swap !== null) {\n                this.content[n] = this.content[swap];\n                this.content[swap] = element;\n                n = swap;\n            } else { // Otherwise, we are done.\n                isDone = true;\n                break;\n            }\n        }\n    }\n}","import BinaryHeap from \"./BinaryHeap\";\n\n// Modified from http://github.com/bgrins/javascript-astar\nexport default class AStar {\n    constructor() {}\n\n    static pathTo(node) {\n        let curr = node;\n        const path = [];\n        while (curr.parent) {\n            path.unshift(curr);\n            curr = curr.parent;\n        }\n        return path;\n    }\n\n    static getHeap() {\n        return new BinaryHeap(function(node) {\n            return node.f;\n        });\n    }\n\n    /**\n     * Perform an A* Search on a graph given a start and end node.\n     * @param {Graph} graph\n     * @param {GridNode} start\n     * @param {GridNode} end\n     * @param {Object} [options]\n     * @param {bool} [options.closest] Specifies whether to return the\n     path to the closest node if the target is unreachable.\n     */\n    static search(graph, start, end, options) {\n        graph.cleanDirty();\n        options = options || {};\n        const closest = options.closest || false;\n\n        const openHeap = this.getHeap();\n        let closestNode = start; // set the start node to be the closest if required\n\n        start.h = this.heuristicManhattan(start, end);\n        graph.markDirty(start);\n\n        openHeap.push(start);\n\n        while (openHeap.size() > 0) {\n            // Grab the lowest f(x) to process next.  Heap keeps this sorted for us.\n            const currentNode = openHeap.pop();\n\n            // End case -- result has been found, return the traced path.\n            if (currentNode === end) {\n                return this.pathTo(currentNode);\n            }\n\n            // Normal case -- move currentNode from open to closed, process each of its neighbors.\n            currentNode.closed = true;\n\n            // Find all neighbors for the current node.\n            const neighbors = graph.neighbors(currentNode);\n\n            for (let i = 0, il = neighbors.length; i < il; ++i) {\n                const neighbor = neighbors[i];\n                if (neighbor.closed || neighbor.isWall()) {\n                    // Not a valid node to process, skip to next neighbor.\n                    continue;\n                }\n\n                // The g score is the shortest distance from start to current node.\n                // We need to check if the path we have arrived at this neighbor is the shortest one we have seen yet.\n                const gScore = currentNode.g + neighbor.getCost(currentNode);\n                const beenVisited = neighbor.visited;\n\n                if (!beenVisited || gScore < neighbor.g) {\n                    // Found an optimal (so far) path to this node.  Take score for node to see how good it is.\n                    neighbor.visited = true;\n                    neighbor.parent = currentNode;\n\n                    neighbor.h = neighbor.h || this.heuristicManhattan(neighbor, end);\n\n                    neighbor.g = gScore;\n                    neighbor.f = neighbor.g + neighbor.h;\n                    graph.markDirty(neighbor);\n                    if (closest) {\n                        // If the neighbour is closer than the current closestNode or if it's equally close but has\n                        // a cheaper path than the current closest node then it becomes the closest node\n                        if (neighbor.h < closestNode.h || (neighbor.h === closestNode.h && neighbor.g < closestNode.g)) {\n                            closestNode = neighbor;\n                        }\n                    }\n\n                    if (!beenVisited) {\n                        // Pushing to heap will put it in proper place based on the 'f' value.\n                        openHeap.push(neighbor);\n                    } else {\n                        // Already seen the node, but since it has been rescored we need to reorder it in the heap\n                        openHeap.rescoreElement(neighbor);\n                    }\n                }\n            }\n        }\n\n        if (closest) {\n            return this.pathTo(closestNode);\n        }\n\n        // No result was found - empty array signifies failure to find path.\n        return [];\n    }\n\n    // See list of heuristics: http://theory.stanford.edu/~amitp/GameProgramming/Heuristics.html\n    static heuristicManhattan(pos0, pos1) {\n        const d1 = Math.abs(pos1.q - pos0.q);\n        const d2 = Math.abs(pos1.r - pos0.r);\n        const d3 = Math.abs(pos1.s - pos0.s);\n        return d1 + d2 + d3;\n    }\n\n    static cleanNode(node) {\n        node.f = 0;\n        node.g = 0;\n        node.h = 0;\n        node.visited = false;\n        node.closed = false;\n        node.parent = null;\n    }\n}","export default class HexNode {\n    constructor(row, col, weight) {\n        this.row = row;\n        this.col = col;\n        this.q = this.row - Math.floor(this.col / 2);\n        this.r = this.col;\n        this.s = -this.q - this.r;\n        this.weight = weight;\n    }\n\n    getCost() {\n        return this.weight;\n    }\n\n    isWall() {\n        return this.weight === 0;\n    }\n}","import HexNode from \"./HexNode\";\nimport AStar from \"./AStar\";\nimport HexUtil from \"../util/HexUtil\";\n\nexport default class Graph {\n    constructor(gridIn) {\n        this.nodes = [];\n        this.grid = [];\n        for (let x = 0; x < gridIn.length; x++) {\n            this.grid[x] = [];\n\n            for (let y = 0, row = gridIn[x]; y < row.length; y++) {\n                const node = new HexNode(x, y, row[y]);\n                this.grid[x][y] = node;\n                this.nodes.push(node);\n            }\n        }\n        this.init();\n    }\n\n    init() {\n        this.dirtyNodes = [];\n        for (let i = 0; i < this.nodes.length; i++) {\n            AStar.cleanNode(this.nodes[i]);\n        }\n    }\n\n    cleanDirty() {\n        for (let i = 0; i < this.dirtyNodes.length; i++) {\n            AStar.cleanNode(this.dirtyNodes[i]);\n        }\n        this.dirtyNodes = [];\n    }\n\n    markDirty(node) {\n        this.dirtyNodes.push(node);\n    }\n\n    neighbors(node) {\n        const ret = [];\n        const q = node.q;\n        const r = node.r;\n\n        this.addNeighbor(ret, q, r - 1);\n        this.addNeighbor(ret, q + 1, r - 1);\n        this.addNeighbor(ret, q + 1, r);\n        this.addNeighbor(ret, q, r + 1);\n        this.addNeighbor(ret, q - 1, r + 1);\n        this.addNeighbor(ret, q - 1, r);\n\n        return ret;\n    }\n\n    addNeighbor(array, q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n\n        if (this.grid[xy.x] && this.grid[xy.x][xy.y]) {\n            array.push(this.grid[xy.x][xy.y]);\n        }\n    }\n\n    /*\n    toString() {\n        const graphString = [];\n        const nodes = this.grid;\n        for (let x = 0; x < nodes.length; x++) {\n            const rowDebug = [];\n            const row = nodes[x];\n            for (let y = 0; y < row.length; y++) {\n                rowDebug.push(row[y].weight);\n            }\n            graphString.push(rowDebug.join(\" \"));\n        }\n        return graphString.join(\"\\n\");\n    }\n     */\n}","import _AI from \"./_AI\";\nimport CustomFov from \"../../map/fov/CustomFov\";\nimport MeleeAction from \"../../actions/actionWithDirection/MeleeAction\";\nimport WanderAction from \"../../actions/WanderAction\";\nimport BumpAction from \"../../actions/actionWithDirection/BumpAction\";\nimport WaitAction from \"../../actions/WaitAction\";\nimport AStar from \"../../pathfinding/AStar\";\nimport Graph from \"../../pathfinding/Graph\";\nimport HexUtil from \"../../util/HexUtil\";\n\nexport default class AIMeleeChase extends _AI {\n    constructor(args = {}) {\n        super(args, \"aiMeleeChase\");\n\n        this.fov = new CustomFov();\n        this.chaseLocation = null;\n\n        this.radius = 5;\n        this.movementActions = 1;\n        this.currentMovement = 0;\n\n        if (this.hasComponent()) {\n            this.radius = this.loadArg(\"radius\", 5);\n            this.movementActions = this.loadArg(\"movementActions\", 1);\n            this.currentMovement = this.loadArg(\"currentMovement\", 0);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            aiMeleeChase: {}\n        };\n\n        if (this.radius !== 5) {\n            saveJson.aiMeleeChase.radius = this.radius;\n        }\n\n        if (this.movementActions !== 1) {\n            saveJson.aiMeleeChase.movementActions = this.movementActions;\n        }\n\n        if (this.currentMovement !== 0) {\n            saveJson.aiMeleeChase.currentMovement = this.currentMovement;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    perform() {\n        const entity = this.parentEntity;\n        const entityHex = entity.getComponent(\"hex\");\n        if (entityHex) {\n            this.fov.compute(entity, this.radius);\n\n            let closestEnemies = [];\n            let closestDistance = null;\n            const entityFaction = entity.getComponent(\"faction\");\n            if (entityFaction) {\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorFaction = actor.getComponent(\"faction\");\n                        if (entityFaction.isEnemyOf(actorFaction)) {\n                            const actorHex = actor.getComponent(\"hex\");\n                            if (actorHex) {\n                                const distance = entityHex.distanceTo(actorHex);\n                                if (closestDistance === null || distance < closestDistance) {\n                                    closestEnemies = [];\n                                    closestEnemies.push(actor);\n                                    closestDistance = distance;\n                                } else if (distance === closestDistance) {\n                                    closestEnemies.push(actor);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            let closestEnemy;\n            if (closestEnemies.length === 1) {\n                closestEnemy = closestEnemies[0];\n            } else if (closestEnemies.length > 1) {\n                const index = Math.floor(Math.random() * closestEnemies.length);\n                closestEnemy = closestEnemies[index];\n            }\n\n            if (closestEnemy) {\n                const closestEnemyHex = closestEnemy.getComponent(\"hex\");\n                this.chaseLocation = {\n                    row: closestEnemyHex.row,\n                    col: closestEnemyHex.col,\n                    q: closestEnemyHex.q,\n                    r: closestEnemyHex.r\n                };\n\n                if (closestDistance <= 1) {\n                    return new MeleeAction(this.parentEntity, closestEnemyHex.q - entityHex.q, closestEnemyHex.r - entityHex.r).perform();\n                }\n            } else {\n                if (this.chaseLocation !== null) {\n                    // Reached chase location\n                    if (this.chaseLocation.q === entityHex.q && this.chaseLocation.r === entityHex.r) {\n                        this.chaseLocation = null;\n                    }\n                }\n\n                if (this.chaseLocation === null) {\n                    return new WanderAction(this.parentEntity).perform();\n                }\n            }\n\n            this.currentMovement += this.movementActions;\n\n            if (this.currentMovement >= 1) {\n                // Move towards enemy\n                const fovWidth = this.fov.right - this.fov.left;\n                const fovHeight = this.fov.bottom - this.fov.top;\n                const cost = Array(fovWidth).fill().map(() => Array(fovHeight).fill(0));\n\n                for (const tile of this.fov.visibleTiles) {\n                    if (tile.isWall()) {\n                        continue;\n                    }\n\n                    const tileHex = tile.getComponent(\"hex\");\n                    cost[tileHex.row - this.fov.left][tileHex.col - this.fov.top] += 10;\n                }\n\n                for (const actor of this.fov.visibleActors) {\n                    if (actor.isAlive()) {\n                        const actorHex = actor.getComponent(\"hex\");\n                        cost[actorHex.row - this.fov.left][actorHex.col - this.fov.top] += 100;\n                    }\n                }\n\n                const costGraph = new Graph(cost);\n\n                const start = costGraph.grid[entityHex.row - this.fov.left][entityHex.col - this.fov.top];\n                const end = costGraph.grid[this.chaseLocation.row - this.fov.left][this.chaseLocation.col - this.fov.top];\n\n                let lastAction;\n                if (end) { // TODO: This check is likely needed due to a bug elsewhere\n                    const path = AStar.search(costGraph, start, end);\n                    while (this.currentMovement >= 1) {\n                        if (path && path.length > 0) {\n                            const next = path.shift();\n\n                            if (next) {\n                                const newRow = next.row + this.fov.left - entityHex.row;\n                                const newCol = next.col + this.fov.top - entityHex.col;\n                                const qr = HexUtil.arrayToHex(newRow, newCol);\n                                lastAction = new BumpAction(entity, qr.q, qr.r).perform();\n                            }\n                        } else {\n                            lastAction = new WaitAction(entity).perform();\n                        }\n\n                        this.currentMovement -= 1;\n                    }\n                } else {\n                    lastAction = new WaitAction(entity).perform();\n                    this.currentMovement = 0;\n                }\n\n                return lastAction;\n            }\n        }\n    }\n}","import _Component from \"./_Component\";\n\nexport default class BlocksFov extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksFov\");\n\n        this.blocksFov = false;\n\n        if (this.hasComponent()) {\n            this.blocksFov = this.loadBooleanOrObject(\"blocksFov\");\n        }\n    }\n\n    save() {\n        return this.saveBoolean(this.blocksFov, false);\n    }\n\n}","import _Component from \"./_Component\";\n\nexport default class BlocksMovement extends _Component {\n    constructor(args = {}) {\n        super(args, \"blocksMovement\");\n\n        // Whether the entity prevents movement\n        this.blocksMovement = false;\n\n        if (this.hasComponent()) {\n            this.blocksMovement = this.loadBooleanOrObject(\"blocksMovement\");\n        }\n    }\n\n    save() {\n        return this.saveBoolean(this.blocksMovement, false);\n    }\n\n    onEntityDeath() {\n        this.blocksMovement = false;\n\n        this.clearSaveCache();\n    }\n}","import _Component from \"./_Component\";\n\nexport default class Faction extends _Component {\n    constructor(args = {}) {\n        super(args, \"faction\");\n\n        this.factions = [];\n        this.enemies = [];\n\n        if (this.hasComponent()) {\n            this.factions = this.loadArgArray(\"factions\");\n            this.enemies = this.loadArgArray(\"enemies\");\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            faction: {}\n        };\n\n        saveJson.faction.factions = this.factions.toString();\n        saveJson.faction.enemies = this.enemies.toString();\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    /**\n     *\n     * @param {Faction} otherFaction\n     */\n    isEnemyOf(otherFaction) {\n        if (!otherFaction) {\n            return false;\n        }\n\n        for (const faction of this.factions) {\n            if (otherFaction.enemies.indexOf(faction) > -1) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}","import _Component from \"./_Component\";\nimport AIDead from \"./ai/AIDead\";\n\nexport default class Fighter extends _Component {\n    constructor(args) {\n        super(args, \"fighter\");\n\n        this.hp = 0;\n        this.maxHp = 0;\n        this.defense = 0;\n        this.power = 0;\n\n        if (this.hasComponent()) {\n            this.hp = this.loadArg(\"hp\", 0);\n            this.maxHp = this.loadArg(\"maxHp\", 0);\n            this.defense = this.loadArg(\"defense\", 0);\n            this.power = this.loadArg(\"power\", 0);\n        }\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            fighter: {}\n        };\n\n        saveJson.fighter.hp = this.hp;\n        saveJson.fighter.maxHp = this.maxHp;\n        saveJson.fighter.defense = this.defense;\n        saveJson.fighter.power = this.power;\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    setHp(newHp) {\n        this.hp = Math.max(0, Math.min(newHp, this.maxHp));\n    }\n\n    takeDamage(damage) {\n        this.hp -= damage;\n\n        if (this.hp <= 0) {\n            this.die();\n        }\n\n        this.clearSaveCache();\n    }\n\n    die() {\n        const entity = this.parentEntity;\n        if (this.isPlayer()) {\n            console.log(\"You died!\");\n        } else {\n            console.log(entity.name + \" dies!\");\n        }\n\n        entity.callEvent(\"onEntityDeath\");\n\n        const ai = entity.getComponent(\"ai\");\n        if (ai) {\n            const aiArgs = {\n                components: {\n                    aiDead: {\n                        previousAI: ai.type\n                    }\n                }\n            };\n\n            entity.removeComponent(\"ai\");\n            entity.setComponent(new AIDead(aiArgs));\n        }\n\n        this.clearSaveCache();\n    }\n}","import _Component from \"./_Component\";\nimport HexUtil from \"../util/HexUtil\";\n\nexport default class Hex extends _Component {\n    constructor(args = {}) {\n        super(args, \"hex\");\n\n        this.row = 0;\n        this.col = 0;\n        this.q = 0;\n        this.r = 0;\n        this.s = 0;\n\n        if (this.hasComponent()) {\n            this.row = this.loadArg(\"row\", 0);\n            this.col = this.loadArg(\"col\", 0);\n        }\n\n        this.updateHexCoords();\n    }\n\n    save() {\n        if (this.cachedSave) {\n            return this.cachedSave;\n        }\n\n        const saveJson = {\n            hex: {}\n        };\n\n        if (this.row !== 0) {\n            saveJson.hex.row = this.row;\n        }\n\n        if (this.col !== 0) {\n            saveJson.hex.col = this.col;\n        }\n\n        this.cachedSave = saveJson;\n        return saveJson;\n    }\n\n    moveTo(row, col) {\n        this.row = row;\n        this.col = col;\n\n        this.updateHexCoords();\n    }\n\n    updateHexCoords() {\n        this.q = this.row - Math.floor(this.col / 2);\n        this.r = this.col;\n        this.s = -this.q - this.r;\n    }\n\n    isEdge(map) {\n        return this.row === 0 || this.col === 0 || this.row === map.rows - 1 || this.col === map.cols - 1;\n    }\n\n    getDisplayX() {\n        return this.q + (this.r / 2.0);\n    }\n\n    getDisplayY() {\n        return this.r;\n    }\n\n    getTileFromArray(map, q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n        if (map[xy.x] && map[xy.x][xy.y]) {\n            return map[xy.x][xy.y];\n        }\n\n        return null;\n    }\n\n    getNumAdjacentWalls(map) {\n        const n = this.getTileFromArray(map, this.q, this.r - 1);\n        const ne = this.getTileFromArray(map, this.q + 1, this.r - 1);\n        const se = this.getTileFromArray(map, this.q + 1, this.r);\n        const s = this.getTileFromArray(map, this.q, this.r + 1);\n        const sw = this.getTileFromArray(map, this.q - 1, this.r + 1);\n        const nw = this.getTileFromArray(map, this.q - 1, this.r);\n\n        return this.isTileWall(n) + this.isTileWall(ne) + this.isTileWall(se) + this.isTileWall(s) + this.isTileWall(sw) + this.isTileWall(nw);\n    }\n\n    isTileWall(tile) {\n        if (tile === null || tile.isWall()) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    isInRange(otherHex, radius) {\n        const distQ = Math.abs(this.q - otherHex.q);\n        if (distQ < radius) {\n            const distR = Math.abs(this.r - otherHex.r);\n            if (distR < radius) {\n                const distS = Math.abs(this.s - otherHex.s);\n                if (distS < radius) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    distanceTo(otherHex) {\n        const distQ = Math.abs(this.q - otherHex.q);\n        const distR = Math.abs(this.r - otherHex.r);\n        const distS = Math.abs(this.s - otherHex.s);\n\n        return Math.max(distQ, Math.max(distR, distS));\n    }\n}","import AIDead from \"./ai/AIDead\";\nimport AIMeleeChase from \"./ai/AIMeleeChase\";\nimport BlocksFov from \"./BlocksFov\";\nimport BlocksMovement from \"./BlocksMovement\";\nimport Faction from \"./Faction\";\nimport Fighter from \"./Fighter\";\nimport Fov from \"./Fov\";\nimport Hex from \"./Hex\";\n\nclass ComponentLoader {\n    constructor() {\n        this.types = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new AIDead());\n        this.load(new AIMeleeChase());\n\n        this.load(new BlocksFov());\n        this.load(new BlocksMovement());\n        this.load(new Faction());\n        this.load(new Fighter());\n        this.load(new Fov());\n        this.load(new Hex());\n    }\n\n    load(component) {\n        this.types.set(component.type, component);\n    }\n\n    create(entity, type, args) {\n        const component = this.types.get(type);\n        const constructor = component.constructor;\n        return new constructor(args);\n    }\n}\n\nconst componentLoader = new ComponentLoader();\nexport default componentLoader;","/**\n * Adapted from http://youmightnotneedjquery.com/\n */\nexport default class Extend {\n    constructor() {}\n\n    static extend(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            if (!arguments[i]) {\n                continue;\n            }\n\n            for (const key in arguments[i]) {\n                if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n                    out[key] = arguments[i][key];\n                }\n            }\n        }\n\n        return out;\n    }\n\n    static deep(out) {\n        out = out || {};\n\n        for (let i = 1; i < arguments.length; i++) {\n            const obj = arguments[i];\n\n            if (!obj) {\n                continue;\n            }\n\n            for (const key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                    if (typeof obj[key] === \"object\") {\n                        if (obj[key] instanceof Array) {\n                            out[key] = obj[key].slice(0);\n                        } else {\n                            out[key] = Extend.deep(out[key], obj[key]);\n                        }\n                    } else {\n                        if (typeof out === \"boolean\" && out[key] === undefined) {\n                            out = obj[key];\n                        } else {\n                            out[key] = obj[key];\n                        }\n                    }\n                }\n            }\n        }\n\n        return out;\n    }\n}","import componentLoader from \"../components/ComponentLoader\";\nimport Extend from \"../util/Extend\";\n\nexport default class _Entity {\n    constructor(args) {\n        this.type = args.type || \"entity\";\n        this.id = args.id;\n        this.name = args.name || \"\";\n        this.description = args.description || \"\";\n        this.sprite = args.sprite || \"\";\n        this.letter = args.letter || \"?\";\n        this.color = args.color || \"#fff\";\n\n        this.componentArray = [];\n        this.components = {};\n        if (args.components) {\n            this.loadComponents(args, args.components);\n            this.callEvent(\"onComponentsLoaded\");\n        }\n\n        this.cachedSave = null;\n    }\n\n    /**\n     * @returns {_Entity}\n     */\n    clone() {\n        console.error(\"Not implemented\");\n    }\n\n    callEvent(event, args) {\n        for (const component of this.componentArray) {\n            component[event]?.(args);\n        }\n\n        this[event]?.(args);\n    }\n\n    draw(/*x, y*/) { }\n\n    loadComponents(args, components) {\n        const self = this;\n        Object.keys(components).forEach(function(key) {\n            const type = componentLoader.types.get(key);\n            if (type) {\n                const baseType = type.baseType;\n                const existingComponent = self.getComponent(baseType);\n                if (!existingComponent) {\n                    self.setComponent(componentLoader.create(this, key, args), false);\n                }\n            }\n        });\n    }\n\n    setComponent(component) {\n        component.parentEntity = this;\n        this.components[component.baseType] = component;\n        this.componentArray.push(component);\n\n    }\n\n    getComponent(baseType) {\n        return this.components[baseType];\n    }\n\n    removeComponent(baseType) {\n        if (!this.components[baseType]) {\n            return;\n        }\n\n        this.components[baseType] = undefined;\n        for (const component of this.componentArray) {\n            if (component.baseType === baseType) {\n                const index = this.componentArray.indexOf(component);\n                this.componentArray.splice(index, 1);\n                break;\n            }\n        }\n    }\n\n    clearSaveCache() {\n        this.cachedSave = null;\n    }\n\n    save() {\n        if (this.cachedSave !== null) {\n            return this.cachedSave;\n        }\n\n        const json = {\n            id: this.id,\n            type: this.type,\n            name: this.name,\n            description: this.description,\n            sprite: this.sprite,\n            letter: this.letter,\n            color: this.color\n        };\n\n        json.components = {};\n        for (const component of this.componentArray) {\n            const save = component.save();\n            if (save !== null && save !== {}) {\n                Extend.deep(json.components, save);\n            }\n        }\n\n        this.cachedSave = json;\n        return json;\n    }\n}","import _Entity from \"./_Entity\";\nimport sceneState from \"../SceneState\";\nimport HexUtil from \"../util/HexUtil\";\nimport CustomFov from \"../map/fov/CustomFov\";\n\nexport default class Actor extends _Entity {\n    constructor(args = {}) {\n        args.type = \"actor\";\n        super(args);\n\n        this.fov = new CustomFov();\n    }\n\n    clone() {\n        return new Actor(this.save());\n    }\n\n    isAlive() {\n        const fighter = this.getComponent(\"fighter\");\n        return fighter && fighter.hp > 0;\n    }\n\n    draw() {\n        // TODO: Replace arbitrary 1.15\n        const hex = this.getComponent(\"hex\");\n        const drawX = HexUtil.HEX_RADIUS + (HexUtil.HEX_RADIUS * (1 + Math.cos(HexUtil.HEX_A))) * hex.getDisplayY();\n        const drawY = 1.15 * HexUtil.HEX_RADIUS + (2 * HexUtil.HEX_RADIUS * Math.sin(HexUtil.HEX_A)) * hex.getDisplayX();\n\n        super.draw(drawX, drawY);\n        //HexUtil.drawHex(sceneState.ctx, drawX, drawY);\n        // if (this.color) {\n        //     sceneState.ctx.fillStyle = this.color;\n        //     sceneState.ctx.fill();\n        // }\n\n\n        sceneState.ctx.fillStyle = this.color || \"white\";\n        sceneState.ctx.textAlign = \"center\";\n        sceneState.ctx.textBaseline = \"middle\";\n        sceneState.ctx.font = \"bold 26px serif\";\n        sceneState.ctx.fillText(this.letter, drawX, drawY);\n    }\n\n\n    setName(newName) {\n        this.name = newName;\n        this.clearSaveCache();\n    }\n\n    onEntityDeath() {\n        // TODO: Handle these better\n        this.letter = \"%\";\n        this.color = \"red\";\n\n        this.setName(\"Remains of \" + this.name);\n    }\n}","import _Entity from \"./_Entity\";\nimport HexUtil from \"../util/HexUtil\";\nimport sceneState from \"../SceneState\";\n\nexport default class Tile extends _Entity {\n    constructor(args = {}) {\n        args.type = \"tile\";\n        super(args);\n\n        this.borderColor = args.borderColor || \"#000\";\n    }\n\n    clone() {\n        return new Tile(this.save());\n    }\n\n    save() {\n        const saveJson = super.save();\n\n        saveJson.borderColor = this.borderColor;\n\n        return saveJson;\n    }\n\n    isWall() {\n        return this.getComponent(\"blocksMovement\") && this.getComponent(\"blocksMovement\").blocksMovement;\n    }\n\n    draw(x, y) {\n        // sceneState.ctx.textAlign = \"center\";\n        // sceneState.ctx.textBaseline = \"middle\";\n        //\n        // sceneState.ctx.font = \"16px serif\";\n        // sceneState.ctx.fillStyle = \"black\";\n\n        const fov = this.getComponent(\"fov\");\n        if (fov) {\n            if (fov.explored) {\n                HexUtil.drawHex(sceneState.ctx, x, y);\n                if (this.color) {\n                    sceneState.ctx.fillStyle = this.color;\n                    sceneState.ctx.fill();\n                }\n\n                sceneState.ctx.strokeStyle = this.borderColor;\n                sceneState.ctx.stroke();\n\n                if (!fov.visible) {\n                    HexUtil.drawHex(sceneState.ctx, x, y);\n                    sceneState.ctx.fillStyle = \"rgba(0, 0, 0, .25)\";\n                    sceneState.ctx.fill();\n                    sceneState.ctx.color = \"rgba(0, 0, 0, .25)\";\n                    sceneState.ctx.stroke();\n                }\n            }\n        }\n\n        // const hex = this.getComponent(\"hex\");\n        // const playerHex = engine.player.getComponent(\"hex\");\n        //\n        // const radius = 5;\n        //\n        // const distRow = Math.abs(playerHex.row - hex.row);\n        // const distCol = Math.abs(playerHex.col - hex.col);\n        // if (distRow < radius && distCol < radius) {\n        //     sceneState.ctx.fillText(\"(\" + hex.row + \", \" + hex.col + \")\", x, y+10);\n        // }\n        //\n        // const distQ = Math.abs(playerHex.q - hex.q);\n        // const distR = Math.abs(playerHex.r - hex.r);\n        // const distS = Math.abs(playerHex.s - hex.s);\n        // if (distQ < radius && distR < radius && distS < radius) {\n        //     //sceneState.ctx.fillText(playerHex.q - hex.q, x, y);\n        //\n        //     //sceneState.ctx.fillText(\"(\" + hex.q + \", \" + hex.r + \")\", x, y-10);\n        //     //sceneState.ctx.fillText(\"(\" + hex.row + \", \" + hex.col + \")\", x, y+10);\n        // }\n    }\n}\n","import Actor from \"./Actor\";\nimport Tile from \"./Tile\";\nimport Extend from \"../util/Extend\";\nimport actorsBaseList from \"../../json/actors/_base.json\";\nimport enemiesList from \"../../json/actors/enemies.json\";\nimport playerList from \"../../json/actors/player.json\";\nimport tilesBaseList from \"../../json/tiles/_base.json\";\nimport floorsList from \"../../json/tiles/floors.json\";\nimport wallsList from \"../../json/tiles/walls.json\";\n\nclass EntityLoader {\n    constructor() {\n        this.types = new Map();\n        this.templates = new Map();\n\n        this.init();\n    }\n\n    init() {\n        this.load(new Actor());\n        this.load(new Tile());\n\n        this.loadTemplates();\n    }\n\n    load(entity) {\n        this.types.set(entity.type, entity);\n    }\n\n    create(json, args = {}) {\n        let parsedJson;\n        if (typeof json === \"object\") {\n            parsedJson = json;\n        } else {\n            parsedJson = JSON.parse(json);\n        }\n\n        if (parsedJson.extends !== undefined) {\n            if (this.templates.has(parsedJson.extends)) {\n                const template = JSON.parse(this.templates.get(parsedJson.extends));\n\n                delete parsedJson[\"extends\"];\n                return this.create(Extend.deep(template, parsedJson), args);\n            } else {\n                console.error(\"Json template for id '\" + parsedJson.extends + \"' is missing. Cannot extend from it.\");\n            }\n        }\n\n        const entity = this.types.get(parsedJson.type);\n        return new entity.constructor(Extend.deep(parsedJson, args));\n    }\n\n    createFromTemplate(id, args = {}) {\n        if (this.templates.has(id)) {\n            return this.create(this.templates.get(id), args);\n        } else {\n            console.error(\"Json template for id '\" + id + \"' is missing.\");\n            return null;\n        }\n    }\n\n    loadTemplate(entities) {\n        for (const entity of entities) {\n            const id = entity.id;\n            if (this.templates.has(id)) {\n                console.error(\"Template for entity id '\" + id + \"' already exists.\");\n            } else {\n                this.templates.set(id, JSON.stringify(entity));\n            }\n        }\n    }\n\n    loadTemplates() {\n        this.loadTemplate(actorsBaseList);\n        this.loadTemplate(enemiesList);\n        this.loadTemplate(playerList);\n\n        this.loadTemplate(tilesBaseList);\n        this.loadTemplate(floorsList);\n        this.loadTemplate(wallsList);\n    }\n}\n\nconst entityLoader = new EntityLoader();\nexport default entityLoader;","import cave from \"../../json/generation/cave.json\";\n\nclass ChanceLoader {\n    constructor() {\n        this.entityGroups = new Map();\n\n        this.generators = new Map();\n\n        this.loadGenerator(cave);\n    }\n\n    loadGenerator(generatorJson) {\n        for (const generator of generatorJson) {\n            this.generators.set(generator.id, generator.levels);\n        }\n    }\n\n    getChancesForLevel(name, level) {\n        let chances;\n        const generator = this.generators.get(name);\n        for (const group of generator) {\n            if (group.level > level) {\n                break;\n            }\n\n            chances = group;\n        }\n\n        return chances;\n    }\n\n    getActorForLevel(name, level) {\n        const chances = this.getChancesForLevel(name, level);\n        const actors = chances.actors;\n\n        let actorOrGroup = this.getRandomFromGroup(actors);\n        while (actorOrGroup.group !== undefined) {\n            const actorGroup = this.entityGroups.get(actorOrGroup.group);\n            actorOrGroup = this.getRandomFromGroup(actorGroup);\n        }\n\n        return actorOrGroup.id;\n    }\n\n    getRandomFromGroup(group) {\n        let totalWeight = 0;\n        for (const chance of group) {\n            totalWeight += chance.weight;\n        }\n\n        let returnChance;\n        let currentWeight = 0;\n        const rand = Math.random() * totalWeight;\n        for (const chance of group) {\n            currentWeight += chance.weight;\n\n            if (rand < currentWeight) {\n                returnChance = chance;\n                break;\n            }\n        }\n\n        return returnChance;\n    }\n}\n\nconst chanceLoader = new ChanceLoader();\nexport default chanceLoader;","import _HexGameMap from \"./_HexGameMap\";\nimport engine from \"../Engine\";\nimport entityLoader from \"../entity/EntityLoader\";\nimport chanceLoader from \"./ChanceLoader\";\n\nexport default class CellularAutomataMap extends _HexGameMap {\n    constructor(rows, cols) {\n        super(rows, cols);\n\n        this.percentAreWalls = .35; // 1 = 100%\n\n        this.wallEntity = entityLoader.createFromTemplate(\"cave_wall\", {components: {hex: {row: 0, col: 0}}});\n        this.floorEntity = entityLoader.createFromTemplate(\"cave_floor\", {components: {hex: {row: 0, col: 0}}});\n\n        this.create();\n    }\n\n    create() {\n        this.randomFillBuild();\n        this.makeCaverns(15, 0);\n    }\n\n    randomFillBuild() {\n        const rowsMiddle = Math.floor(Math.random() * this.rows);\n        const colsMiddle = Math.floor(Math.random() * this.cols);\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                let entity;\n                if (i === 0 || j === 0 || i === this.rows - 1 || j === this.cols - 1) {\n                    entity = this.wallEntity.clone();\n                } else if (i === rowsMiddle || j === colsMiddle) {\n                    entity = this.floorEntity.clone();\n                } else {\n                    const isWall = Math.random() < this.percentAreWalls;\n\n                    if (isWall) {\n                        entity = this.wallEntity.clone();\n                    } else {\n                        entity = this.floorEntity.clone();\n                    }\n                }\n\n                entity.getComponent(\"hex\").moveTo(i, j);\n                this.tiles[i][j] = entity;\n            }\n        }\n    }\n\n    addRandomNoise() {\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                if (Math.random() < .02) {\n                    const entity = this.wallEntity.clone();\n                    entity.getComponent(\"hex\").moveTo(i, j);\n                    this.tiles[i][j] = entity;\n                }\n            }\n        }\n    }\n\n    makeCaverns(repeat, delay) {\n        this.addRandomNoise();\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                this.placeWallLogic(this.tiles[i][j]);\n                const isWall = this.placeWallLogic(this.tiles[i][j]);\n\n                let entity;\n                if (isWall) {\n                    entity = this.wallEntity.clone();\n                } else {\n                    entity = this.floorEntity.clone();\n                }\n\n                entity.getComponent(\"hex\").moveTo(i, j);\n                this.tiles[i][j] = entity;\n            }\n        }\n\n        repeat --;\n\n        const self = this;\n        if (repeat > 0) {\n            if (delay > 0) {\n                setTimeout(() => {\n                    self.makeCaverns(repeat, delay);\n                }, delay);\n                engine.needsRenderUpdate = true;\n            } else {\n                self.makeCaverns(repeat);\n            }\n        } else {\n            engine.needsRenderUpdate = true;\n        }\n    }\n\n    placeWallLogic(tile) {\n        const hex = tile.getComponent(\"hex\");\n        const numWalls = hex.getNumAdjacentWalls(this.tiles);\n\n        // Edges should always be walls\n        if (hex.isEdge(this)) {\n            return true;\n        }\n\n        if (tile.isWall()) {\n            if (numWalls >= 2) {\n                return true;\n            }\n        } else {\n            if (numWalls >= 4) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    placeEntities(generation, level, percentage, distFromPlayer) {\n        const playerHex = engine.player.getComponent(\"hex\");\n\n        for (let i = 0; i < this.rows; i++) {\n            for (let j = 0; j < this.cols; j++) {\n                const tile = this.tiles[i][j];\n                if (!tile.isWall()) {\n                    const hex = tile.getComponent(\"hex\");\n                    if (!playerHex.isInRange(hex, distFromPlayer)) {\n                        if (Math.random() < percentage) {\n                            const actorId = chanceLoader.getActorForLevel(generation, level);\n                            const actor = entityLoader.createFromTemplate(actorId, {components: {hex: {row: hex.row, col: hex.col}}});\n\n                            this.actors.push(actor);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}","import HexUtil from \"../util/HexUtil\";\nimport ArrayUtil from \"../util/ArrayUtil\";\nimport engine from \"../Engine\";\n\nexport default class _HexGameMap {\n    constructor(rows, cols) {\n        this.rows = rows;\n        this.cols = cols;\n\n        this.init();\n    }\n\n    init() {\n        this.tiles = ArrayUtil.create2dArray(this.rows);\n        this.actors = [];\n    }\n\n    isInBounds(x, y) {\n        return 0 <= x && x < this.rows && 0 <= y && y < this.cols;\n    }\n\n    create() {}\n\n    draw() {\n        for (let i = 0; i < this.rows; i++) {\n            let y = 2 * HexUtil.HEX_RADIUS + (2 * HexUtil.HEX_RADIUS * Math.sin(HexUtil.HEX_A)) * i;\n            for (let j = 0; j < this.cols; j++) {\n                const x = HexUtil.HEX_RADIUS + (HexUtil.HEX_RADIUS * (1 + Math.cos(HexUtil.HEX_A))) * j;\n                y -= (-1) ** j * HexUtil.HEX_RADIUS * Math.sin(HexUtil.HEX_A);\n\n                const tile = this.tiles[i][j];\n                const tileFov = tile.getComponent(\"fov\");\n                if (tileFov && tileFov.explored) {\n                    tile.draw(x, y);\n                }\n            }\n        }\n\n        for (const actor of this.actors) {\n            const actorHex = actor.getComponent(\"hex\");\n            const tile = engine.gameMap.getTileFromArrayCoords(actorHex.row, actorHex.col);\n            const tileFov = tile.getComponent(\"fov\");\n            if (tileFov && tileFov.visible) {\n                actor.draw();\n            }\n        }\n    }\n\n    getTileFromArrayCoords(x, y) {\n        if (this.tiles[x]) {\n            return this.tiles[x][y];\n        }\n\n        return null;\n    }\n\n    getTileFromHexCoords(q, r) {\n        const xy = HexUtil.hexToArray(q, r);\n        return this.tiles[xy.x][xy.y];\n    }\n\n    getTileNeighbor(q, r, direction) {\n        switch(direction) {\n            case 1: // N\n                return this.getTileFromHexCoords(q - 1, r);\n            case 2: // NE\n                return this.getTileFromHexCoords(q - 1, r + 1);\n            case 3: // SE\n                return this.getTileFromHexCoords(q, r + 1);\n            case 4: // S\n                return this.getTileFromHexCoords(q + 1, r);\n            case 5: // SW\n                return this.getTileFromHexCoords(q + 1, r - 1);\n            case 6: // NW\n            default:\n                return this.getTileFromHexCoords(q, r - 1);\n        }\n    }\n\n    getBlockingActorAtArrayLocation(x, y) {\n        let blockingActor = null;\n        for (const actor of this.actors) {\n            const hex = actor.getComponent(\"hex\");\n            if (hex && x === hex.row && y === hex.col) {\n                const component = actor.getComponent(\"blocksMovement\");\n                if (component && component.blocksMovement) {\n                    blockingActor = actor;\n                    break;\n                }\n            }\n        }\n\n        return blockingActor;\n    }\n}","export default class ArrayUtil {\n    constructor() {\n\n    }\n\n    static create2dArray(numRows) {\n        const array = [];\n\n        for (let i = 0; i < numRows; i++) {\n            array[i] = [];\n        }\n        return array;\n    }\n}","import \"./styles/style.css\";\n\nimport engine from \"./js/Engine\";\nimport sceneState from \"./js/SceneState\";\nimport DefaultPlayerEventHandler from \"./js/event/DefaultPlayerEventHandler\";\nimport CellularAutomataMap from \"./js/map/CellularAutomataMap\";\nimport entityLoader from \"./js/entity/EntityLoader\";\n\n(function () {\n    function init() {\n        engine.gameMap = new CellularAutomataMap(35, 80);\n\n        engine.player = entityLoader.createFromTemplate(\"player\", {components: {hex: {row: 0, col: 0}}});\n        const playerHex = engine.player.getComponent(\"hex\");\n        let foundPlace = false;\n        while(!foundPlace) {\n            const playerRow = Math.floor(Math.random() * (engine.gameMap.rows - 8)) + 4;\n            const playerCol = Math.floor(Math.random() * (engine.gameMap.cols - 4)) + 2;\n\n            const tile = engine.gameMap.tiles[playerRow][playerCol];\n            if (!tile.isWall()) {\n                playerHex.moveTo(playerRow, playerCol);\n                foundPlace = true;\n            }\n        }\n        engine.gameMap.actors.push(engine.player);\n        engine.gameMap.placeEntities(\"cave\", 1, .03, 5);\n\n        engine.eventHandler = new DefaultPlayerEventHandler();\n\n        engine.needsRenderUpdate = true;\n        engine.player.fov.compute(engine.player, 5);\n        engine.player.fov.updateMap();\n\n        window.requestAnimationFrame(update);\n    }\n\n    function update() {\n        engine.handleEvents();\n\n        if (engine.needsRenderUpdate) {\n            render();\n\n            engine.needsRenderUpdate = false;\n        }\n\n        window.requestAnimationFrame(update);\n    }\n\n    function render() {\n        sceneState.clearAll();\n        engine.gameMap.draw();\n    }\n\n    init();\n}());"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","_Action","constructor","entity","perform","console","error","isPlayer","NoAction","super","UnableToPerformAction","reason","engine","eventHandler","player","gameMap","needsRenderUpdate","handleEvents","processAction","handleInput","action","isPlayerTurn","performedAction","log","fov","compute","updateMap","handleEnemyTurns","actor","actors","ai","getComponent","setupGameHtml","resizeCanvas","addEventListener","gameDom","classList","add","canvas","body","ctx","getContext","handleEvent","type","width","innerWidth","height","innerHeight","clearAll","clearRect","self","defaultDelay","lastShiftUp","treatShiftNumpadEqual","keysDown","keysDelayed","defaults","Map","controls","set","load","key","preventDefault","getModifierState","shiftKey","code","startsWith","keyCode","getKey","endsWith","localStorage","getItem","parse","resetToDefault","save","setItem","Array","from","entries","setControls","controlsMap","value","keys","val","clone","isPressed","pressed","get","defaultKeys","forEach","keyToTest","isDelayed","delayed","deleteKey","delay","setTimeout","testPressed","succeeded","_ActionWithDirection","dq","dr","HexUtil","static","Math","PI","x","y","beginPath","lineTo","HEX_RADIUS","cos","HEX_A","sin","closePath","q","r","floor","row","col","MeleeAction","hex","destXY","hexToArray","blockingActor","name","plural","blockingName","entityFighter","actorFighter","damage","power","defense","description","takeDamage","MovementAction","destTile","isWall","moveTo","BumpAction","WaitAction","DefaultPlayerEventHandler","mouseDown","teardown","removeEventListener","onMouseMove","onMouseDown","onMouseUp","onLeftClick","onRightClick","onChange","onKeydown","_Component","args","baseType","parentEntity","cachedSave","clearSaveCache","hasComponent","components","saveBoolean","arg","defaultValue","saveJson","loadBooleanOrObject","loadArg","loadArgArray","array","items","split","trim","_AI","AIDead","previousAI","aiDead","Fov","explored","visible","setExplored","setVisible","CustomFov","previousVisibleTiles","visibleTiles","visibleActors","radius","tile","left","max","right","min","top","bottom","addVisibleActor","indexOf","exploreTileByHex","xy","exploreTileByArray","actorHex","setComponent","exploreDirection","dir","dir2","hex1","hex2","move1","move2","direction1","direction2","diagonal","hexDiagonal","WanderAction","direction","random","BinaryHeap","scoreFunction","sinkDown","pop","end","bubbleUp","node","size","rescoreElement","n","parentN","parent","elemScore","isDone","child2N","child1N","child1Score","swap","child1","child2","AStar","curr","path","unshift","f","graph","start","cleanDirty","closest","openHeap","getHeap","closestNode","h","heuristicManhattan","markDirty","currentNode","pathTo","closed","neighbors","il","neighbor","gScore","g","getCost","beenVisited","visited","pos0","pos1","abs","s","HexNode","weight","Graph","gridIn","nodes","grid","init","dirtyNodes","cleanNode","ret","addNeighbor","AIMeleeChase","chaseLocation","movementActions","currentMovement","aiMeleeChase","entityHex","closestEnemies","closestDistance","entityFaction","isAlive","actorFaction","isEnemyOf","distance","distanceTo","closestEnemy","closestEnemyHex","fovWidth","fovHeight","cost","fill","tileHex","costGraph","lastAction","search","next","shift","newRow","newCol","qr","arrayToHex","BlocksFov","blocksFov","BlocksMovement","blocksMovement","onEntityDeath","Faction","factions","enemies","faction","otherFaction","Fighter","hp","maxHp","fighter","setHp","newHp","die","callEvent","aiArgs","removeComponent","Hex","updateHexCoords","isEdge","rows","cols","getDisplayX","getDisplayY","getTileFromArray","getNumAdjacentWalls","ne","se","sw","nw","isTileWall","isInRange","otherHex","distQ","distR","distS","types","component","create","Extend","out","arguments","Object","prototype","hasOwnProperty","call","slice","deep","_Entity","sprite","letter","color","componentArray","loadComponents","event","draw","json","Actor","drawX","drawY","setName","newName","Tile","borderColor","drawHex","templates","loadTemplates","parsedJson","extends","has","template","createFromTemplate","loadTemplate","entities","entityGroups","generators","loadGenerator","generatorJson","generator","levels","getChancesForLevel","level","chances","group","getActorForLevel","actorOrGroup","getRandomFromGroup","actorGroup","returnChance","totalWeight","chance","currentWeight","rand","CellularAutomataMap","tiles","numRows","create2dArray","isInBounds","j","tileFov","getTileFromArrayCoords","getTileFromHexCoords","getTileNeighbor","getBlockingActorAtArrayLocation","percentAreWalls","wallEntity","floorEntity","randomFillBuild","makeCaverns","rowsMiddle","colsMiddle","addRandomNoise","repeat","placeWallLogic","numWalls","placeEntities","generation","percentage","distFromPlayer","playerHex","actorId","requestAnimationFrame","foundPlace","playerRow","playerCol"],"sourceRoot":""}