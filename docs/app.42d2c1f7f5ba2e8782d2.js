"use strict";(self.webpackChunkroguelikedev_2022=self.webpackChunkroguelikedev_2022||[]).push([[143],{890:(t,e,s)=>{s.d(e,{Z:()=>a});var o=s(537),i=s.n(o),n=s(645),r=s.n(n)()(i());r.push([t.id,"* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0 auto;\n    overflow: hidden;\n    width: 100vw;\n    height: 100vh;\n    font-size: 1.2vh;\n}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,YAAY;IACZ,aAAa;IACb,gBAAgB;AACpB",sourcesContent:["* {\n    box-sizing: border-box;\n}\n\nbody {\n    margin: 0 auto;\n    overflow: hidden;\n    width: 100vw;\n    height: 100vh;\n    font-size: 1.2vh;\n}"],sourceRoot:""}]);const a=r},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var s="",o=void 0!==e[5];return e[4]&&(s+="@supports (".concat(e[4],") {")),e[2]&&(s+="@media ".concat(e[2]," {")),o&&(s+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),s+=t(e),o&&(s+="}"),e[2]&&(s+="}"),e[4]&&(s+="}"),s})).join("")},e.i=function(t,s,o,i,n){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(o)for(var a=0;a<this.length;a++){var h=this[a][0];null!=h&&(r[h]=!0)}for(var c=0;c<t.length;c++){var l=[].concat(t[c]);o&&r[l[0]]||(void 0!==n&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=n),s&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=s):l[2]=s),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},537:t=>{t.exports=function(t){var e=t[1],s=t[3];if(!s)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(s)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),n="/*# ".concat(i," */"),r=s.sources.map((function(t){return"/*# sourceURL=".concat(s.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([n]).join("\n")}return[e].join("\n")}},379:t=>{var e=[];function s(t){for(var s=-1,o=0;o<e.length;o++)if(e[o].identifier===t){s=o;break}return s}function o(t,o){for(var n={},r=[],a=0;a<t.length;a++){var h=t[a],c=o.base?h[0]+o.base:h[0],l=n[c]||0,d="".concat(c," ").concat(l);n[c]=l+1;var p=s(d),u={css:h[1],media:h[2],sourceMap:h[3],supports:h[4],layer:h[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=i(u,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:m,references:1})}r.push(d)}return r}function i(t,e){var s=e.domAPI(e);return s.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;s.update(t=e)}else s.remove()}}t.exports=function(t,i){var n=o(t=t||[],i=i||{});return function(t){t=t||[];for(var r=0;r<n.length;r++){var a=s(n[r]);e[a].references--}for(var h=o(t,i),c=0;c<n.length;c++){var l=s(n[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}n=h}}},569:t=>{var e={};t.exports=function(t,s){var o=function(t){if(void 0===e[t]){var s=document.querySelector(t);if(window.HTMLIFrameElement&&s instanceof window.HTMLIFrameElement)try{s=s.contentDocument.head}catch(t){s=null}e[t]=s}return e[t]}(t);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(s)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,s)=>{t.exports=function(t){var e=s.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(s){!function(t,e,s){var o="";s.supports&&(o+="@supports (".concat(s.supports,") {")),s.media&&(o+="@media ".concat(s.media," {"));var i=void 0!==s.layer;i&&(o+="@layer".concat(s.layer.length>0?" ".concat(s.layer):""," {")),o+=s.css,i&&(o+="}"),s.media&&(o+="}"),s.supports&&(o+="}");var n=s.sourceMap;n&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleTagTransform(o,t,e.options)}(e,t,s)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},871:(t,e,s)=>{var o=s(379),i=s.n(o),n=s(795),r=s.n(n),a=s(569),h=s.n(a),c=s(565),l=s.n(c),d=s(216),p=s.n(d),u=s(589),m=s.n(u),f=s(890),g={};g.styleTagTransform=m(),g.setAttributes=l(),g.insert=h().bind(null,"head"),g.domAPI=r(),g.insertStyleElement=p(),i()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;class v{constructor(t){this.entity=t}perform(){console.error("Not Implemented")}isPlayer(){return this.entity===T.player}}class y extends v{constructor(t){super(t)}perform(){return this}}class w extends v{constructor(t,e){super(t),this.reason=e}perform(){return this}}class x{constructor(t,e,s){this.text=t,this.color=e||"#333",this.bold=!1,this.italics=!1,s&&(this.bold=s.bold||!1,this.italics=s.italics||!1)}isEqual(t){return this.text===t.text&&this.color===t.color&&this.bold===t.bold&&this.italics===t.italics}}class b{constructor(t=[]){this.subMessages=t,this.count=1}isEqual(t){if(this.subMessages.length!==t.length)return!1;for(let e=0;e<this.subMessages.length;e++){const s=this.subMessages[e],o=t[e];if(!s.isEqual(o))return!1}return!0}}const A=new class{constructor(){this.messages=[],this.builder=[]}text(t,e,s){return this.builder.push(new x(t,e,s)),this}build(t=!0){this.addMessage(this.builder.slice(0),t),this.builder=[]}clear(){this.messages=[]}addMessage(t,e=!0){if(e&&this.messages.length>0){const e=this.messages[this.messages.length-1];e.isEqual(t)?(e.count+=1,this.updateLastMessageCount(e)):(this.messages.push(new b(t)),this.addNewMessage())}else this.messages.push(new b(t)),this.addNewMessage()}updateLastMessageCount(t){console.log(t)}addNewMessage(){const t=this.messages[this.messages.length-1];console.log(t)}},M=A,C=new class{constructor(){this.eventHandler=null,this.player=null,this.gameMap=null,this.needsRenderUpdate=!1}handleEvents(){this.processAction(this.eventHandler.handleInput())}processAction(t){if(t&&this.eventHandler.isPlayerTurn){const e=t.perform();return!(e instanceof y||(e instanceof w?(e.reason&&M.text(e.reason).build(),1):(C.needsRenderUpdate=!0,C.player.fov.compute(C.player,5),C.player.fov.updateMap(),this.handleEnemyTurns(),0)))}}handleEnemyTurns(){this.eventHandler.isPlayerTurn=!1;for(const t of this.gameMap.actors)if(t!==this.player){const e=t.getComponent("ai");e&&e.perform()}this.eventHandler.isPlayerTurn=!0}},T=C,E=new class{constructor(){this.setupGameHtml(),this.resizeCanvas(),window.addEventListener("resize",this)}setupGameHtml(){const t=document.createElement("div");t.classList.add("game"),this.canvas=document.createElement("canvas"),this.canvas.classList.add("view"),t.appendChild(this.canvas),document.body.appendChild(t),this.ctx=this.canvas.getContext("2d")}handleEvent(t){"resize"===t.type&&this.resizeCanvas()}resizeCanvas(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,T.needsRenderUpdate=!0}clearAll(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}},k="ArrowUp",S="ArrowDown",H="Left Shift",N="Right Shift",D="Numpad .",_="Numpad 0",q="Numpad 1",F="Numpad 2",I="Numpad 3",L="Numpad 4",R="Numpad 5",U="Numpad 6",O="Numpad 7",P="Numpad 8",B="Numpad 9",W="Numpad Delete",X="Numpad Insert",V="Numpad End",j="Numpad ArrowDown",J="Numpad PageDown",G="Numpad ArrowLeft",z="Numpad Clear",K="Numpad ArrowRight",Y="Numpad Home",Z="Numpad ArrowUp",Q="Numpad PageUp",$=new class{constructor(){const t=this;t.defaultDelay=25,t.lastShiftUp=null,t.treatShiftNumpadEqual=!0,t.keysDown=[],t.keysDelayed=[],t.defaults=new Map,t.controls=new Map,t.defaults.set("up",[P,k]),t.defaults.set("down",[F,S]),t.defaults.set("nw",[O]),t.defaults.set("ne",[B]),t.defaults.set("sw",[q]),t.defaults.set("se",[I]),t.defaults.set("wait",[R]),t.load(),addEventListener("keydown",(function(e){"/"===e.key&&e.preventDefault(),t.treatShiftNumpadEqual&&e.getModifierState("NumLock")&&!e.shiftKey&&e.code.startsWith("Numpad")&&e.keyCode<90&&t.lastShiftUp&&(t.keysDown[t.lastShiftUp]=!0);const s=t.getKey(e.key,e.code);t.keysDown[s]=!0}),!1),addEventListener("keyup",(function(e){const s=t.getKey(e.key,e.code);s!==H&&s!==N||(t.lastShiftUp=s),delete t.keysDown[s],delete t.keysDelayed[s]}),!1)}getKey(t,e){if(e.startsWith("Arrow")||(e.endsWith("Left")?t="Left "+t:e.endsWith("Right")?t="Right "+t:e.startsWith("Numpad")&&(t="Numpad "+t)),this.treatShiftNumpadEqual)switch(t){case W:t=D;break;case X:t=_;break;case V:t=q;break;case j:t=F;break;case J:t=I;break;case G:t=L;break;case z:t=R;break;case K:t=U;break;case Y:t=O;break;case Z:t=P;break;case Q:t=B}return t}load(){const t=localStorage.getItem("controls");t?this.controls=new Map(JSON.parse(t)):this.resetToDefault()}save(){localStorage.setItem("controls",JSON.stringify(Array.from(this.controls.entries())))}setControls(t){this.controls=new Map;for(const[e,s]of t.entries()){const t=[];for(const e of s)t.push(e);this.controls.set(e,t)}this.save()}resetToDefault(){this.setControls(this.defaults)}clone(){const t=new Map;for(const[e,s]of this.controls.entries()){const o=[];for(const t of s)o.push(t);t.set(e,o)}return t}isPressed(t){const e=this;let s=!1,o=e.controls.get(t);if(!o){const s=e.defaults.get(t);s?(e.controls.set(t,s),e.save(),o=s):console.error("Missing keybindings for: ",t,o)}return o.forEach((function(t){t in e.keysDown&&(s=!0)})),s}isDelayed(t){const e=this;let s=!1;return this.controls.get(t).forEach((function(t){t in e.keysDelayed&&(s=!0)})),s}deleteKey(t,e){const s=this;s.controls.get(t).forEach((function(t){delete s.keysDown[t],e&&(s.keysDelayed[t]=!0)})),e&&setTimeout((function(){s.controls.get(t).forEach((function(t){delete s.keysDelayed[t]}))}),e)}testPressed(t,e){e=e||this.defaultDelay;const s=this;let o=!1;return s.isPressed(t)&&!s.isDelayed(t)&&(s.deleteKey(t,e),o=!0),o}};class tt extends v{constructor(t,e=0,s=0){super(t),this.dq=e,this.dr=s}perform(){console.error("Not Implemented")}}class et{static PI=Math.PI;static HEX_A=this.PI/3;static HEX_RADIUS_H=20;static HEX_RADIUS_V=20;static OFFSET_V=2*this.HEX_RADIUS_V;static OFFSET_H=this.HEX_RADIUS_H;constructor(){}static drawHex(t,e,s){t.beginPath();for(let o=0;o<6;o++)t.lineTo(e+et.HEX_RADIUS_H*Math.cos(et.HEX_A*o),s+et.HEX_RADIUS_V*Math.sin(et.HEX_A*o));t.closePath()}static hexToArray(t,e){return{x:Math.floor(e+t/2),y:t}}static arrayToHex(t,e){return{q:e,r:t-Math.floor(e/2)}}static axialRound(t,e){let s=Math.round(t),o=Math.round(e);const i=-t-e,n=Math.round(i),r=Math.abs(s-t),a=Math.abs(o-e),h=Math.abs(n-i);return r>a&&r>h?s=-o-n:a>h&&(o=-s-n),{q:s,r:o}}static pixelToHex(t){t.x-=this.HEX_RADIUS_H,t.y-=this.HEX_RADIUS_V;const e=2/3*t.x/this.HEX_RADIUS_H,s=(-1/3*t.x+Math.sqrt(3)/3*t.y)/this.HEX_RADIUS_V;return this.axialRound(e,s)}}class st extends tt{constructor(t,e,s){super(t,e,s)}perform(){const t=this.entity.getComponent("hex");if(t){const e=et.hexToArray(t.q+this.dq,t.r+this.dr),s=T.gameMap.getBlockingActorAtArrayLocation(e.x,e.y);if(!s)return new w(this.entity,"There's nothing to attack there!");{let t,e,o,i;this.isPlayer()?(t="You",e=""):(t=this.entity.name,e="s"),s===T.player?(o="You",i="#C00"):(o=s.name,i="#999");const n=this.entity.getComponent("fighter"),r=s.getComponent("fighter"),a=n.power-r.defense;let h=t+" attack"+e+" "+o;a>0?(h+=" for "+a+" hit points.",r.takeDamage(a)):h+=", but does no damage.",M.text(h,i).build()}}return this}}class ot extends tt{constructor(t,e,s){super(t,e,s)}perform(){const t=this.entity.getComponent("hex");if(t){const e=et.hexToArray(t.q+this.dq,t.r+this.dr);if(!T.gameMap.isInBounds(e.x,e.y))return new w(this.entity,"Location is outside of the map!");const s=T.gameMap.tiles[e.x][e.y];if(s.isWall())return new w(this.entity,"There's a "+s.name+" in the way!");if(T.gameMap.getBlockingActorAtArrayLocation(e.x,e.y))return new w(this.entity,"There's something in the way!");t.moveTo(e.x,e.y)}return this}}class it extends tt{constructor(t,e,s){super(t,e,s)}perform(){const t=this.entity.getComponent("hex");if(t){const e=et.hexToArray(t.q+this.dq,t.r+this.dr);return T.gameMap.getBlockingActorAtArrayLocation(e.x,e.y)?new st(this.entity,this.dq,this.dr).perform():new ot(this.entity,this.dq,this.dr).perform()}return this}}class nt extends v{constructor(t){super(t)}perform(){return this}}class rt extends class{constructor(){this.mouse={x:-1,y:-1},this.mouseDown=!1,window.addEventListener("mousemove",this),window.addEventListener("mousedown",this),window.addEventListener("mouseup",this),window.addEventListener("click",this),window.addEventListener("contextmenu",this),window.addEventListener("change",this),window.addEventListener("keydown",this),this.isPlayerTurn=!0,this.targetedTile=null,this.pathTiles=[]}teardown(){window.removeEventListener("mousemove",this),window.removeEventListener("mousedown",this),window.removeEventListener("mouseup",this),window.removeEventListener("click",this),window.removeEventListener("contextmenu",this),window.removeEventListener("change",this),window.removeEventListener("keydown",this)}handleEvent(t){switch(t.type){case"mousemove":this.onMouseMove(t);break;case"mousedown":this.onMouseDown(t);break;case"mouseup":this.onMouseUp(t);break;case"click":this.onLeftClick(t);break;case"contextmenu":this.onRightClick(t);break;case"change":this.onChange(t);break;case"keydown":this.onKeydown(t)}}handleInput(){}onMouseMove(){}onMouseDown(){this.mouseDown=!0}onMouseUp(){this.mouseDown=!1}onLeftClick(){}onRightClick(){}onChange(){}onKeydown(){}}{constructor(){super()}teardown(){super.teardown()}handleInput(){let t=null;return this.isPlayerTurn&&T.player.isAlive()&&($.testPressed("up")?t=new it(T.player,0,-1):$.testPressed("down")?t=new it(T.player,0,1):$.testPressed("nw")?t=new it(T.player,-1,0):$.testPressed("ne")?t=new it(T.player,1,-1):$.testPressed("sw")?t=new it(T.player,-1,1):$.testPressed("se")?t=new it(T.player,1,0):$.testPressed("wait")&&(t=new nt(T.player))),t}onMouseMove(t){this.mouse.x=t.clientX,this.mouse.y=t.clientY;const e=et.pixelToHex(this.mouse),s=T.gameMap.getTileFromHexCoords(e.q,e.r);if(s&&this.targetedTile!==s){for(const t of this.pathTiles)t.highlighted=!1;this.targetedTile&&(this.targetedTile.highlighted=!1),s.highlighted=!0,this.targetedTile=s;const t=T.player.fov.getCostGraph(),e=T.player.getComponent("hex"),o=s.getComponent("hex"),i=T.player.fov.getPath(t,e,o);for(const t of i){const e=t.row+T.player.fov.left,s=t.col+T.player.fov.top,o=T.gameMap.getTileFromArrayCoords(e,s);o.highlighted=!0,this.pathTiles.push(o)}}T.needsRenderUpdate=!0}}class at{constructor(t={},e,s){this.args=t,this.baseType=e||"component",this.type=s||this.baseType,this.parentEntity=t.parentEntity,this.cachedSave=null}clearSaveCache(){this.cachedSave=null,this.parentEntity?.clearSaveCache()}save(){return null}hasComponent(){return this.args.components&&void 0!==this.args.components[this.type]}isPlayer(){return this.parentEntity===T.player}saveBoolean(t,e){if(this.cachedSave)return this.cachedSave;const s={};return t!==e&&(s[this.type]=t),this.cachedSave=s,s}loadBooleanOrObject(t){const e=typeof this.args.components[this.type];return"boolean"===e?this.args.components[this.type]:"object"===e?this.args.components[this.type][t]:void 0}loadArg(t,e){return this.args.components[this.type][t]||e}loadArgArray(t){const e=[],s=this.args.components[this.type][t].split(",");for(const t of s)e.push(t.trim());return e}}class ht extends at{constructor(t={},e){super(t,"ai",e)}save(){return null}perform(){console.error("Not Implemented")}}class ct extends ht{constructor(t={}){super(t,"aiDead"),this.previousAI="",this.hasComponent()&&(this.previousAI=this.loadArg("previousAI",""))}save(){if(this.cachedSave)return this.cachedSave;const t={aiDead:{}};return t.aiDead.previousAI=this.previousAI,this.cachedSave=t,t}perform(){}}class lt extends at{constructor(t){super(t,"fov"),this.explored=!1,this.visible=!1,this.hasComponent()&&(this.explored=this.loadArg("explored",!1),this.visible=this.loadArg("visible",!1))}save(){if(this.cachedSave)return this.cachedSave;const t={fov:{}};return!1!==this.explored&&(t.fov.explored=this.explored),!1!==this.visible&&(t.fov.visible=this.visible),this.cachedSave=t,t}setExplored(t){this.explored=t,this.clearSaveCache()}setVisible(t){this.visible=t}}class dt{constructor(t,e,s){this.row=t,this.col=e,this.q=this.col,this.r=this.row-Math.floor(this.col/2),this.s=-this.q-this.r,this.weight=s}getCost(){return this.weight}isWall(){return 0===this.weight}}class pt{constructor(t){this.content=[],this.scoreFunction=t}push(t){this.content.push(t),this.sinkDown(this.content.length-1)}pop(){const t=this.content[0],e=this.content.pop();return this.content.length>0&&(this.content[0]=e,this.bubbleUp(0)),t}remove(t){const e=this.content.indexOf(t),s=this.content.pop();e!==this.content.length-1&&(this.content[e]=s,this.scoreFunction(s)<this.scoreFunction(t)?this.sinkDown(e):this.bubbleUp(e))}size(){return this.content.length}rescoreElement(t){this.sinkDown(this.content.indexOf(t))}sinkDown(t){const e=this.content[t];for(;t>0;){const s=(t+1>>1)-1,o=this.content[s];if(!(this.scoreFunction(e)<this.scoreFunction(o)))break;this.content[s]=e,this.content[t]=o,t=s}}bubbleUp(t){const e=this.content.length,s=this.content[t],o=this.scoreFunction(s);let i=!1;for(;!i;){const n=t+1<<1,r=n-1;let a,h=null;if(r<e){const t=this.content[r];a=this.scoreFunction(t),a<o&&(h=r)}if(n<e){const t=this.content[n];this.scoreFunction(t)<(null===h?o:a)&&(h=n)}if(null===h){i=!0;break}this.content[t]=this.content[h],this.content[h]=s,t=h}}}class ut{constructor(){}static pathTo(t){let e=t;const s=[];for(;e.parent;)s.unshift(e),e=e.parent;return s}static getHeap(){return new pt((function(t){return t.f}))}static search(t,e,s,o){t.cleanDirty();const i=(o=o||{}).closest||!1,n=this.getHeap();let r=e;for(e.h=this.heuristicManhattanHex(e,s),t.markDirty(e),n.push(e);n.size()>0;){const e=n.pop();if(e===s)return this.pathTo(e);e.closed=!0;const o=t.neighbors(e);for(let a=0,h=o.length;a<h;++a){const h=o[a];if(h.closed||h.isWall())continue;const c=e.g+h.getCost(e),l=h.visited;(!l||c<h.g)&&(h.visited=!0,h.parent=e,h.h=h.h||this.heuristicManhattanHex(h,s),h.g=c,h.f=h.g+h.h,t.markDirty(h),i&&(h.h<r.h||h.h===r.h&&h.g<r.g)&&(r=h),l?n.rescoreElement(h):n.push(h))}}return i?this.pathTo(r):[]}static heuristicManhattanHex(t,e){return(Math.abs(e.q-t.q)+Math.abs(e.r-t.r)+Math.abs(e.s-t.s))/2}static cleanNode(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}}class mt{constructor(t){this.nodes=[],this.grid=[];for(let e=0;e<t.length;e++){this.grid[e]=[];for(let s=0,o=t[e];s<o.length;s++){const t=new dt(e,s,o[s]);this.grid[e][s]=t,this.nodes.push(t)}}this.init()}init(){this.dirtyNodes=[];for(let t=0;t<this.nodes.length;t++)ut.cleanNode(this.nodes[t])}cleanDirty(){for(let t=0;t<this.dirtyNodes.length;t++)ut.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]}markDirty(t){this.dirtyNodes.push(t)}neighbors(t){const e=[],s=t.q,o=t.r;return this.addNeighbor(e,s,o-1),this.addNeighbor(e,s+1,o-1),this.addNeighbor(e,s+1,o),this.addNeighbor(e,s,o+1),this.addNeighbor(e,s-1,o+1),this.addNeighbor(e,s-1,o),e}addNeighbor(t,e,s){const o=et.hexToArray(e,s);this.grid[o.x]&&this.grid[o.x][o.y]&&t.push(this.grid[o.x][o.y])}}class ft extends class{constructor(){this.previousVisibleTiles=[],this.visibleTiles=[],this.visibleActors=[]}compute(t,e){this.previousVisibleTiles=this.visibleTiles,this.visibleTiles=[],this.visibleActors=[],this.hex=t.getComponent("hex"),this.q=this.hex.q,this.r=this.hex.r,this.tile=T.gameMap.getTileFromHexCoords(this.q,this.r);const s=this.hex.row,o=this.hex.col;let i=o-e;i%2==1&&(i-=1),this.left=Math.max(0,s-e),this.right=Math.min(T.gameMap.rows,s+e),this.top=Math.max(0,i),this.bottom=Math.min(T.gameMap.cols,o+e)}addVisibleTile(t){-1===this.visibleTiles.indexOf(t)&&this.visibleTiles.push(t)}addVisibleActor(t){-1===this.visibleActors.indexOf(t)&&this.visibleActors.push(t)}exploreTileByHex(t,e){const s=et.hexToArray(t,e);this.exploreTileByArray(s.x,s.y)}exploreTileByArray(t,e){this.addVisibleTile(T.gameMap.tiles[t][e]);for(const s of T.gameMap.actors){const o=s.getComponent("hex");o&&t===o.row&&e===o.col&&this.addVisibleActor(s)}}updateMap(){for(const t of this.previousVisibleTiles){const e=t.getComponent("fov");e&&e.setVisible(!1)}for(const t of this.visibleTiles){const e=t.getComponent("fov");e?(e.setExplored(!0),e.setVisible(!0)):t.setComponent(new lt({components:{fov:{explored:!0,visible:!0}}}))}}getCostGraph(){const t=this.right-this.left,e=this.bottom-this.top,s=Array(t).fill().map((()=>Array(e).fill(0)));for(const t of this.visibleTiles){if(t.isWall())continue;const e=t.getComponent("hex");s[e.row-this.left][e.col-this.top]+=10}for(const t of this.visibleActors)if(t.isAlive()){const e=t.getComponent("hex");s[e.row-this.left][e.col-this.top]+=100}return new mt(s)}getPath(t,e,s){const o=t.grid[e.row-this.left][e.col-this.top],i=t.grid[s.row-this.left][s.col-this.top];return ut.search(t,o,i)}}{constructor(){super()}compute(t,e){super.compute(t,e),this.exploreTileByHex(this.q,this.r);for(let t=1;t<=6;t++)this.exploreDirection(this.q,this.r,t,e)}exploreDirection(t,e,s,o){let i=s+1;i>6&&(i=1);let n,r,a=!1,h=!1;const c=T.gameMap.getTileNeighbor(t,e,s);c&&(n=c.getComponent("hex"),this.exploreTileByArray(n.row,n.col),c.isWall()||(a=!0));const l=T.gameMap.getTileNeighbor(t,e,i);if(l&&(r=l.getComponent("hex"),this.exploreTileByArray(r.row,r.col),l.isWall()||(h=!0)),--o>1){if(a||h){let t;if(n?t=T.gameMap.getTileNeighbor(n.q,n.r,i):r&&(t=T.gameMap.getTileNeighbor(r.q,r.r,s)),t){const e=t.getComponent("hex");this.exploreTileByArray(e.row,e.col)}}a&&this.exploreDirection(n.q,n.r,s,o),h&&this.exploreDirection(r.q,r.r,s,o)}}}class gt extends v{constructor(t){super(t)}perform(){const t=Math.floor(7*Math.random());if(0===t)return new nt(this.entity).perform();{let e=0,s=0;switch(t){case 1:e=-1;break;case 2:e=-1,s=1;break;case 3:s=1;break;case 4:e=1;break;case 5:e=1,s=-1;break;default:s=-1}return new ot(this.entity,e,s)}}}class vt extends ht{constructor(t={}){super(t,"aiMeleeChase"),this.fov=new ft,this.chaseLocation=null,this.radius=5,this.movementActions=1,this.currentMovement=0,this.hasComponent()&&(this.radius=this.loadArg("radius",5),this.movementActions=this.loadArg("movementActions",1),this.currentMovement=this.loadArg("currentMovement",0))}save(){if(this.cachedSave)return this.cachedSave;const t={aiMeleeChase:{}};return 5!==this.radius&&(t.aiMeleeChase.radius=this.radius),1!==this.movementActions&&(t.aiMeleeChase.movementActions=this.movementActions),0!==this.currentMovement&&(t.aiMeleeChase.currentMovement=this.currentMovement),this.cachedSave=t,t}perform(){const t=this.parentEntity,e=t.getComponent("hex");if(e){this.fov.compute(t,this.radius);let s=[],o=null;const i=t.getComponent("faction");if(i)for(const t of this.fov.visibleActors)if(t.isAlive()){const n=t.getComponent("faction");if(i.isEnemyOf(n)){const i=t.getComponent("hex");if(i){const n=e.distanceTo(i);null===o||n<o?(s=[],s.push(t),o=n):n===o&&s.push(t)}}}let n;if(1===s.length?n=s[0]:s.length>1&&(n=s[Math.floor(Math.random()*s.length)]),n){const t=n.getComponent("hex");if(this.chaseLocation={row:t.row,col:t.col,q:t.q,r:t.r},o<=1)return new st(this.parentEntity,t.q-e.q,t.r-e.r).perform()}else if(null!==this.chaseLocation&&this.chaseLocation.q===e.q&&this.chaseLocation.r===e.r&&(this.chaseLocation=null),null===this.chaseLocation)return new gt(this.parentEntity).perform();if(this.currentMovement+=this.movementActions,this.currentMovement>=1){const s=this.fov.getCostGraph(),o=this.fov.getPath(s,e,this.chaseLocation);let i;for(;this.currentMovement>=1;){if(o&&o.length>0){const s=o.shift();if(s){const o=s.row+this.fov.left,n=s.col+this.fov.top,r=T.gameMap.getTileFromArrayCoords(o,n).getComponent("hex"),a=r.q-e.q,h=r.r-e.r;i=new it(t,a,h).perform()}}else i=new nt(t).perform();this.currentMovement-=1}return i}}}}class yt extends at{constructor(t={}){super(t,"blocksFov"),this.blocksFov=!1,this.hasComponent()&&(this.blocksFov=this.loadBooleanOrObject("blocksFov"))}save(){return this.saveBoolean(this.blocksFov,!1)}}class wt extends at{constructor(t={}){super(t,"blocksMovement"),this.blocksMovement=!1,this.hasComponent()&&(this.blocksMovement=this.loadBooleanOrObject("blocksMovement"))}save(){return this.saveBoolean(this.blocksMovement,!1)}onEntityDeath(){this.blocksMovement=!1,this.clearSaveCache()}}class xt extends at{constructor(t={}){super(t,"faction"),this.factions=[],this.enemies=[],this.hasComponent()&&(this.factions=this.loadArgArray("factions"),this.enemies=this.loadArgArray("enemies"))}save(){if(this.cachedSave)return this.cachedSave;const t={faction:{}};return t.faction.factions=this.factions.toString(),t.faction.enemies=this.enemies.toString(),this.cachedSave=t,t}isEnemyOf(t){if(!t)return!1;for(const e of this.factions)if(t.enemies.indexOf(e)>-1)return!0;return!1}}class bt extends at{constructor(t){super(t,"fighter"),this.hp=0,this.maxHp=0,this.defense=0,this.power=0,this.hasComponent()&&(this.hp=this.loadArg("hp",0),this.maxHp=this.loadArg("maxHp",0),this.defense=this.loadArg("defense",0),this.power=this.loadArg("power",0))}save(){if(this.cachedSave)return this.cachedSave;const t={fighter:{}};return t.fighter.hp=this.hp,t.fighter.maxHp=this.maxHp,t.fighter.defense=this.defense,t.fighter.power=this.power,this.cachedSave=t,t}setHp(t){this.hp=Math.max(0,Math.min(t,this.maxHp))}takeDamage(t){this.hp-=t,this.hp<=0&&this.die(),this.clearSaveCache()}die(){const t=this.parentEntity;this.isPlayer()?M.text("You died!","#f00").build():M.text(t.name+" dies!","#ffa030").build(),t.callEvent("onEntityDeath");const e=t.getComponent("ai");if(e){const s={components:{aiDead:{previousAI:e.type}}};t.removeComponent("ai"),t.setComponent(new ct(s))}this.clearSaveCache()}}class At extends at{constructor(t={}){super(t,"hex"),this.row=0,this.col=0,this.q=0,this.r=0,this.s=0,this.hasComponent()&&(this.row=this.loadArg("row",0),this.col=this.loadArg("col",0)),this.updateHexCoords()}save(){if(this.cachedSave)return this.cachedSave;const t={hex:{}};return 0!==this.row&&(t.hex.row=this.row),0!==this.col&&(t.hex.col=this.col),this.cachedSave=t,t}moveTo(t,e){this.row=t,this.col=e,this.updateHexCoords()}updateHexCoords(){this.q=this.col,this.r=this.row-Math.floor(this.col/2),this.s=-this.q-this.r}isEdge(t){return 0===this.row||0===this.col||this.row===t.rows-1||this.col===t.cols-1}getDisplayX(){return this.q}getDisplayY(){return this.r+this.q/2}getTileFromArray(t,e,s){const o=et.hexToArray(e,s);return t[o.x]&&t[o.x][o.y]?t[o.x][o.y]:null}getNumAdjacentWalls(t){const e=this.getTileFromArray(t,this.q,this.r-1),s=this.getTileFromArray(t,this.q+1,this.r-1),o=this.getTileFromArray(t,this.q+1,this.r),i=this.getTileFromArray(t,this.q,this.r+1),n=this.getTileFromArray(t,this.q-1,this.r+1),r=this.getTileFromArray(t,this.q-1,this.r);return this.isTileWall(e)+this.isTileWall(s)+this.isTileWall(o)+this.isTileWall(i)+this.isTileWall(n)+this.isTileWall(r)}isTileWall(t){return null===t||t.isWall()?1:0}isInRange(t,e){return Math.abs(this.q-t.q)<e&&Math.abs(this.r-t.r)<e&&Math.abs(this.s-t.s)<e}distanceTo(t){const e=Math.abs(this.q-t.q),s=Math.abs(this.r-t.r),o=Math.abs(this.s-t.s);return Math.max(e,Math.max(s,o))}}const Mt=new class{constructor(){this.types=new Map,this.init()}init(){this.load(new ct),this.load(new vt),this.load(new yt),this.load(new wt),this.load(new xt),this.load(new bt),this.load(new lt),this.load(new At)}load(t){this.types.set(t.type,t)}create(t,e,s){return new(0,this.types.get(e).constructor)(s)}};class Ct{constructor(){}static extend(t){t=t||{};for(let e=1;e<arguments.length;e++)if(arguments[e])for(const s in arguments[e])Object.prototype.hasOwnProperty.call(arguments[e],s)&&(t[s]=arguments[e][s]);return t}static deep(t){t=t||{};for(let e=1;e<arguments.length;e++){const s=arguments[e];if(s)for(const e in s)Object.prototype.hasOwnProperty.call(s,e)&&("object"==typeof s[e]?s[e]instanceof Array?t[e]=s[e].slice(0):t[e]=Ct.deep(t[e],s[e]):"boolean"==typeof t&&void 0===t[e]?t=s[e]:t[e]=s[e])}return t}}class Tt{constructor(t){this.type=t.type||"entity",this.id=t.id,this.name=t.name||"",this.description=t.description||"",this.sprite=t.sprite||"",this.letter=t.letter||"?",this.color=t.color||"#fff",this.componentArray=[],this.components={},t.components&&(this.loadComponents(t,t.components),this.callEvent("onComponentsLoaded")),this.cachedSave=null}clone(){console.error("Not implemented")}callEvent(t,e){for(const s of this.componentArray)s[t]?.(e);this[t]?.(e)}draw(){}loadComponents(t,e){const s=this;Object.keys(e).forEach((function(e){const o=Mt.types.get(e);if(o){const i=o.baseType;s.getComponent(i)||s.setComponent(Mt.create(this,e,t),!1)}}))}setComponent(t){t.parentEntity=this,this.components[t.baseType]=t,this.componentArray.push(t)}getComponent(t){return this.components[t]}removeComponent(t){if(this.components[t]){this.components[t]=void 0;for(const e of this.componentArray)if(e.baseType===t){const t=this.componentArray.indexOf(e);this.componentArray.splice(t,1);break}}}clearSaveCache(){this.cachedSave=null}save(){if(null!==this.cachedSave)return this.cachedSave;const t={id:this.id,type:this.type,name:this.name,description:this.description,sprite:this.sprite,letter:this.letter,color:this.color,components:{}};for(const e of this.componentArray){const s=e.save();null!==s&&s!=={}&&Ct.deep(t.components,s)}return this.cachedSave=t,t}}class Et extends Tt{constructor(t={}){t.type="actor",super(t),this.fov=new ft}clone(){return new Et(this.save())}isAlive(){const t=this.getComponent("fighter");return t&&t.hp>0}draw(){const t=this.getComponent("hex"),e=et.HEX_RADIUS_H+et.HEX_RADIUS_H*(1+Math.cos(et.HEX_A))*t.getDisplayX(),s=1.15*et.HEX_RADIUS_V+2*et.HEX_RADIUS_V*Math.sin(et.HEX_A)*t.getDisplayY();super.draw(e,s),E.ctx.fillStyle=this.color||"white",E.ctx.textAlign="center",E.ctx.textBaseline="middle",E.ctx.font="bold 26px serif",E.ctx.fillText(this.letter,e,s)}setName(t){this.name=t,this.clearSaveCache()}onEntityDeath(){this.letter="%",this.color="red",this.setName("Remains of "+this.name)}}class kt extends Tt{constructor(t={}){t.type="tile",super(t),this.borderColor=t.borderColor||"#000"}clone(){return new kt(this.save())}save(){const t=super.save();return t.borderColor=this.borderColor,t}isWall(){return this.getComponent("blocksMovement")?.blocksMovement}draw(t,e){const s=this.getComponent("fov");s&&s.explored&&(et.drawHex(E.ctx,t,e),this.color&&(E.ctx.fillStyle=this.color,E.ctx.fill()),E.ctx.strokeStyle=this.borderColor,E.ctx.stroke(),s.visible||(et.drawHex(E.ctx,t,e),E.ctx.fillStyle="rgba(0, 0, 0, .25)",E.ctx.fill(),E.ctx.color="rgba(0, 0, 0, .25)",E.ctx.stroke())),this.highlighted&&(et.drawHex(E.ctx,t,e),E.ctx.fillStyle="rgba(0,0,255,0.3)",E.ctx.fill())}}const St=JSON.parse('[{"id":"base_actor","type":"actor","components":{"blocksMovement":true,"hex":{"row":0,"col":0}}},{"id":"base_enemy","extends":"base_actor","components":{"faction":{"factions":"monsters","enemies":"player"}}}]'),Ht=JSON.parse('[{"id":"orc","extends":"base_enemy","name":"Orc","color":"#3f7f3f","letter":"o","components":{"fighter":{"hp":10,"maxHp":10,"defense":0,"power":3},"aiMeleeChase":{}}},{"id":"troll","extends":"base_enemy","name":"Troll","color":"#007f00","letter":"T","components":{"fighter":{"hp":16,"maxHp":16,"defense":1,"power":4},"aiMeleeChase":{}}}]'),Nt=JSON.parse('[{"id":"player","extends":"base_actor","name":"Player","color":"#00f","letter":"@","components":{"faction":{"factions":"player","enemies":"monsters"},"fighter":{"hp":30,"maxHp":30,"defense":2,"power":5}}}]'),Dt=JSON.parse('[{"id":"base_tile","type":"tile","components":{}}]'),_t=JSON.parse('[{"id":"base_floor","extends":"base_tile","components":{}},{"id":"cave_floor","extends":"base_floor","name":"floor","color":"#ddd","borderColor":"#999"}]'),qt=JSON.parse('[{"id":"base_wall","extends":"base_tile","components":{"blocksMovement":true,"blocksFov":true}},{"id":"cave_wall","extends":"base_wall","name":"wall","color":"#666","borderColor":"#222"}]'),Ft=new class{constructor(){this.types=new Map,this.templates=new Map,this.init()}init(){this.load(new Et),this.load(new kt),this.loadTemplates()}load(t){this.types.set(t.type,t)}create(t,e={}){let s;if(s="object"==typeof t?t:JSON.parse(t),void 0!==s.extends){if(this.templates.has(s.extends)){const t=JSON.parse(this.templates.get(s.extends));return delete s.extends,this.create(Ct.deep(t,s),e)}console.error("Json template for id '"+s.extends+"' is missing. Cannot extend from it.")}return new(this.types.get(s.type).constructor)(Ct.deep(s,e))}createFromTemplate(t,e={}){return this.templates.has(t)?this.create(this.templates.get(t),e):(console.error("Json template for id '"+t+"' is missing."),null)}loadTemplate(t){for(const e of t){const t=e.id;this.templates.has(t)?console.error("Template for entity id '"+t+"' already exists."):this.templates.set(t,JSON.stringify(e))}}loadTemplates(){this.loadTemplate(St),this.loadTemplate(Ht),this.loadTemplate(Nt),this.loadTemplate(Dt),this.loadTemplate(_t),this.loadTemplate(qt)}},It=JSON.parse('[{"id":"cave","levels":[{"level":1,"actors":[{"id":"orc","weight":80},{"id":"troll","weight":20}]}]}]'),Lt=new class{constructor(){this.entityGroups=new Map,this.generators=new Map,this.loadGenerator(It)}loadGenerator(t){for(const e of t)this.generators.set(e.id,e.levels)}getChancesForLevel(t,e){let s;const o=this.generators.get(t);for(const t of o){if(t.level>e)break;s=t}return s}getActorForLevel(t,e){const s=this.getChancesForLevel(t,e).actors;let o=this.getRandomFromGroup(s);for(;void 0!==o.group;){const t=this.entityGroups.get(o.group);o=this.getRandomFromGroup(t)}return o.id}getRandomFromGroup(t){let e,s=0;for(const e of t)s+=e.weight;let o=0;const i=Math.random()*s;for(const s of t)if(o+=s.weight,i<o){e=s;break}return e}};class Rt extends class{constructor(t,e){this.rows=t,this.cols=e,this.init()}init(){this.tiles=class{constructor(){}static create2dArray(t){const e=[];for(let s=0;s<t;s++)e[s]=[];return e}}.create2dArray(this.rows),this.actors=[]}isInBounds(t,e){return 0<=t&&t<this.rows&&0<=e&&e<this.cols}create(){}draw(){for(let t=0;t<this.rows;t++){let e=et.OFFSET_V+2*et.HEX_RADIUS_V*Math.sin(et.HEX_A)*t;for(let s=0;s<this.cols;s++){const o=et.OFFSET_H+et.HEX_RADIUS_H*(1+Math.cos(et.HEX_A))*s;e-=(-1)**s*et.HEX_RADIUS_V*Math.sin(et.HEX_A),this.tiles[t][s].draw(o,e)}}for(const t of this.actors){const e=t.getComponent("hex"),s=T.gameMap.getTileFromArrayCoords(e.row,e.col).getComponent("fov");s&&s.visible&&t.draw()}}getTileFromArrayCoords(t,e){return this.tiles[t]?this.tiles[t][e]:null}getTileFromHexCoords(t,e){const s=et.hexToArray(t,e);return this.tiles[s.x]?this.tiles[s.x][s.y]:null}getTileNeighbor(t,e,s){switch(s){case 1:return this.getTileFromHexCoords(t-1,e);case 2:return this.getTileFromHexCoords(t-1,e+1);case 3:return this.getTileFromHexCoords(t,e+1);case 4:return this.getTileFromHexCoords(t+1,e);case 5:return this.getTileFromHexCoords(t+1,e-1);default:return this.getTileFromHexCoords(t,e-1)}}getBlockingActorAtArrayLocation(t,e){let s=null;for(const o of this.actors){const i=o.getComponent("hex");if(i&&t===i.row&&e===i.col){const t=o.getComponent("blocksMovement");if(t&&t.blocksMovement){s=o;break}}}return s}}{constructor(t,e){super(t,e),this.percentAreWalls=.35,this.wallEntity=Ft.createFromTemplate("cave_wall",{components:{hex:{row:0,col:0}}}),this.floorEntity=Ft.createFromTemplate("cave_floor",{components:{hex:{row:0,col:0}}}),this.create()}create(){this.randomFillBuild(),this.makeCaverns(15,0)}randomFillBuild(){const t=Math.floor(Math.random()*this.rows),e=Math.floor(Math.random()*this.cols);for(let s=0;s<this.rows;s++)for(let o=0;o<this.cols;o++){let i;i=0===s||0===o||s===this.rows-1||o===this.cols-1?this.wallEntity.clone():s===t||o===e?this.floorEntity.clone():Math.random()<this.percentAreWalls?this.wallEntity.clone():this.floorEntity.clone(),i.getComponent("hex").moveTo(s,o),this.tiles[s][o]=i}}addRandomNoise(){for(let t=1;t<this.rows-1;t++)for(let e=1;e<this.cols-1;e++)if(Math.random()<.02){const s=this.wallEntity.clone();s.getComponent("hex").moveTo(t,e),this.tiles[t][e]=s}}makeCaverns(t,e){this.addRandomNoise();for(let t=0;t<this.rows;t++)for(let e=0;e<this.cols;e++){let s;s=this.placeWallLogic(this.tiles[t][e])?this.wallEntity.clone():this.floorEntity.clone(),s.getComponent("hex").moveTo(t,e),this.tiles[t][e]=s}t--;const s=this;t>0?e>0?(setTimeout((()=>{s.makeCaverns(t,e)}),e),T.needsRenderUpdate=!0):s.makeCaverns(t):T.needsRenderUpdate=!0}placeWallLogic(t){const e=t.getComponent("hex"),s=e.getNumAdjacentWalls(this.tiles);if(e.isEdge(this))return!0;if(t.isWall()){if(s>=2)return!0}else if(s>=4)return!0;return!1}placeEntities(t,e,s,o){const i=T.player.getComponent("hex");for(let n=0;n<this.rows;n++)for(let r=0;r<this.cols;r++){const a=this.tiles[n][r];if(!a.isWall()){const n=a.getComponent("hex");if(!i.isInRange(n,o)&&Math.random()<s){const s=Lt.getActorForLevel(t,e),o=Ft.createFromTemplate(s,{components:{hex:{row:n.row,col:n.col}}});this.actors.push(o)}}}}}!function(){function t(){T.handleEvents(),T.needsRenderUpdate&&(E.clearAll(),T.gameMap.draw(),T.needsRenderUpdate=!1),window.requestAnimationFrame(t)}!function(){T.gameMap=new Rt(35,80),T.player=Ft.createFromTemplate("player",{components:{hex:{row:0,col:0}}});const e=T.player.getComponent("hex");let s=!1;for(;!s;){const t=Math.floor(Math.random()*(T.gameMap.rows-4))+2,o=Math.floor(Math.random()*(T.gameMap.cols-4))+2;T.gameMap.tiles[t][o].isWall()||(e.moveTo(t,o),s=!0)}T.gameMap.actors.push(T.player),T.gameMap.placeEntities("cave",1,.03,5),T.eventHandler=new rt,T.needsRenderUpdate=!0,T.player.fov.compute(T.player,5),T.player.fov.updateMap(),window.requestAnimationFrame(t)}()}()}},t=>{t(t.s=871)}]);
//# sourceMappingURL=app.42d2c1f7f5ba2e8782d2.js.map